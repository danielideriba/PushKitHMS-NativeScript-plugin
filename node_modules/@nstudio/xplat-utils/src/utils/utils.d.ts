import type { FrameworkTypes, PlatformNxExtraTypes, PlatformTypes, PlatformWithNxTypes } from './types';
import { Tree } from '@angular-devkit/schematics';
export declare const supportedPlatforms: Array<PlatformTypes>;
export declare const supportedNxExtraPlatforms: Array<PlatformNxExtraTypes>;
export declare const supportedPlatformsWithNx: Array<PlatformWithNxTypes>;
export declare const supportedFrameworks: Array<FrameworkTypes>;
export declare function getNpmScope(): string;
export declare function getPrefix(): string;
export declare function getFrontendFramework(): "angular";
export declare function getGroupByName(): boolean;
export declare function getAppName(options: any, platform: PlatformTypes): any;
export declare function isXplatWorkspace(): boolean;
export declare function setTest(): void;
export declare function isTesting(): boolean;
export declare function jsonParse(content: string): any;
export declare function getJsonFromFile(tree: Tree, path: string): any;
export declare function updateJsonFile(tree: Tree, path: string, jsonData: any): import("@angular-devkit/schematics/src/tree/interface").Tree;
export declare function updateFile(tree: Tree, path: string, content: string): import("@angular-devkit/schematics/src/tree/interface").Tree;
export declare function getNxWorkspaceConfig(tree: Tree): any;
export declare const copy: (tree: Tree, from: string, to: string) => void;
export declare function getRootTsConfigPath(): string;
export declare function getAppPaths(tree: Tree, type?: PlatformTypes): Array<string>;
export declare function prerun(options?: any, init?: boolean): (tree: Tree) => import("@angular-devkit/schematics/src/tree/interface").Tree;
export declare function sanitizeCommaDelimitedArg(input: string): Array<string>;
export declare function parseProjectNameFromPath(input: string): string;
