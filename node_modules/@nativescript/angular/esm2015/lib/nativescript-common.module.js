import { CommonModule } from '@angular/common';
import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';
import { FramePageModule } from './cdk/frame-page/frame-page.module';
import { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './cdk/action-bar';
import { ListViewComponent, TemplateKeyDirective } from './cdk/list-view/list-view.component';
import { registerNativeScriptViewComponents } from './element-registry';
import { ModalDialogService } from './legacy/directives/dialogs';
import { TabViewDirective, TabViewItemDirective } from './cdk/tab-view';
import { AndroidFilterComponent } from './cdk/platform-filters/android-filter.component';
import { IOSFilterComponent } from './cdk/platform-filters/ios-filter.component';
const CDK_COMPONENTS = [ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective, ListViewComponent, TemplateKeyDirective, TabViewDirective, TabViewItemDirective, AndroidFilterComponent, IOSFilterComponent];
registerNativeScriptViewComponents();
export class NativeScriptCommonModule {
}
NativeScriptCommonModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, FramePageModule],
                declarations: [...CDK_COMPONENTS],
                exports: [CommonModule, FramePageModule, ...CDK_COMPONENTS],
                providers: [ModalDialogService],
                schemas: [NO_ERRORS_SCHEMA],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlc2NyaXB0LWNvbW1vbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL25hdGl2ZXNjcmlwdC1jb21tb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDOUYsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDakUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDekYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFFakYsTUFBTSxjQUFjLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsbUJBQW1CLEVBQUUseUJBQXlCLEVBQUUsaUJBQWlCLEVBQUUsb0JBQW9CLEVBQUUsZ0JBQWdCLEVBQUUsb0JBQW9CLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztBQUV6TyxrQ0FBa0MsRUFBRSxDQUFDO0FBU3JDLE1BQU0sT0FBTyx3QkFBd0I7OztZQVBwQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQztnQkFDeEMsWUFBWSxFQUFFLENBQUMsR0FBRyxjQUFjLENBQUM7Z0JBQ2pDLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxlQUFlLEVBQUUsR0FBRyxjQUFjLENBQUM7Z0JBQzNELFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUMvQixPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzthQUM1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOT19FUlJPUlNfU0NIRU1BLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRnJhbWVQYWdlTW9kdWxlIH0gZnJvbSAnLi9jZGsvZnJhbWUtcGFnZS9mcmFtZS1wYWdlLm1vZHVsZSc7XG5pbXBvcnQgeyBBY3Rpb25CYXJDb21wb25lbnQsIEFjdGlvbkJhclNjb3BlLCBBY3Rpb25JdGVtRGlyZWN0aXZlLCBOYXZpZ2F0aW9uQnV0dG9uRGlyZWN0aXZlIH0gZnJvbSAnLi9jZGsvYWN0aW9uLWJhcic7XG5pbXBvcnQgeyBMaXN0Vmlld0NvbXBvbmVudCwgVGVtcGxhdGVLZXlEaXJlY3RpdmUgfSBmcm9tICcuL2Nkay9saXN0LXZpZXcvbGlzdC12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyByZWdpc3Rlck5hdGl2ZVNjcmlwdFZpZXdDb21wb25lbnRzIH0gZnJvbSAnLi9lbGVtZW50LXJlZ2lzdHJ5JztcbmltcG9ydCB7IE1vZGFsRGlhbG9nU2VydmljZSB9IGZyb20gJy4vbGVnYWN5L2RpcmVjdGl2ZXMvZGlhbG9ncyc7XG5pbXBvcnQgeyBUYWJWaWV3RGlyZWN0aXZlLCBUYWJWaWV3SXRlbURpcmVjdGl2ZSB9IGZyb20gJy4vY2RrL3RhYi12aWV3JztcbmltcG9ydCB7IEFuZHJvaWRGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuL2Nkay9wbGF0Zm9ybS1maWx0ZXJzL2FuZHJvaWQtZmlsdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJT1NGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuL2Nkay9wbGF0Zm9ybS1maWx0ZXJzL2lvcy1maWx0ZXIuY29tcG9uZW50JztcblxuY29uc3QgQ0RLX0NPTVBPTkVOVFMgPSBbQWN0aW9uQmFyQ29tcG9uZW50LCBBY3Rpb25CYXJTY29wZSwgQWN0aW9uSXRlbURpcmVjdGl2ZSwgTmF2aWdhdGlvbkJ1dHRvbkRpcmVjdGl2ZSwgTGlzdFZpZXdDb21wb25lbnQsIFRlbXBsYXRlS2V5RGlyZWN0aXZlLCBUYWJWaWV3RGlyZWN0aXZlLCBUYWJWaWV3SXRlbURpcmVjdGl2ZSwgQW5kcm9pZEZpbHRlckNvbXBvbmVudCwgSU9TRmlsdGVyQ29tcG9uZW50XTtcblxucmVnaXN0ZXJOYXRpdmVTY3JpcHRWaWV3Q29tcG9uZW50cygpO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGcmFtZVBhZ2VNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5DREtfQ09NUE9ORU5UU10sXG4gIGV4cG9ydHM6IFtDb21tb25Nb2R1bGUsIEZyYW1lUGFnZU1vZHVsZSwgLi4uQ0RLX0NPTVBPTkVOVFNdLFxuICBwcm92aWRlcnM6IFtNb2RhbERpYWxvZ1NlcnZpY2VdLFxuICBzY2hlbWFzOiBbTk9fRVJST1JTX1NDSEVNQV0sXG59KVxuZXhwb3J0IGNsYXNzIE5hdGl2ZVNjcmlwdENvbW1vbk1vZHVsZSB7fVxuIl19