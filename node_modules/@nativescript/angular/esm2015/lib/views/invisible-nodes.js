import { View } from '@nativescript/core';
const getClassName = (instance) => instance.constructor.name;
const ɵ0 = getClassName;
export class InvisibleNode extends View {
    constructor(name = '') {
        super();
        this.name = name;
        this.nodeType = 1;
        this.nodeName = getClassName(this);
    }
    toString() {
        return `${this.nodeName}(${this.id})-${this.name}`;
    }
}
export class CommentNode extends InvisibleNode {
    constructor(value) {
        super(value);
        this.meta = {
            skipAddToDom: true,
        };
        this.id = CommentNode.id.toString();
        CommentNode.id += 1;
    }
}
CommentNode.id = 0;
export class TextNode extends InvisibleNode {
    constructor(value) {
        super(value);
        this.meta = {
            skipAddToDom: true,
        };
        this.id = TextNode.id.toString();
        TextNode.id += 1;
    }
}
TextNode.id = 0;
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52aXNpYmxlLW5vZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi92aWV3cy9pbnZpc2libGUtbm9kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRzFDLE1BQU0sWUFBWSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQzs7QUFFN0QsTUFBTSxPQUFnQixhQUFjLFNBQVEsSUFBSTtJQVc5QyxZQUFzQixPQUFlLEVBQUU7UUFDckMsS0FBSyxFQUFFLENBQUM7UUFEWSxTQUFJLEdBQUosSUFBSSxDQUFhO1FBR3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLEVBQUUsS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLFdBQVksU0FBUSxhQUFhO0lBRzVDLFlBQVksS0FBYztRQUN4QixLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFYixJQUFJLENBQUMsSUFBSSxHQUFHO1lBQ1YsWUFBWSxFQUFFLElBQUk7U0FDbkIsQ0FBQztRQUNGLElBQUksQ0FBQyxFQUFFLEdBQUcsV0FBVyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNwQyxXQUFXLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0QixDQUFDOztBQVZnQixjQUFFLEdBQUcsQ0FBQyxDQUFDO0FBYTFCLE1BQU0sT0FBTyxRQUFTLFNBQVEsYUFBYTtJQUd6QyxZQUFZLEtBQWM7UUFDeEIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWIsSUFBSSxDQUFDLElBQUksR0FBRztZQUNWLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUM7UUFDRixJQUFJLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkIsQ0FBQzs7QUFWZ0IsV0FBRSxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXcgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUnO1xuaW1wb3J0IHsgTmdWaWV3IH0gZnJvbSAnLi92aWV3LXR5cGVzJztcblxuY29uc3QgZ2V0Q2xhc3NOYW1lID0gKGluc3RhbmNlKSA9PiBpbnN0YW5jZS5jb25zdHJ1Y3Rvci5uYW1lO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSW52aXNpYmxlTm9kZSBleHRlbmRzIFZpZXcgaW1wbGVtZW50cyBOZ1ZpZXcge1xuICBtZXRhOiB7IHNraXBBZGRUb0RvbTogYm9vbGVhbiB9O1xuICBub2RlVHlwZTogbnVtYmVyO1xuICBub2RlTmFtZTogc3RyaW5nO1xuICBwYXJlbnROb2RlOiBOZ1ZpZXc7XG4gIG5leHRTaWJsaW5nOiBOZ1ZpZXc7XG4gIHByZXZpb3VzU2libGluZzogTmdWaWV3O1xuICBmaXJzdENoaWxkOiBOZ1ZpZXc7XG4gIGxhc3RDaGlsZDogTmdWaWV3O1xuICBuZ0Nzc0NsYXNzZXM6IE1hcDxzdHJpbmcsIGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBuYW1lOiBzdHJpbmcgPSAnJykge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLm5vZGVUeXBlID0gMTtcbiAgICB0aGlzLm5vZGVOYW1lID0gZ2V0Q2xhc3NOYW1lKHRoaXMpO1xuICB9XG5cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMubm9kZU5hbWV9KCR7dGhpcy5pZH0pLSR7dGhpcy5uYW1lfWA7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvbW1lbnROb2RlIGV4dGVuZHMgSW52aXNpYmxlTm9kZSB7XG4gIHByb3RlY3RlZCBzdGF0aWMgaWQgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKHZhbHVlPzogc3RyaW5nKSB7XG4gICAgc3VwZXIodmFsdWUpO1xuXG4gICAgdGhpcy5tZXRhID0ge1xuICAgICAgc2tpcEFkZFRvRG9tOiB0cnVlLFxuICAgIH07XG4gICAgdGhpcy5pZCA9IENvbW1lbnROb2RlLmlkLnRvU3RyaW5nKCk7XG4gICAgQ29tbWVudE5vZGUuaWQgKz0gMTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVGV4dE5vZGUgZXh0ZW5kcyBJbnZpc2libGVOb2RlIHtcbiAgcHJvdGVjdGVkIHN0YXRpYyBpZCA9IDA7XG5cbiAgY29uc3RydWN0b3IodmFsdWU/OiBzdHJpbmcpIHtcbiAgICBzdXBlcih2YWx1ZSk7XG5cbiAgICB0aGlzLm1ldGEgPSB7XG4gICAgICBza2lwQWRkVG9Eb206IHRydWUsXG4gICAgfTtcbiAgICB0aGlzLmlkID0gVGV4dE5vZGUuaWQudG9TdHJpbmcoKTtcbiAgICBUZXh0Tm9kZS5pZCArPSAxO1xuICB9XG59XG4iXX0=