import { Component, ViewChild } from '@angular/core';
import { Page } from '@nativescript/core';
import { PageRouterOutlet } from './page-router-outlet';
export class NSEmptyOutletComponent {
    constructor(page) {
        this.page = page;
        if (this.page) {
            this.page.actionBarHidden = true;
            this.page.on('loaded', () => {
                if (this.pageRouterOutlet && this.page.frame) {
                    this.pageRouterOutlet.setActionBarVisibility(this.page.frame.actionBarVisibility);
                }
            });
        }
    }
}
NSEmptyOutletComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ns-empty-outlet',
                template: "<page-router-outlet isEmptyOutlet='true'></page-router-outlet>"
            },] }
];
NSEmptyOutletComponent.ctorParameters = () => [
    { type: Page }
];
NSEmptyOutletComponent.propDecorators = {
    pageRouterOutlet: [{ type: ViewChild, args: [PageRouterOutlet, { read: PageRouterOutlet, static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnMtZW1wdHktb3V0bGV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbGVnYWN5L3JvdXRlci9ucy1lbXB0eS1vdXRsZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQU94RCxNQUFNLE9BQU8sc0JBQXNCO0lBRWpDLFlBQW9CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBQzVCLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztZQUVqQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO2dCQUMxQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtvQkFDNUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7aUJBQ25GO1lBQ0gsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7OztZQWpCRixTQUFTLFNBQUM7Z0JBQ1QsOENBQThDO2dCQUM5QyxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUUsZ0VBQWdFO2FBQzNFOzs7WUFQUSxJQUFJOzs7K0JBU1YsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZSc7XG5pbXBvcnQgeyBQYWdlUm91dGVyT3V0bGV0IH0gZnJvbSAnLi9wYWdlLXJvdXRlci1vdXRsZXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ25zLWVtcHR5LW91dGxldCcsXG4gIHRlbXBsYXRlOiBcIjxwYWdlLXJvdXRlci1vdXRsZXQgaXNFbXB0eU91dGxldD0ndHJ1ZSc+PC9wYWdlLXJvdXRlci1vdXRsZXQ+XCIsXG59KVxuZXhwb3J0IGNsYXNzIE5TRW1wdHlPdXRsZXRDb21wb25lbnQge1xuICBAVmlld0NoaWxkKFBhZ2VSb3V0ZXJPdXRsZXQsIHsgcmVhZDogUGFnZVJvdXRlck91dGxldCwgc3RhdGljOiBmYWxzZSB9KSBwYWdlUm91dGVyT3V0bGV0OiBQYWdlUm91dGVyT3V0bGV0O1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBhZ2U6IFBhZ2UpIHtcbiAgICBpZiAodGhpcy5wYWdlKSB7XG4gICAgICB0aGlzLnBhZ2UuYWN0aW9uQmFySGlkZGVuID0gdHJ1ZTtcblxuICAgICAgdGhpcy5wYWdlLm9uKCdsb2FkZWQnLCAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnBhZ2VSb3V0ZXJPdXRsZXQgJiYgdGhpcy5wYWdlLmZyYW1lKSB7XG4gICAgICAgICAgdGhpcy5wYWdlUm91dGVyT3V0bGV0LnNldEFjdGlvbkJhclZpc2liaWxpdHkodGhpcy5wYWdlLmZyYW1lLmFjdGlvbkJhclZpc2liaWxpdHkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==