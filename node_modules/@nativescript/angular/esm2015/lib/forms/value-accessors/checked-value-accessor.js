import { Directive, ElementRef, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { BaseValueAccessor } from './base-value-accessor';
const CHECKED_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => CheckedValueAccessor),
    multi: true,
};
/**
 * The accessor for setting a checked property and listening to changes that is used by the
 * {@link NgModel} directives.
 *
 *  ### Example
 *  ```
 *  <Switch [(ngModel)]="model.test">
 *  ```
 */
export class CheckedValueAccessor extends BaseValueAccessor {
    // tslint:disable-line:directive-class-suffix
    constructor(elementRef) {
        super(elementRef.nativeElement);
    }
    writeValue(value) {
        const normalized = super.normalizeValue(value);
        this.view.checked = normalized;
    }
}
CheckedValueAccessor.decorators = [
    { type: Directive, args: [{
                selector: 'Switch[ngModel],Switch[formControlName],Switch[formControl],' + 'switch[ngModel],switch[formControlName],switch[formControl]',
                providers: [CHECKED_VALUE_ACCESSOR],
                host: {
                    '(checkedChange)': 'onChange($event.value)',
                },
            },] }
];
CheckedValueAccessor.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tlZC12YWx1ZS1hY2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvZm9ybXMvdmFsdWUtYWNjZXNzb3JzL2NoZWNrZWQtdmFsdWUtYWNjZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTFELE1BQU0sc0JBQXNCLEdBQUc7SUFDN0IsT0FBTyxFQUFFLGlCQUFpQjtJQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLG9CQUFvQixDQUFDO0lBQ25ELEtBQUssRUFBRSxJQUFJO0NBQ1osQ0FBQztBQUVGOzs7Ozs7OztHQVFHO0FBUUgsTUFBTSxPQUFPLG9CQUFxQixTQUFRLGlCQUF5QjtJQUNqRSw2Q0FBNkM7SUFDN0MsWUFBWSxVQUFzQjtRQUNoQyxLQUFLLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxVQUFVLENBQUMsS0FBVTtRQUNuQixNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQztJQUNqQyxDQUFDOzs7WUFoQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw4REFBOEQsR0FBRyw2REFBNkQ7Z0JBQ3hJLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2dCQUNuQyxJQUFJLEVBQUU7b0JBQ0osaUJBQWlCLEVBQUUsd0JBQXdCO2lCQUM1QzthQUNGOzs7WUExQm1CLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IEJhc2VWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi9iYXNlLXZhbHVlLWFjY2Vzc29yJztcblxuY29uc3QgQ0hFQ0tFRF9WQUxVRV9BQ0NFU1NPUiA9IHtcbiAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IENoZWNrZWRWYWx1ZUFjY2Vzc29yKSxcbiAgbXVsdGk6IHRydWUsXG59O1xuXG4vKipcbiAqIFRoZSBhY2Nlc3NvciBmb3Igc2V0dGluZyBhIGNoZWNrZWQgcHJvcGVydHkgYW5kIGxpc3RlbmluZyB0byBjaGFuZ2VzIHRoYXQgaXMgdXNlZCBieSB0aGVcbiAqIHtAbGluayBOZ01vZGVsfSBkaXJlY3RpdmVzLlxuICpcbiAqICAjIyMgRXhhbXBsZVxuICogIGBgYFxuICogIDxTd2l0Y2ggWyhuZ01vZGVsKV09XCJtb2RlbC50ZXN0XCI+XG4gKiAgYGBgXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1N3aXRjaFtuZ01vZGVsXSxTd2l0Y2hbZm9ybUNvbnRyb2xOYW1lXSxTd2l0Y2hbZm9ybUNvbnRyb2xdLCcgKyAnc3dpdGNoW25nTW9kZWxdLHN3aXRjaFtmb3JtQ29udHJvbE5hbWVdLHN3aXRjaFtmb3JtQ29udHJvbF0nLFxuICBwcm92aWRlcnM6IFtDSEVDS0VEX1ZBTFVFX0FDQ0VTU09SXSxcbiAgaG9zdDoge1xuICAgICcoY2hlY2tlZENoYW5nZSknOiAnb25DaGFuZ2UoJGV2ZW50LnZhbHVlKScsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENoZWNrZWRWYWx1ZUFjY2Vzc29yIGV4dGVuZHMgQmFzZVZhbHVlQWNjZXNzb3I8U3dpdGNoPiB7XG4gIC8vIHRzbGludDpkaXNhYmxlLWxpbmU6ZGlyZWN0aXZlLWNsYXNzLXN1ZmZpeFxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KTtcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQge1xuICAgIGNvbnN0IG5vcm1hbGl6ZWQgPSBzdXBlci5ub3JtYWxpemVWYWx1ZSh2YWx1ZSk7XG4gICAgdGhpcy52aWV3LmNoZWNrZWQgPSBub3JtYWxpemVkO1xuICB9XG59XG4iXX0=