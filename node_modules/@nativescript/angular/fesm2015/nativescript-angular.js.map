{"version":3,"file":"nativescript-angular.js","sources":["../../src/lib/views/invisible-nodes.ts","../../src/lib/views/utils.ts","../../src/lib/tokens.ts","../../src/lib/property-filter.ts","../../src/lib/view-refs.ts","../../src/lib/app-host-view.ts","../../src/lib/loading.service.ts","../../src/lib/trace.ts","../../src/lib/application.ts","../../src/lib/platform-ref.ts","../../src/lib/platform-nativescript.ts","../../src/lib/cdk/portal/portal-errors.ts","../../src/lib/cdk/portal/common.ts","../../src/lib/cdk/portal/portal-directives.ts","../../src/lib/element-registry/metas.ts","../../src/lib/element-registry/registry.ts","../../src/lib/element-registry/common-views.ts","../../src/lib/view-util.ts","../../src/lib/cdk/portal/nsdom-portal-outlet.ts","../../src/lib/cdk/detached-loader.ts","../../src/lib/nativescript-xhr-factory.ts","../../src/lib/nativescript-renderer.ts","../../src/lib/cdk/frame-page/page.service.ts","../../src/lib/cdk/frame-page/frame-page.component.ts","../../src/lib/cdk/frame-page/frame.directive.ts","../../src/lib/cdk/frame-page/page.directive.ts","../../src/lib/cdk/frame-page/frame-page.module.ts","../../src/lib/utils/lang-facade.ts","../../src/lib/cdk/action-bar/index.ts","../../src/lib/cdk/list-view/list-view.component.ts","../../src/lib/utils/general.ts","../../src/lib/legacy/frame.service.ts","../../src/lib/legacy/router/ns-location-utils.ts","../../src/lib/legacy/router/ns-location-strategy.ts","../../src/lib/legacy/directives/dialogs.ts","../../src/lib/utils/ng-safe.ts","../../src/lib/cdk/tab-view/index.ts","../../src/lib/cdk/platform-filters/android-filter.component.ts","../../src/lib/cdk/platform-filters/ios-filter.component.ts","../../src/lib/nativescript-common.module.ts","../../src/lib/nativescript.ts","../../src/lib/rootcomposite.module.ts","../../src/lib/cdk/dialog/dialog-config.ts","../../src/lib/cdk/dialog/dialog-ref.ts","../../src/lib/cdk/dialog/native-modal-ref.ts","../../src/lib/cdk/dialog/dialog-services.ts","../../src/lib/cdk/dialog/dialog-content-directives.ts","../../src/lib/cdk/dialog/dialog-module.ts","../../src/lib/file-system/ns-file-system.ts","../../src/lib/detached-loader-utils.ts","../../src/lib/forms/value-accessors/base-value-accessor.ts","../../src/lib/forms/value-accessors/text-value-accessor.ts","../../src/lib/forms/value-accessors/checked-value-accessor.ts","../../src/lib/forms/value-accessors/date-value-accessor.ts","../../src/lib/forms/value-accessors/time-value-accessor.ts","../../src/lib/forms/value-accessors/number-value-accessor.ts","../../src/lib/forms/value-accessors/selectedIndex-value-accessor.ts","../../src/lib/forms/forms.module.ts","../../src/lib/animations/utils.ts","../../src/lib/animations/animation-player.ts","../../src/lib/animations/animation-driver.ts","../../src/lib/animations/animations.module.ts","../../src/lib/http/http-utils.ts","../../src/lib/http/ns-http-backend.ts","../../src/lib/http/http-client.module.ts","../../src/lib/legacy/router/page-router-outlet-utils.ts","../../src/lib/legacy/router/ns-route-reuse-strategy.ts","../../src/lib/legacy/router/router-extensions.ts","../../src/lib/legacy/router/ns-router-link.ts","../../src/lib/legacy/router/private-imports/router-url-tree.ts","../../src/lib/legacy/router/ns-router-link-active.ts","../../src/lib/legacy/router/page-router-outlet.ts","../../src/lib/legacy/router/ns-platform-location.ts","../../src/lib/legacy/router/ns-empty-outlet.component.ts","../../src/lib/legacy/router/router.module.ts","../../src/lib/nativescript-ng-zone.ts","../../src/nativescript-angular.ts"],"sourcesContent":["import { View } from '@nativescript/core';\nimport { NgView } from './view-types';\n\nconst getClassName = (instance) => instance.constructor.name;\n\nexport abstract class InvisibleNode extends View implements NgView {\n  meta: { skipAddToDom: boolean };\n  nodeType: number;\n  nodeName: string;\n  parentNode: NgView;\n  nextSibling: NgView;\n  previousSibling: NgView;\n  firstChild: NgView;\n  lastChild: NgView;\n  ngCssClasses: Map<string, boolean>;\n\n  constructor(protected name: string = '') {\n    super();\n\n    this.nodeType = 1;\n    this.nodeName = getClassName(this);\n  }\n\n  toString() {\n    return `${this.nodeName}(${this.id})-${this.name}`;\n  }\n}\n\nexport class CommentNode extends InvisibleNode {\n  protected static id = 0;\n\n  constructor(value?: string) {\n    super(value);\n\n    this.meta = {\n      skipAddToDom: true,\n    };\n    this.id = CommentNode.id.toString();\n    CommentNode.id += 1;\n  }\n}\n\nexport class TextNode extends InvisibleNode {\n  protected static id = 0;\n\n  constructor(value?: string) {\n    super(value);\n\n    this.meta = {\n      skipAddToDom: true,\n    };\n    this.id = TextNode.id.toString();\n    TextNode.id += 1;\n  }\n}\n","import { ContentView, LayoutBase, ProxyViewContainer, View } from '@nativescript/core';\nimport { InvisibleNode } from './invisible-nodes';\nimport type { NgContentView, NgLayoutBase, NgView } from './view-types';\n\nexport function isDetachedElement(element: View | NgView): boolean {\n  return element && (<NgView>element).meta && (<NgView>element).meta.skipAddToDom;\n}\n\nexport function isView(view: unknown): view is NgView {\n  return view instanceof View;\n}\n\nexport function isInvisibleNode(view: unknown): view is InvisibleNode {\n  return view instanceof InvisibleNode;\n}\n\nexport function isLayout(view: unknown): view is NgLayoutBase {\n  return view instanceof LayoutBase;\n}\n\nexport function isContentView(view: unknown): view is NgContentView {\n  return view instanceof ContentView;\n}\n\nexport function getFirstNativeLikeView(view: View, extractFromNSParent = false) {\n  if (view instanceof ProxyViewContainer) {\n    if (view.getChildrenCount() === 0) {\n      return null;\n    }\n    return getFirstNativeLikeView(view.getChildAt(0));\n  }\n\n  if (extractFromNSParent) {\n    // const node = view.parentNode;\n    detachViewFromParent(view);\n    // view.parentNode = node;\n  }\n  return view;\n}\n\nexport function detachViewFromParent(view: View) {\n  const parent = <NgView>view?.parent;\n  if (!parent) {\n    return;\n  }\n  if (parent.meta && parent.meta.removeChild) {\n    parent.meta.removeChild(parent, view);\n  } else if (isLayout(parent)) {\n    parent.removeChild(view);\n  } else if (isContentView(parent) && parent.content === view) {\n    parent.content = null;\n  } else if (isView(parent)) {\n    parent._removeView(view);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { IDevice, Page, View } from '@nativescript/core';\n\nexport const APP_ROOT_VIEW = new InjectionToken<View>('NativeScriptAppRootView');\nexport const NATIVESCRIPT_ROOT_MODULE_ID = new InjectionToken<string | number>('NativeScriptRootModuleId');\n\nexport const START_PATH = new InjectionToken<Promise<string> | string>('NativeScriptStartPath');\nexport const ENABLE_REUSABE_VIEWS = new InjectionToken<boolean>('NativeScriptEnableReusableViews');\n\nexport type PageFactory = (options: PageFactoryOptions) => Page;\nexport interface PageFactoryOptions {\n  isBootstrap?: boolean;\n  isLivesync?: boolean;\n  isModal?: boolean;\n  isNavigation?: boolean;\n  componentType?: any;\n}\n\nexport const DISABLE_ROOT_VIEW_HANDLING = new InjectionToken<boolean>('NativeScriptDisableRootViewHandling');\nexport const DEVICE = new InjectionToken<IDevice>('NativeScriptDevice');\nexport const PAGE_FACTORY = new InjectionToken<PageFactory>('NativeScriptPageFactory');\nexport const defaultPageFactory: PageFactory = function (_opts: PageFactoryOptions) {\n  return new Page();\n};\n","import { Inject, InjectionToken } from '@angular/core';\nimport { DEVICE } from './tokens';\nimport { Device, platformNames } from '@nativescript/core';\n\nexport interface NamespaceFilter {\n  runsIn(namespace: string, next: (namespace: string) => boolean | undefined): boolean | undefined;\n}\n\nexport class PlatformNamespaceFilter implements NamespaceFilter {\n  constructor(@Inject(DEVICE) private device: typeof Device) {}\n  runsIn(namespace: string, next: (namespace: string) => boolean | undefined): boolean | undefined {\n    if (namespace === 'android') {\n      return this.device.os === platformNames.android;\n    }\n    if (namespace === 'ios') {\n      return this.device.os === platformNames.ios;\n    }\n    return next(namespace);\n  }\n}\n\nexport const NAMESPACE_FILTERS = new InjectionToken<NamespaceFilter[]>('NativeScriptNamespaceFilter');\n","import { ComponentRef, EmbeddedViewRef } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { detachViewFromParent, getFirstNativeLikeView, InvisibleNode } from './views';\n\nexport interface NgViewRef<T> {\n  view: View;\n  ref: EmbeddedViewRef<T> | ComponentRef<T>;\n  firstNativeLikeView: View;\n}\n\nexport interface NgViewTemplate<T> {\n  create(context?: T): View;\n  update(view: View, context?: T): void;\n  attach(view: View): void;\n  detach(view: View): void;\n  dispose(view: View): void;\n}\n\nexport class NgViewRef<T> implements NgViewRef<T> {\n  /**\n   * Component's view instance or first valid template view\n   */\n  view: View;\n  ref: EmbeddedViewRef<T> | ComponentRef<T>;\n  /**\n   * First valid view that isn't strictly logical (ContentView, ProxyViewContainer, ...)\n   * This view *very* likely has a nativeView associated to it.\n   */\n  firstNativeLikeView: View;\n\n  constructor(ref: EmbeddedViewRef<T> | ComponentRef<T>) {\n    this.ref = ref;\n    this.view = ref instanceof ComponentRef ? ref.location.nativeElement : ref.rootNodes.find((v) => !(v instanceof InvisibleNode));\n    this.firstNativeLikeView = getFirstNativeLikeView(this.view);\n  }\n\n  detachNativeLikeView() {\n    detachViewFromParent(this.firstNativeLikeView);\n  }\n}\n","import { ContentView, View, ProxyViewContainer, GridLayout, Color, Application } from '@nativescript/core';\n\nexport class AppHostView extends ContentView {\n\tprivate _ngAppRoot: View;\n\tprivate _content: View;\n\tprivate timeout: any = -1;\n\n\tconstructor(backgroundColor: Color) {\n\t\tsuper();\n\t\tthis.backgroundColor = backgroundColor;\n\t}\n\n\tget ngAppRoot(): View {\n\t\treturn this._ngAppRoot;\n\t}\n\n\tset ngAppRoot(value: View) {\n\t\tthis._ngAppRoot = value;\n    }\n    //@ts-ignore\n\tget content(): View {\n\t\treturn this._content;\n\t}\n\n\tset content(value: View) {\n\t\tif (this._content) {\n\t\t\tthis._content.parentNode = undefined;\n\t\t}\n\n\t\tthis._content = value;\n\n\t\tif (value) {\n\t\t\tthis._content.parentNode = this;\n\t\t}\n\n\t\tthis.ngAppRoot = value;\n\n\t\tif (this._content instanceof ProxyViewContainer) {\n\t\t\tconst grid = new GridLayout();\n\t\t\tgrid.backgroundColor = this.backgroundColor;\n\t\t\tgrid.addChild(this._content);\n\t\t\tthis.ngAppRoot = grid;\n\t\t}\n\t\tif(this.ngAppRoot) {\n\t\t\t// maybe use this approach\n\t\t\t// this.scheduleRootChange();\n\t\t}\n\t}\n\n\tscheduleRootChange() {\n\t\tif(this.timeout === -1) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t//console.log(this.ngAppRoot);\n\t\t\t\tApplication.resetRootView({\n\t\t\t\t\tcreate: () => this.content\n\t\t\t\t});\n\t\t\t\tthis.timeout = -1;\n\t\t\t}, 0);\n\t\t}\n\t}\n}\n\nexport class AppHostAsyncView extends GridLayout {\n\tconstructor(backgroundColor: Color) {\n\t\tsuper();\n\t\tthis.backgroundColor = backgroundColor;\n\t}\n\n\tget ngAppRoot(): View {\n\t\treturn this;\n\t}\n\n\tset ngAppRoot(value: View) {\n\t\t// ignored\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class NativeScriptLoadingService implements OnDestroy {\n  private mainModuleReady$ = new BehaviorSubject(false);\n  readyToDestroy$ = new BehaviorSubject(true);\n  onMainModuleReady$ = this.mainModuleReady$.pipe(filter((ready) => ready));\n\n  /**\n   * delays destroying this module until `notifyReadyToDestroy()`.\n   * remember to call `notifyReadyToDestroy()` when done!\n   */\n  waitUntilNotified() {\n    this.readyToDestroy$.next(false);\n  }\n\n  /**\n   * notifies this module is ready to be destroyed\n   */\n  notifyReadyToDestroy() {\n    this.readyToDestroy$.next(true);\n  }\n  isMainModuleReady() {\n    return this.mainModuleReady$.value;\n  }\n  ngOnDestroy() {\n    this.readyToDestroy$.complete();\n    this.mainModuleReady$.complete();\n  }\n\n  /**\n   * This funcion is called by the bootstrap code when the app is ready\n   * @internal\n   */\n  _notifyMainModuleReady() {\n    this.mainModuleReady$.next(true);\n  }\n}\n","import { Trace } from '@nativescript/core';\n\nexport class NativeScriptDebug {\n  static readonly animationsTraceCategory = 'ns-animations';\n  static readonly rendererTraceCategory = 'ns-renderer';\n  static readonly viewUtilCategory = 'ns-view-util';\n  static readonly routerTraceCategory = 'ns-router';\n  static readonly routeReuseStrategyTraceCategory = 'ns-route-reuse-strategy';\n  static readonly listViewTraceCategory = 'ns-list-view';\n  static readonly bootstrapCategory = 'bootstrap';\n  // TODO: migrate all usage to this - avoids extraneous method executions\n  static readonly enabled = Trace.isEnabled();\n\n  static isLogEnabled() {\n    return Trace.isEnabled();\n  }\n\n  static animationsLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.animationsTraceCategory);\n  }\n\n  static rendererLog(msg): void {\n    Trace.write(msg, NativeScriptDebug.rendererTraceCategory);\n  }\n\n  static rendererError(message: string): void {\n    Trace.write(message, NativeScriptDebug.rendererTraceCategory, Trace.messageType.error);\n  }\n\n  static viewUtilLog(msg): void {\n    Trace.write(msg, NativeScriptDebug.viewUtilCategory);\n  }\n\n  static routerLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.routerTraceCategory);\n  }\n\n  static routerError(message: string): void {\n    Trace.write(message, NativeScriptDebug.routerTraceCategory, Trace.messageType.error);\n  }\n\n  static routeReuseStrategyLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.routeReuseStrategyTraceCategory);\n  }\n\n  static styleError(message: string): void {\n    Trace.write(message, Trace.categories.Style, Trace.messageType.error);\n  }\n\n  static listViewLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.listViewTraceCategory);\n  }\n\n  static listViewError(message: string): void {\n    Trace.write(message, NativeScriptDebug.listViewTraceCategory, Trace.messageType.error);\n  }\n\n  static bootstrapLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.bootstrapCategory);\n  }\n\n  static bootstrapLogError(message: string): void {\n    Trace.write(message, NativeScriptDebug.bootstrapCategory, Trace.messageType.error);\n  }\n}\n","import { NgModuleRef, NgZone, PlatformRef } from '@angular/core';\nimport { filter, map, take } from 'rxjs/operators';\nimport { Application, ApplicationEventData, Color, LaunchEventData, LayoutBase, profile, removeTaggedAdditionalCSS, StackLayout, TextView, View, Utils, Trace } from '@nativescript/core';\nimport { AppHostView } from './app-host-view';\nimport { NativeScriptLoadingService } from './loading.service';\nimport { APP_ROOT_VIEW, DISABLE_ROOT_VIEW_HANDLING, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { Observable, Subject } from 'rxjs';\nimport { NativeScriptDebug } from './trace';\n\nexport interface AppLaunchView extends LayoutBase {\n  // called when the animation is to begin\n  startAnimation?: () => void;\n  // called when bootstrap is complete and cleanup can begin\n  // should resolve when animation is completely finished\n  cleanup?: () => Promise<any>;\n\n  // do you want to handle setting this as a rootview manually?\n  __disable_root_view_handling?: boolean;\n}\n\nexport function disableRootViewHanding(view: AppLaunchView) {\n  view.__disable_root_view_handling = true;\n}\n\nexport type NgModuleReason = 'hotreload' | 'applaunch' | 'appexit';\n\nexport type NgModuleEvent =\n  | {\n      moduleType: 'main' | 'loading' | string;\n      reference: NgModuleRef<unknown>;\n      reason: NgModuleReason | string;\n    }\n  | {\n      moduleType: 'platform';\n      reference: PlatformRef;\n      reason: NgModuleReason | string;\n    };\n\nexport const preAngularDisposal$ = new Subject<NgModuleEvent>();\nexport const postAngularBootstrap$ = new Subject<NgModuleEvent>();\n\n/**\n * @deprecated\n */\nexport const onBeforeLivesync: Observable<NgModuleRef<any>> = preAngularDisposal$.pipe(\n  filter((v) => v.moduleType === 'main' && v.reason === 'hotreload'),\n  map((v) => v.reference as NgModuleRef<any>)\n);\n/**\n * @deprecated\n */\nexport const onAfterLivesync: Observable<{\n  moduleRef?: NgModuleRef<any>;\n  error?: Error;\n}> = postAngularBootstrap$.pipe(\n  filter((v) => v.moduleType === 'main'),\n  map((v) => ({ moduleRef: v.reference as NgModuleRef<any> }))\n);\nexport interface AppRunOptions<T, K> {\n  appModuleBootstrap: (reason: NgModuleReason) => Promise<NgModuleRef<T>>;\n  loadingModule?: (reason: NgModuleReason) => Promise<NgModuleRef<K>>;\n  launchView?: (reason: NgModuleReason) => AppLaunchView;\n}\n\nif (module['hot']) {\n  module['hot'].decline();\n  global.__onLiveSyncCore = () => {\n    Application.getRootView()?._onCssStateChange();\n    // all other changes are applied by runNativeScriptAngularApp\n  };\n}\n\nfunction emitModuleBootstrapEvent<T>(ref: NgModuleRef<T>, name: 'main' | 'loading', reason: NgModuleReason) {\n  postAngularBootstrap$.next({\n    moduleType: name,\n    reference: ref,\n    reason,\n  });\n}\n\nfunction destroyRef<T>(ref: NgModuleRef<T>, name: 'main' | 'loading', reason: NgModuleReason): void;\nfunction destroyRef(ref: PlatformRef, reason: NgModuleReason): void;\nfunction destroyRef<T>(ref: PlatformRef | NgModuleRef<T>, name?: string, reason?: string): void {\n  if (ref) {\n    if (ref instanceof PlatformRef) {\n      preAngularDisposal$.next({\n        moduleType: 'platform',\n        reference: ref,\n        reason: name,\n      });\n    }\n    if (ref instanceof NgModuleRef) {\n      preAngularDisposal$.next({\n        moduleType: name,\n        reference: ref,\n        reason,\n      });\n    }\n    ref.destroy();\n  }\n}\n\nexport function runNativeScriptAngularApp<T, K>(options: AppRunOptions<T, K>) {\n  let mainModuleRef: NgModuleRef<T> = null;\n  let loadingModuleRef: NgModuleRef<K>;\n  let platformRef: PlatformRef = null;\n  let bootstrapId = -1;\n  const updatePlatformRef = (moduleRef: NgModuleRef<T | K>, reason: NgModuleReason) => {\n    const newPlatformRef = moduleRef.injector.get(PlatformRef);\n    if (newPlatformRef === platformRef) {\n      return;\n    }\n    destroyRef(platformRef, reason);\n    platformRef = newPlatformRef;\n    platformRef.onDestroy(() => (platformRef = platformRef === newPlatformRef ? null : platformRef));\n  };\n  const setRootView = (ref: NgModuleRef<T | K> | View) => {\n    if (bootstrapId === -1) {\n      // treat edge cases\n      return;\n    }\n    if (ref instanceof NgModuleRef) {\n      if (ref.injector.get(DISABLE_ROOT_VIEW_HANDLING, false)) {\n        return;\n      }\n    } else {\n      if (ref['__disable_root_view_handling']) {\n        return;\n      }\n    }\n    Application.getRootView()?._closeAllModalViewsInternal(); // cleanup old rootview\n    // TODO: check for leaks when root view isn't properly destroyed\n    if (ref instanceof View) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.bootstrapLog(`Setting RootView to ${ref}`);\n      }\n      Application.resetRootView({\n        create: () => ref,\n      });\n      return;\n    }\n    const view = ref.injector.get(APP_ROOT_VIEW) as AppHostView | View;\n    const newRoot = view instanceof AppHostView ? view.content : view;\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.bootstrapLog(`Setting RootView to ${newRoot}`);\n    }\n    Application.resetRootView({\n      create: () => newRoot,\n    });\n  };\n  const showErrorUI = (error: Error) => {\n    const message = error.message + '\\n\\n' + error.stack;\n    const errorTextBox = new TextView();\n    errorTextBox.text = message;\n    errorTextBox.color = new Color('red');\n    setRootView(errorTextBox);\n  };\n  const bootstrapRoot = (reason: NgModuleReason) => {\n    bootstrapId = Date.now();\n    const currentBootstrapId = bootstrapId;\n    let bootstrapped = false;\n    let onMainBootstrap = () => {\n      setRootView(mainModuleRef);\n    };\n    options.appModuleBootstrap(reason).then(\n      (ref) => {\n        if (currentBootstrapId !== bootstrapId) {\n          // this module is old and not needed anymore\n          // this may happen when developer uses async app initializer and the user exits the app before this bootstraps\n          ref.destroy();\n          return;\n        }\n        mainModuleRef = ref;\n        ref.onDestroy(() => (mainModuleRef = mainModuleRef === ref ? null : mainModuleRef));\n        updatePlatformRef(ref, reason);\n        const styleTag = ref.injector.get(NATIVESCRIPT_ROOT_MODULE_ID);\n        ref.onDestroy(() => {\n          removeTaggedAdditionalCSS(styleTag);\n        });\n        bootstrapped = true;\n        // delay bootstrap callback until all rendering is good to go\n        Utils.queueMacrotask(() => onMainBootstrap());\n        // onMainBootstrap();\n        emitModuleBootstrapEvent(ref, 'main', reason);\n        // bootstrapped component: (ref as any)._bootstrapComponents[0];\n      },\n      (err) => {\n        bootstrapped = true;\n        NativeScriptDebug.bootstrapLogError(`Error bootstrapping app module:\\n${err.message}\\n\\n${err.stack}`);\n        showErrorUI(err);\n        throw err;\n      }\n    );\n    Utils.queueMacrotask(() => {\n      if (currentBootstrapId !== bootstrapId) {\n        return;\n      }\n      if (!bootstrapped) {\n        if (options.loadingModule) {\n          options.loadingModule(reason).then(\n            (loadingRef) => {\n              if (currentBootstrapId !== bootstrapId) {\n                // this module is old and not needed anymore\n                // this may happen when developer uses async app initializer and the user exits the app before this bootstraps\n                loadingRef.destroy();\n                return;\n              }\n              loadingModuleRef = loadingRef;\n              loadingModuleRef.onDestroy(() => (loadingModuleRef = loadingModuleRef === loadingRef ? null : loadingModuleRef));\n              updatePlatformRef(loadingRef, reason);\n              const styleTag = loadingModuleRef.injector.get(NATIVESCRIPT_ROOT_MODULE_ID);\n              loadingRef.onDestroy(() => {\n                removeTaggedAdditionalCSS(styleTag);\n              });\n              setRootView(loadingRef);\n              onMainBootstrap = () => {\n                const loadingService = loadingModuleRef.injector.get(NativeScriptLoadingService);\n                loadingModuleRef.injector.get(NgZone).run(() => {\n                  loadingService._notifyMainModuleReady();\n                });\n                loadingService.readyToDestroy$\n                  .pipe(\n                    filter((ready) => ready),\n                    take(1)\n                  )\n                  .subscribe(() => {\n                    destroyRef(loadingModuleRef, 'loading', reason);\n                    loadingModuleRef = null;\n                    setRootView(mainModuleRef);\n                  });\n              };\n              emitModuleBootstrapEvent(loadingModuleRef, 'loading', reason);\n            },\n            (err) => {\n              NativeScriptDebug.bootstrapLogError(`Error bootstrapping loading module:\\n${err.message}\\n\\n${err.stack}`);\n              showErrorUI(err);\n              throw err;\n            }\n          );\n        } else if (options.launchView) {\n          let launchView = options.launchView(reason);\n          setRootView(launchView);\n          if (launchView.startAnimation) {\n            setTimeout(() => {\n              // ensure launch animation is executed after launchView added to view stack\n              launchView.startAnimation();\n            });\n          }\n          onMainBootstrap = () => {\n            if (launchView.cleanup) {\n              launchView\n                .cleanup()\n                .catch()\n                .then(() => {\n                  launchView = null;\n                  setRootView(mainModuleRef);\n                });\n            }\n          };\n        } else {\n          console.warn('App is bootstrapping asynchronously (likely APP_INITIALIZER) but did not provide a launchView or LoadingModule.');\n        }\n      }\n    });\n  };\n  const disposePlatform = (reason: NgModuleReason) => {\n    destroyRef(platformRef, reason);\n    platformRef = null;\n  };\n  const disposeLastModules = (reason: NgModuleReason) => {\n    // reset bootstrap ID to make sure any modules bootstrapped after this are discarded\n    bootstrapId = -1;\n    destroyRef(loadingModuleRef, 'loading', reason);\n    loadingModuleRef = null;\n    destroyRef(mainModuleRef, 'main', reason);\n    mainModuleRef = null;\n  };\n  const launchCallback = profile('@nativescript/angular/platform-common.launchCallback', (args: LaunchEventData) => {\n    args.root = null;\n    bootstrapRoot('applaunch');\n  });\n  const exitCallback = profile('@nativescript/angular/platform-common.exitCallback', (args: ApplicationEventData) => {\n    disposeLastModules('appexit');\n  });\n\n  Application.on(Application.launchEvent, launchCallback);\n  Application.on(Application.exitEvent, exitCallback);\n  if (module['hot']) {\n    // handle HMR Application.run\n    global['__dispose_app_ng_platform__'] = () => {\n      disposePlatform('hotreload');\n    };\n    global['__dispose_app_ng_modules__'] = () => {\n      disposeLastModules('hotreload');\n    };\n    global['__bootstrap_app_ng_modules__'] = () => {\n      bootstrapRoot('hotreload');\n    };\n    global['__cleanup_ng_hot__'] = () => {\n      Application.off(Application.launchEvent, launchCallback);\n      Application.off(Application.exitEvent, exitCallback);\n      disposeLastModules('hotreload');\n      disposePlatform('hotreload');\n    };\n    global['__reboot_ng_modules__'] = (shouldDisposePlatform: boolean = false) => {\n      disposeLastModules('hotreload');\n      if (shouldDisposePlatform) {\n        disposePlatform('hotreload');\n      }\n      bootstrapRoot('hotreload');\n    };\n\n    if (!Application.hasLaunched()) {\n      Application.run();\n      return;\n    }\n    bootstrapRoot('hotreload');\n    return;\n  }\n\n  Application.run();\n}\n","import { CompilerOptions, Injector, NgModuleRef, NgZone, PlatformRef, Type } from '@angular/core';\nimport { ɵNgModuleFactory as NgModuleFactory } from '@angular/core';\nimport { AppLaunchView, AppRunOptions, runNativeScriptAngularApp } from './application';\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone | 'zone.js' | 'noop';\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can colesce such kind of events to only trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling a animation frame. So in the case above,\n   * the change detection will only be triggered once.\n   */\n  ngZoneEventCoalescing?: boolean;\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loop trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  ngZoneRunCoalescing?: boolean;\n}\n\nexport class NativeScriptPlatformRefProxy extends PlatformRef {\n  options: AppRunOptions<any, any>;\n  constructor(private platform: PlatformRef, private launchView?: AppLaunchView) {\n    super();\n  }\n\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    this.options = {\n      appModuleBootstrap: () => this.platform.bootstrapModuleFactory(moduleFactory),\n      launchView: () => this.launchView,\n    };\n\n    runNativeScriptAngularApp(this.options);\n\n    return null;\n  }\n  bootstrapModule<M>(moduleType: Type<M>, compilerOptions?: (CompilerOptions & BootstrapOptions) | Array<CompilerOptions & BootstrapOptions>): Promise<NgModuleRef<M>> {\n    this.options = {\n      appModuleBootstrap: () => this.platform.bootstrapModule(moduleType, compilerOptions),\n    };\n\n    runNativeScriptAngularApp(this.options);\n\n    return null;\n  }\n\n  onDestroy(callback: () => void): void {\n    this.platform.onDestroy(callback);\n  }\n\n  get injector(): Injector {\n    return this.platform.injector;\n  }\n\n  destroy(): void {\n    this.platform.destroy();\n  }\n\n  get destroyed(): boolean {\n    return this.platform.destroyed;\n  }\n}\n","import { Type, Injector, CompilerOptions, PlatformRef, NgModuleFactory, NgModuleRef, EventEmitter, Sanitizer, InjectionToken, StaticProvider, createPlatformFactory, platformCore } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NativeScriptPlatformRefProxy } from './platform-ref';\nimport { AppHostView } from './app-host-view';\nimport { Color, GridLayout } from '@nativescript/core';\nimport { defaultPageFactory, PAGE_FACTORY } from './tokens';\nimport { AppLaunchView } from './application';\n\nexport const defaultPageFactoryProvider = { provide: PAGE_FACTORY, useValue: defaultPageFactory };\nexport class NativeScriptSanitizer extends Sanitizer {\n  sanitize(_context: any, value: string): string {\n    return value;\n  }\n}\n// TODO: when angular finally exports their scheduler token for ivy CD, provide our own with queueMacroTask\n// export function schedulerFactory() {\n//   return (fn: any) => {\n//     console.log('SCHEDULER');\n//     setTimeout(fn, 0);\n//   };\n// }\n\nexport class NativeScriptDocument {\n  // Required by the AnimationDriver\n  public body: any = {\n    isOverride: true,\n  };\n\n  createElement(tag: string) {\n    throw new Error('NativeScriptDocument is not DOM Document. There is no createElement() method.');\n  }\n}\n\nexport const COMMON_PROVIDERS = [defaultPageFactoryProvider, { provide: Sanitizer, useClass: NativeScriptSanitizer, deps: [] }, { provide: DOCUMENT, useClass: NativeScriptDocument, deps: [] }];\n\nexport const platformNativeScript = createPlatformFactory(platformCore, 'nativescriptDynamic', COMMON_PROVIDERS);\n\nexport interface HmrOptions {\n  /**\n   * A factory function that returns either Module type or NgModuleFactory type.\n   * This needs to be a factory function as the types will change when modules are replaced.\n   */\n  moduleTypeFactory?: () => Type<any> | NgModuleFactory<any>;\n\n  /**\n   * A livesync callback that will be called instead of the original livesync.\n   * It gives the HMR a hook to apply the module replacement.\n   * @param bootstrapPlatform - A bootstrap callback to be called after HMR is done. It will bootstrap a new angular app within the exisiting platform, using the moduleTypeFactory to get the Module or NgModuleFactory to be used.\n   */\n  livesyncCallback: (bootstrapPlatform: () => void) => void;\n}\n\nexport interface AppOptions {\n  cssFile?: string;\n  startPageActionBarHidden?: boolean;\n  hmrOptions?: HmrOptions;\n  /**\n   * Background color of the root view\n   */\n  backgroundColor?: string;\n  /**\n   * Use animated launch view (async by default)\n   */\n  launchView?: AppLaunchView;\n  /**\n   * When using Async APP_INITIALIZER, set this to `true`.\n   * (Not needed when using launchView)\n   */\n  async?: boolean;\n}\n\n/**\n * @deprecated use runNativeScriptAngularApp instead\n */\nexport const platformNativeScriptDynamic = function (options?: AppOptions, extraProviders?: StaticProvider[]) {\n  console.log('platformNativeScriptDynamic is deprecated, use runNativeScriptAngularApp instead');\n  options = options || {};\n  extraProviders = extraProviders || [];\n\n  const ngRootView = new AppHostView(new Color(options.backgroundColor || 'white'));\n  let launchView = options.launchView;\n  if (!launchView && options.async) {\n    launchView = new GridLayout();\n    launchView.backgroundColor = options.backgroundColor || 'white';\n  }\n  return new NativeScriptPlatformRefProxy(platformNativeScript([...extraProviders]), launchView);\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nexport function throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nexport function throwPortalOutletAlreadyDisposedError() {\n  throw Error('This PortalOutlet has already been disposed');\n}\n\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nexport function throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' + 'a ComponentPortal or a TemplatePortal.');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nexport function throwNullPortalOutletError() {\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nexport function throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { TemplateRef, ViewContainerRef, ElementRef, ComponentRef, EmbeddedViewRef, Injector, ComponentFactoryResolver } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { throwNullPortalOutletError, throwPortalAlreadyAttachedError, throwNoPortalAttachedError, throwNullPortalError, throwPortalOutletAlreadyDisposedError, throwUnknownPortalTypeError } from './portal-errors';\nimport type { ComponentType } from '../../utils/general';\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nexport abstract class Portal<T> {\n  private _attachedHost: PortalOutlet | null;\n\n  /** Attach this portal to a host. */\n  attach(host: PortalOutlet): T {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (host == null) {\n        throwNullPortalOutletError();\n      }\n\n      if (host.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n    }\n\n    this._attachedHost = host;\n    return <T>host.attach(this);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    let host = this._attachedHost;\n\n    if (host != null) {\n      this._attachedHost = null;\n      host.detach();\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwNoPortalAttachedError();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host: PortalOutlet | null) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalOutlet.\n   * The origin is necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef?: ViewContainerRef | null;\n\n  /** [Optional] Injector used for the instantiation of the component. */\n  injector?: Injector | null;\n\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * Defaults to using the resolver from the outlet that the portal is attached to.\n   */\n  componentFactoryResolver?: ComponentFactoryResolver | null;\n\n  constructor(component: ComponentType<T>, viewContainerRef?: ViewContainerRef | null, injector?: Injector | null, componentFactoryResolver?: ComponentFactoryResolver | null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.componentFactoryResolver = componentFactoryResolver;\n  }\n}\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal<C = any> extends Portal<EmbeddedViewRef<C>> {\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef: TemplateRef<C>;\n\n  /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef: ViewContainerRef;\n\n  /** Contextual data to be passed in to the embedded view. */\n  context: C | undefined;\n\n  constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n    this.context = context;\n  }\n\n  get origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n\n  /**\n   * Attach the portal to the provided `PortalOutlet`.\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\n   * instance.\n   */\n  attach(host: PortalOutlet, context: C | undefined = this.context): EmbeddedViewRef<C> {\n    this.context = context;\n    return super.attach(host);\n  }\n\n  detach(): void {\n    this.context = undefined;\n    return super.detach();\n  }\n}\n\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nexport class DomPortal<T = View> extends Portal<T> {\n  /** DOM node hosting the portal's content. */\n  readonly element: T;\n\n  constructor(element: T | ElementRef<T>) {\n    super();\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n\n/** A `PortalOutlet` is an space that can contain a single `Portal`. */\nexport interface PortalOutlet {\n  /** Attaches a portal to this outlet. */\n  attach(portal: Portal<any>): any;\n\n  /** Detaches the currently attached portal from this outlet. */\n  detach(): any;\n\n  /** Performs cleanup before the outlet is destroyed. */\n  dispose(): void;\n\n  /** Whether there is currently a portal attached to this outlet. */\n  hasAttached(): boolean;\n}\n\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nexport abstract class BasePortalOutlet implements PortalOutlet {\n  /** The portal currently attached to the host. */\n  protected _attachedPortal: Portal<any> | null;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn: (() => void) | null;\n\n  /** Whether this host has already been permanently disposed. */\n  private _isDisposed: boolean = false;\n\n  /** Whether this host has an attached portal. */\n  hasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /** Attaches a portal. */\n  attach(portal: Portal<any>): any {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!portal) {\n        throwNullPortalError();\n      }\n\n      if (this.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n\n      if (this._isDisposed) {\n        throwPortalOutletAlreadyDisposedError();\n      }\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n      // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n    } else if (this.attachDomPortal && portal instanceof DomPortal) {\n      this._attachedPortal = portal;\n      return this.attachDomPortal(portal);\n    }\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwUnknownPortalTypeError();\n    }\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n\n  abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n\n  // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n  readonly attachDomPortal: null | ((portal: DomPortal) => any) = null;\n\n  /** Detaches a previously attached portal. */\n  detach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n\n  /** Permanently dispose of this portal host. */\n  dispose(): void {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n\n  /** @docs-private */\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n\n  private _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ComponentFactoryResolver, ComponentRef, Directive, EmbeddedViewRef, EventEmitter, NgModule, OnDestroy, OnInit, Output, TemplateRef, ViewContainerRef, Inject, Renderer2 } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { DOCUMENT } from '@angular/common';\nimport { BasePortalOutlet, ComponentPortal, Portal, TemplatePortal, DomPortal } from './common';\nimport { CommentNode } from '../../views/invisible-nodes';\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\n@Directive({\n  selector: '[cdkPortal]',\n  exportAs: 'cdkPortal',\n})\nexport class CdkPortal extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n/**\n * Possible attached references to the CdkPortalOutlet.\n */\nexport type CdkPortalOutletAttachedRef = ComponentRef<any> | EmbeddedViewRef<any> | null;\n\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\n@Directive({\n  selector: '[cdkPortalOutlet]',\n  exportAs: 'cdkPortalOutlet',\n  inputs: ['portal: cdkPortalOutlet'],\n})\nexport class CdkPortalOutlet extends BasePortalOutlet implements OnInit, OnDestroy {\n  /** Whether the portal component is initialized. */\n  private _isInitialized = false;\n\n  /** Reference to the currently-attached component/view ref. */\n  private _attachedRef: CdkPortalOutletAttachedRef;\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver, private _viewContainerRef: ViewContainerRef, private renderer: Renderer2) {\n    super();\n  }\n\n  /** Portal associated with the Portal outlet. */\n  get portal(): Portal<any> | null {\n    return this._attachedPortal;\n  }\n\n  set portal(portal: Portal<any> | null) {\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\n    if (this.hasAttached() && !portal && !this._isInitialized) {\n      return;\n    }\n\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._attachedPortal = portal;\n  }\n\n  /** Emits when a portal is attached to the outlet. */\n  @Output() attached: EventEmitter<CdkPortalOutletAttachedRef> = new EventEmitter<CdkPortalOutletAttachedRef>();\n\n  /** Component or view reference that is attached to the portal. */\n  get attachedRef(): CdkPortalOutletAttachedRef {\n    return this._attachedRef;\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    super.dispose();\n    this._attachedPortal = null;\n    this._attachedRef = null;\n  }\n\n  /**\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal outlet.\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalOutlet.\n    const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory<T>(portal.component);\n    const ref = viewContainerRef.createComponent<T>(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n\n    // If we're using a view container that's different from the injected one (e.g. when the portal\n    // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n    // inside of the alternate view container.\n    if (viewContainerRef !== this._viewContainerRef) {\n      this.renderer.appendChild(this._getRootNode(), (ref.hostView as EmbeddedViewRef<any>).rootNodes[0]);\n    }\n\n    super.setDisposeFn(() => ref.destroy());\n    this._attachedPortal = portal;\n    this._attachedRef = ref;\n    this.attached.emit(ref);\n\n    return ref;\n  }\n\n  /**\n   * Attach the given TemplatePortal to this PortalHost as an embedded View.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    portal.setAttachedHost(this);\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._attachedPortal = portal;\n    this._attachedRef = viewRef;\n    this.attached.emit(viewRef);\n\n    return viewRef;\n  }\n\n  /**\n   * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode: CommentNode = this.renderer.createComment('dom-portal');\n\n    portal.setAttachedHost(this);\n    this.renderer.insertBefore(element.parentNode, anchorNode, element);\n    this.renderer.appendChild(this._getRootNode(), element);\n\n    super.setDisposeFn(() => {\n      if (anchorNode.parentNode) {\n        this.renderer.insertBefore(anchorNode.parentNode, element, anchorNode);\n        this.renderer.removeChild(anchorNode.parentNode, anchorNode);\n        // anchorNode.parentNode!.replaceChild(element, anchorNode);\n      }\n    });\n  };\n\n  /** Gets the root node of the portal outlet. */\n  private _getRootNode(): View {\n    const nativeElement: View = this._viewContainerRef.element.nativeElement;\n\n    // The directive could be set on a template which will result in a comment\n    // node being the root. Use the comment's parent node if that is the case.\n    return (!(nativeElement instanceof CommentNode) ? nativeElement : nativeElement.parentNode!) as View;\n  }\n\n  static ngAcceptInputType_portal: Portal<any> | null | undefined | '';\n}\n\n@NgModule({\n  exports: [CdkPortal, CdkPortalOutlet],\n  declarations: [CdkPortal, CdkPortalOutlet],\n})\nexport class PortalModule {}\n","import { Frame, Page } from '@nativescript/core';\nimport { NgView, ViewClassMeta } from '../views/view-types';\nimport { isInvisibleNode } from '../views/utils';\n\nexport const frameMeta: ViewClassMeta = {\n  insertChild: (parent: Frame, child: NgView) => {\n    // Page cannot be added to Frame with _addChildFromBuilder (thwos \"use defaultPage\" error)\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (child instanceof Page) {\n      parent.navigate({ create: () => child });\n    } else {\n      throw new Error('Only a Page can be a child of Frame');\n    }\n  },\n};\n","import { LayoutBase, View } from '@nativescript/core';\nimport { InvisibleNode } from '../views/invisible-nodes';\nimport { ViewClassMeta } from '../views/view-types';\n\nexport type ViewResolver = () => any;\n\nexport const elementMap = new Map<string, { resolver: ViewResolver; meta?: ViewClassMeta }>();\nconst camelCaseSplit = /([a-z0-9])([A-Z])/g;\nconst defaultViewMeta: ViewClassMeta = { skipAddToDom: false };\n\nexport function registerElement(elementName: string, resolver: ViewResolver, meta?: ViewClassMeta): void {\n  const entry = { resolver, meta };\n  elementMap.set(elementName, entry);\n  elementMap.set(elementName.toLowerCase(), entry);\n  elementMap.set(elementName.replace(camelCaseSplit, '$1-$2').toLowerCase(), entry);\n}\n\nexport function getViewClass(elementName: string): any {\n  const entry = elementMap.get(elementName) || elementMap.get(elementName.toLowerCase());\n  if (!entry) {\n    throw new TypeError(`No known component for element ${elementName}.`);\n  }\n\n  try {\n    return entry.resolver();\n  } catch (e) {\n    throw new TypeError(`Could not load view for: ${elementName}.${e}`);\n  }\n}\n\nexport function getViewMeta(nodeName: string): ViewClassMeta {\n  const entry = elementMap.get(nodeName) || elementMap.get(nodeName.toLowerCase());\n  return (entry && entry.meta) || defaultViewMeta;\n}\n\nexport function isKnownView(elementName: string): boolean {\n  return elementMap.has(elementName) || elementMap.has(elementName.toLowerCase());\n}\n\nexport function extractSingleViewRecursive(nodes: Array<any>, nestLevel: number): View {\n  const actualNodes = nodes.filter((node) => !(node instanceof InvisibleNode));\n\n  if (actualNodes.length === 0) {\n    throw new Error(`No suitable views found in list template! ` + `Nesting level: ${nestLevel}`);\n  } else if (actualNodes.length > 1) {\n    throw new Error(`More than one view found in list template!` + `Nesting level: ${nestLevel}`);\n  }\n\n  const rootLayout = actualNodes[0];\n  if (!rootLayout) {\n    return extractSingleViewRecursive(rootLayout.children, nestLevel + 1);\n  }\n\n  const parentLayout = rootLayout.parent;\n  if (parentLayout instanceof LayoutBase) {\n    const node = rootLayout.parentNode;\n    parentLayout.removeChild(rootLayout);\n    rootLayout.parentNode = node;\n  }\n\n  return rootLayout;\n}\n\n/**\n * @deprecated getSingleViewRecursive is deprecated, use extractSingleViewRecursive\n */\nexport function getSingleViewRecursive(nodes: Array<any>, nestLevel: number): View {\n  return extractSingleViewRecursive(nodes, nestLevel);\n}\n","import { AbsoluteLayout, ActivityIndicator, Button, ContentView, DatePicker, DockLayout, FlexboxLayout, FormattedString, Frame, GridLayout, HtmlView, Image, Label, ListPicker, ListView, Page, Placeholder, Progress, ProxyViewContainer, Repeater, RootLayout, ScrollView, SearchBar, SegmentedBar, SegmentedBarItem, Slider, Span, StackLayout, Switch, TabView, TextField, TextView, TimePicker, WebView, WrapLayout } from '@nativescript/core';\nimport { frameMeta } from './metas';\nimport { registerElement } from './registry';\n\n// Register default NativeScript components\n// Note: ActionBar related components are registerd together with action-bar directives.\nexport function registerNativeScriptViewComponents() {\n  if (!(<any>global).__ngRegisteredViews) {\n    (<any>global).__ngRegisteredViews = true;\n    registerElement('AbsoluteLayout', () => AbsoluteLayout);\n    registerElement('ActivityIndicator', () => ActivityIndicator);\n    registerElement('Button', () => Button);\n    registerElement('ContentView', () => ContentView);\n    registerElement('DatePicker', () => DatePicker);\n    registerElement('DockLayout', () => DockLayout);\n    registerElement('Frame', () => Frame, frameMeta);\n    registerElement('GridLayout', () => GridLayout);\n    registerElement('HtmlView', () => HtmlView);\n    registerElement('Image', () => Image);\n    // Parse5 changes <Image> tags to <img>. WTF!\n    registerElement('img', () => Image);\n    registerElement('Label', () => Label);\n    registerElement('ListPicker', () => ListPicker);\n    registerElement('ListView', () => ListView);\n    registerElement('Page', () => Page);\n    registerElement('Placeholder', () => Placeholder);\n    registerElement('Progress', () => Progress);\n    registerElement('ProxyViewContainer', () => ProxyViewContainer);\n    registerElement('Repeater', () => Repeater);\n    registerElement('RootLayout', () => RootLayout);\n    registerElement('ScrollView', () => ScrollView);\n    registerElement('SearchBar', () => SearchBar);\n    registerElement('SegmentedBar', () => SegmentedBar);\n    registerElement('SegmentedBarItem', () => SegmentedBarItem);\n    registerElement('Slider', () => Slider);\n    registerElement('StackLayout', () => StackLayout);\n    registerElement('FlexboxLayout', () => FlexboxLayout);\n    registerElement('Switch', () => Switch);\n    registerElement('TabView', () => TabView);\n    registerElement('TextField', () => TextField);\n    registerElement('TextView', () => TextView);\n    registerElement('TimePicker', () => TimePicker);\n    registerElement('WebView', () => WebView);\n    registerElement('WrapLayout', () => WrapLayout);\n    registerElement('FormattedString', () => FormattedString);\n    registerElement('Span', () => Span);\n  }\n}\n","import { View, unsetValue, Placeholder, ContentView, LayoutBase, ProxyViewContainer } from '@nativescript/core';\nimport { getViewClass, getViewMeta, isKnownView } from './element-registry';\nimport { CommentNode, NgView, TextNode, ViewExtensions, isDetachedElement, isInvisibleNode, isView, isContentView, isLayout } from './views';\nimport { NamespaceFilter } from './property-filter';\n\nimport { NativeScriptDebug } from './trace';\nimport { NgLayoutBase } from './views/view-types';\n\nconst ELEMENT_NODE_TYPE = 1;\nconst XML_ATTRIBUTES = Object.freeze(['style', 'rows', 'columns', 'fontAttributes']);\nconst whiteSpaceSplitter = /\\s+/;\n\nexport type BeforeAttachAction = (view: View) => void;\n\nfunction printNgTree(view: NgView) {\n  let parent = view;\n  while (parent.parent && (parent.parent as NgView).firstChild) {\n    parent = parent.parent as NgView;\n  }\n  printChildrenRecurse(parent);\n}\nfunction printChildrenRecurse(parent: NgView) {\n  const children = parent.firstChild ? [parent.firstChild, ...getChildrenSiblings(parent.firstChild).nextSiblings] : [];\n  console.log(`parent: ${parent}, firstChild: ${parent.firstChild}, lastChild: ${parent.lastChild} children: ${children}`);\n  if (parent.firstChild) {\n    console.log(`----- start ${parent}`);\n  }\n  children.forEach((c) => printChildrenRecurse(c));\n  if (parent.firstChild) {\n    console.log(`----- end ${parent}`);\n  }\n}\n\nfunction getChildrenSiblings(view: NgView) {\n  const nextSiblings = [];\n  const previousSiblings = [];\n  let sibling = view.nextSibling;\n  while (sibling) {\n    nextSiblings.push(sibling);\n    sibling = sibling.nextSibling;\n  }\n  sibling = view.previousSibling;\n  while (sibling) {\n    previousSiblings.push(sibling);\n    sibling = sibling.previousSibling;\n  }\n  return {\n    previousSiblings,\n    nextSiblings,\n  };\n}\n\nfunction printSiblingsTree(view: NgView) {\n  const { previousSiblings, nextSiblings } = getChildrenSiblings(view);\n  console.log(`${view} previousSiblings: ${previousSiblings} nextSiblings: ${nextSiblings}`);\n}\n\nconst propertyMaps: Map<Function, Map<string, string>> = new Map<Function, Map<string, string>>();\n\nexport class ViewUtil {\n  constructor(private namespaceFilters?: NamespaceFilter[], private reuseViews?: boolean) {}\n  /**\n   * Inserts a child into a parrent, preferably before next.\n   * @param parent parent view\n   * @param child child view to be added\n   * @param previous previous element. If present, insert after this.\n   * @param next next element. If present, insert before this (previous is ignored).\n   */\n  private insertChild(parent: View, child: View, previous?: NgView, next?: NgView) {\n    if (!parent) {\n      return;\n    }\n\n    const extendedParent = this.ensureNgViewExtensions(parent);\n    const extendedChild = this.ensureNgViewExtensions(child);\n\n    // if there's a next child, previous is the previousSibling of it\n    if (next) {\n      previous = next.previousSibling;\n    } else if (previous) {\n      // if there's a previous, next is the nextSibling of it\n      next = previous.nextSibling;\n    } else {\n      // no previous or next, append to the parent\n      previous = extendedParent.lastChild; // this can still be undefined if the parent has no children!\n    }\n    this.insertInList(extendedParent, extendedChild, previous, next);\n\n    if (isInvisibleNode(child)) {\n      extendedChild.parentNode = extendedParent;\n    }\n\n    if (!isDetachedElement(child)) {\n      const nextVisual = this.findNextVisual(next);\n      this.addToVisualTree(extendedParent, extendedChild, nextVisual);\n    }\n    // printNgTree(extendedChild);\n  }\n\n  public insertBefore(parent: View, child: View, refChild?: View | NgView) {\n    const extendedRef = refChild ? this.ensureNgViewExtensions(refChild) : undefined;\n    this.insertChild(parent, child, undefined, extendedRef);\n  }\n  public insertAfter(parent: View, child: View, refChild?: View | NgView) {\n    const extendedRef = refChild ? this.ensureNgViewExtensions(refChild) : undefined;\n    this.insertChild(parent, child, extendedRef);\n  }\n\n  public appendChild(parent: View, child: View) {\n    this.insertChild(parent, child);\n  }\n\n  /**\n   * Inserts a view into the parent/sibling linked list\n   * !WARNING: this method makes no checks to validate the integrity of previous/next children\n   * @param parent parent view\n   * @param child child view\n   * @param previous previous element. null/undefined for first element\n   * @param next next element. null/undefined for last element\n   */\n  private insertInList(parent: NgView, child: NgView, previous: NgView, next: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.insertInList parent: ${parent}, view: ${child}, ` + `previous: ${previous}, next: ${next}`);\n    }\n\n    if (previous) {\n      previous.nextSibling = child;\n      child.previousSibling = previous;\n    } else {\n      parent.firstChild = child;\n    }\n\n    if (next) {\n      child.nextSibling = next;\n      next.previousSibling = child;\n    } else {\n      parent.lastChild = child;\n    }\n  }\n\n  private addToVisualTree(parent: NgView, child: NgView, next: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.addToVisualTree parent: ${parent}, view: ${child}, next: ${next}`);\n    }\n\n    if (parent.meta && parent.meta.insertChild) {\n      parent.meta.insertChild(parent, child, next);\n    } else if (isLayout(parent)) {\n      this.insertToLayout(parent, child, next);\n    } else if (isContentView(parent)) {\n      parent.content = child;\n    } else if (parent && (<any>parent)._addChildFromBuilder) {\n      (<any>parent)._addChildFromBuilder(child.nodeName, child);\n    }\n  }\n\n  private insertToLayout(parent: NgLayoutBase, child: NgView, next: NgView): void {\n    if (child.parent === parent) {\n      this.removeLayoutChild(parent, child);\n    }\n\n    const nextVisual = this.findNextVisual(next);\n    if (nextVisual) {\n      const index = parent.getChildIndex(nextVisual);\n      parent.insertChild(child, index);\n    } else {\n      parent.addChild(child);\n    }\n    // parent.eachChild((c) => {console.log(c); return true});\n  }\n\n  private findNextVisual(view: NgView): NgView {\n    let next = view;\n    while (next && isDetachedElement(next)) {\n      next = next.nextSibling;\n    }\n\n    return next;\n  }\n\n  public removeChild(parent: View, child: View) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeChild parent: ${parent} child: ${child}`);\n    }\n\n    if (!parent) {\n      return;\n    }\n\n    const extendedParent = this.ensureNgViewExtensions(parent);\n    const extendedChild = this.ensureNgViewExtensions(child);\n\n    this.removeFromList(extendedParent, extendedChild);\n    if (!isDetachedElement(extendedChild)) {\n      this.removeFromVisualTree(extendedParent, extendedChild);\n    }\n  }\n\n  private removeFromList(parent: NgView, child: NgView) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeFromList parent: ${parent} child: ${child}`);\n    }\n\n    if (parent.firstChild === child && parent.lastChild === child) {\n      parent.firstChild = null;\n      parent.lastChild = null;\n      child.nextSibling = null;\n      child.previousSibling = null;\n      return;\n    }\n\n    if (parent.firstChild === child) {\n      parent.firstChild = child.nextSibling;\n    }\n\n    const previous = child.previousSibling;\n    if (parent.lastChild === child) {\n      parent.lastChild = previous;\n    }\n\n    if (previous) {\n      previous.nextSibling = child.nextSibling;\n      if (child.nextSibling) {\n        child.nextSibling.previousSibling = previous;\n      }\n    }\n\n    child.nextSibling = null;\n    child.previousSibling = null;\n  }\n\n  // NOTE: This one is O(n) - use carefully\n  private findPreviousElement(parent: NgView, child: NgView): NgView {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.findPreviousElement parent: ${parent} child: ${child}`);\n    }\n\n    let previousVisual;\n    if (isLayout(parent)) {\n      previousVisual = this.getPreviousVisualElement(parent, child);\n    }\n\n    let previous = previousVisual || parent.firstChild;\n\n    // since detached elements are not added to the visual tree,\n    // we need to find the actual previous sibling of the view,\n    // which may as well be an invisible node\n    while (previous && previous !== child && previous.nextSibling !== child) {\n      previous = previous.nextSibling;\n    }\n\n    return previous;\n  }\n\n  private getPreviousVisualElement(parent: NgLayoutBase, child: NgView): NgView {\n    const elementIndex = parent.getChildIndex(child);\n\n    if (elementIndex > 0) {\n      return parent.getChildAt(elementIndex - 1) as NgView;\n    }\n  }\n\n  // NOTE: This one is O(n) - use carefully\n  public getChildIndex(parent: any, child: NgView) {\n    if (isLayout(parent)) {\n      return parent.getChildIndex(child);\n    } else if (isContentView(parent)) {\n      return child === parent.content ? 0 : -1;\n    }\n  }\n\n  private removeFromVisualTree(parent: NgView, child: NgView) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeFromVisualTree parent: ${parent} child: ${child}`);\n    }\n\n    if (parent.meta && parent.meta.removeChild) {\n      parent.meta.removeChild(parent, child);\n    } else if (isLayout(parent)) {\n      this.removeLayoutChild(parent, child);\n    } else if (isContentView(parent) && parent.content === child) {\n      parent.content = null;\n    } else if (isView(parent)) {\n      parent._removeView(child);\n    }\n  }\n\n  private removeLayoutChild(parent: NgLayoutBase, child: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeLayoutChild parent: ${parent} child: ${child}`);\n    }\n\n    const index = parent.getChildIndex(child);\n\n    if (index !== -1) {\n      parent.removeChild(child);\n    }\n  }\n\n  public createComment(value: string): CommentNode {\n    return new CommentNode(value);\n  }\n\n  public createText(value: string): TextNode {\n    return new TextNode(value);\n  }\n\n  public createView(name: string): NgView {\n    const originalName = name;\n    if (!isKnownView(name)) {\n      name = 'ProxyViewContainer';\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Creating view: ${originalName} ${name}`);\n    }\n\n    const viewClass = getViewClass(name);\n    const view = <NgView>new viewClass();\n    const ngView = this.setNgViewExtensions(view, name);\n    ngView.reusable = !!this.reuseViews;\n\n    return ngView;\n  }\n\n  private ensureNgViewExtensions(view: View): NgView {\n    if (view.hasOwnProperty('meta')) {\n      return view as NgView;\n    } else {\n      const name = view.cssType;\n      const ngView = this.setNgViewExtensions(view, name);\n\n      return ngView;\n    }\n  }\n\n  private setNgViewExtensions(view: View, name: string): NgView {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Make into a NgView view: ${view} name: \"${name}\"`);\n    }\n\n    const ngView = view as NgView;\n    ngView.nodeName = name;\n    ngView.meta = getViewMeta(name);\n\n    // we're setting the node type of the view\n    // to 'element' because of checks done in the\n    // dom animation engine\n    ngView.nodeType = ELEMENT_NODE_TYPE;\n\n    return ngView;\n  }\n\n  public setProperty(view: NgView, attributeName: string, value: any, namespace?: string): void {\n    if (!view || (namespace && !this.runsIn(namespace))) {\n      return;\n    }\n\n    if (attributeName.indexOf('.') !== -1) {\n      // Handle nested properties\n      const properties = attributeName.split('.');\n      attributeName = properties[properties.length - 1];\n\n      let propMap = this.getProperties(view);\n      let i = 0;\n      while (i < properties.length - 1 && typeof view !== 'undefined') {\n        let prop = properties[i];\n        if (propMap.has(prop)) {\n          prop = propMap.get(prop);\n        }\n\n        view = view[prop];\n        propMap = this.getProperties(view);\n        i++;\n      }\n    }\n\n    if (typeof view !== 'undefined') {\n      this.setPropertyInternal(view, attributeName, value);\n    }\n  }\n\n  private runsIn(platform: string): boolean {\n    let runs = true;\n    const last = () => true;\n    if (this.namespaceFilters) {\n      let chain = (p: string) => true;\n      for (let i = this.namespaceFilters.length - 1; i >= 0; i--) {\n        const currentChain = chain;\n        chain = (p) => this.namespaceFilters[i].runsIn(p, currentChain);\n      }\n      runs = chain(platform);\n      runs = runs !== false ? true : false; // undefined means true\n      // this.namespaceFilters.some((filter) => {\n      // \tconst runsInFilter = filter.runsIn(platform);\n      // \tif (runsInFilter !== undefined) {\n      // \t\truns = runsInFilter;\n      // \t\treturn true;\n      // \t}\n      // });\n    }\n    return runs;\n  }\n\n  private setPropertyInternal(view: NgView, attributeName: string, value: any): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Setting attribute: ${attributeName}=${value} to ${view}`);\n    }\n\n    if (attributeName === 'class') {\n      this.setClasses(view, value);\n      return;\n    }\n\n    if (XML_ATTRIBUTES.indexOf(attributeName) !== -1) {\n      view[attributeName] = value;\n      return;\n    }\n\n    const propMap = this.getProperties(view);\n    const propertyName = propMap.get(attributeName);\n\n    // Ensure the children of a collection currently have no parent set.\n    if (Array.isArray(value)) {\n      this.removeParentReferencesFromItems(value);\n    }\n\n    if (propertyName) {\n      // We have a lower-upper case mapped property.\n      view[propertyName] = value;\n      return;\n    }\n\n    // Unknown attribute value -- just set it to our object as is.\n    view[attributeName] = value;\n  }\n\n  private removeParentReferencesFromItems(items: any[]): void {\n    for (const item of items) {\n      if (item.parent && item.parentNode) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.viewUtilLog(`Unassigning parent ${item.parentNode} on value: ${item}`);\n        }\n        item.parent = undefined;\n        item.parentNode = undefined;\n      }\n    }\n  }\n\n  private getProperties(instance: any): Map<string, string> {\n    const type = instance && instance.constructor;\n    if (!type) {\n      return new Map<string, string>();\n    }\n\n    if (!propertyMaps.has(type)) {\n      let propMap = new Map<string, string>();\n      for (let propName in instance) {\n        // tslint:disable:forin\n        propMap.set(propName.toLowerCase(), propName);\n      }\n      propertyMaps.set(type, propMap);\n    }\n\n    return propertyMaps.get(type);\n  }\n\n  private cssClasses(view: NgView) {\n    if (!view.ngCssClasses) {\n      view.ngCssClasses = new Map<string, boolean>();\n    }\n    return view.ngCssClasses;\n  }\n\n  public addClass(view: View | NgView, className: string): void {\n    const extendedView = this.ensureNgViewExtensions(view);\n    this.cssClasses(extendedView).set(className, true);\n    this.syncClasses(extendedView);\n  }\n\n  public removeClass(view: View, className: string): void {\n    const extendedView = this.ensureNgViewExtensions(view);\n    this.cssClasses(extendedView).delete(className);\n    this.syncClasses(extendedView);\n  }\n\n  private setClasses(view: NgView, classesValue: string): void {\n    let classes = classesValue.split(whiteSpaceSplitter);\n    this.cssClasses(view).clear();\n    classes.forEach((className) => this.cssClasses(view).set(className, true));\n    this.syncClasses(view);\n  }\n\n  private syncClasses(view: NgView): void {\n    let classValue = (<any>Array).from(this.cssClasses(view).keys()).join(' ');\n    view.className = classValue;\n  }\n\n  public setStyle(view: View, styleName: string, value: any) {\n    view.style[styleName] = value;\n  }\n\n  public removeStyle(view: View, styleName: string) {\n    view.style[styleName] = unsetValue;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ApplicationRef, Injector, Renderer2, Optional } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { CommentNode } from '../../views/invisible-nodes';\nimport { ViewUtil } from '../../view-util';\nimport { BasePortalOutlet, ComponentPortal, TemplatePortal, DomPortal } from './common';\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nexport class NativeScriptDomPortalOutlet extends BasePortalOutlet {\n  private _viewUtil: ViewUtil;\n  constructor(\n    /** Element into which the content is projected. */\n    public outletElement: View,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _defaultInjector: Injector,\n    @Optional() viewUtil?: ViewUtil\n  ) {\n    super();\n    this._viewUtil = viewUtil || this._defaultInjector.get(ViewUtil);\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    const rootNode = this._getComponentRootNode(componentRef);\n    if (rootNode.parent) {\n      this._viewUtil.removeChild(rootNode.parent as View, rootNode);\n    }\n    this._viewUtil.appendChild(this.outletElement, this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach((rootNode) => {\n      if (rootNode.parent) {\n        this._viewUtil.removeChild(rootNode.parent as View, rootNode);\n      }\n      this._viewUtil.appendChild(this.outletElement, rootNode);\n    });\n\n    // Note that we want to detect changes after the nodes have been moved so that\n    // any directives inside the portal that are looking at the DOM inside a lifecycle\n    // hook won't be invoked too early.\n    viewRef.detectChanges();\n\n    this.setDisposeFn(() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    });\n\n    // TODO(jelbourn): Return locals from view.\n    return viewRef;\n  }\n\n  /**\n   * Attaches a DOM portal by transferring its content into the outlet.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode: CommentNode = this._viewUtil.createComment('dom-portal');\n\n    this._viewUtil.insertBefore(element.parentNode as View, anchorNode, element);\n    this._viewUtil.appendChild(this.outletElement, element);\n\n    super.setDisposeFn(() => {\n      // We can't use `replaceWith` here because IE doesn't support it.\n      if (anchorNode.parentNode) {\n        this._viewUtil.insertBefore(anchorNode.parentNode, element, anchorNode);\n        this._viewUtil.removeChild(anchorNode.parentNode, anchorNode);\n        //anchorNode.parentNode.replaceChild(element, anchorNode);\n      }\n    });\n  };\n\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose(): void {\n    super.dispose();\n    if (this.outletElement.parentNode != null) {\n      this._viewUtil.removeChild(this.outletElement.parentNode as View, this.outletElement);\n    }\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): View {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as View;\n  }\n}\n","import { ComponentRef, ComponentFactory, ViewContainerRef, Component, Type, ComponentFactoryResolver, ChangeDetectorRef, ApplicationRef, OnDestroy, TemplateRef, ViewChild, Injector } from '@angular/core';\nimport { ProxyViewContainer, Trace } from '@nativescript/core';\nimport { ComponentPortal, TemplatePortal } from './portal';\nimport type { ComponentType } from '../utils/general';\nimport { registerElement } from '../element-registry';\n\nregisterElement('DetachedContainer', () => ProxyViewContainer, {\n  skipAddToDom: true,\n});\n\n/**\n * Wrapper component used for loading components when navigating\n * It uses DetachedContainer as selector so that it is containerRef is not attached to\n * the visual tree.\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'DetachedContainer',\n  template: `<Placeholder #loader></Placeholder><ng-container #vc></ng-container><ng-content></ng-content>`,\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class DetachedLoader implements OnDestroy {\n  @ViewChild('vc', { read: ViewContainerRef, static: true }) vc: ViewContainerRef;\n  private disposeFunctions: Array<() => void> = [];\n  // tslint:disable-line:component-class-suffix\n  constructor(private resolver: ComponentFactoryResolver, private changeDetector: ChangeDetectorRef, private containerRef: ViewContainerRef, private appRef: ApplicationRef) {}\n\n  public createComponentPortal<T>(componentType: ComponentType<T>, customInjector?: Injector) {\n    return new ComponentPortal(componentType, this.vc, customInjector || this.vc.injector);\n  }\n\n  public createTemplatePortal<T>(templateRef: TemplateRef<T>, context?: T) {\n    return new TemplatePortal(templateRef, this.vc, context);\n  }\n\n  private loadInLocation(componentType: Type<any>): ComponentRef<any> {\n    const factory = this.resolver.resolveComponentFactory(componentType);\n    const componentRef = factory.create(this.containerRef.injector);\n    this.appRef.attachView(componentRef.hostView);\n\n    this.disposeFunctions.push(() => {\n      this.appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // Component is created, built may not be checked if we are loading\n    // inside component with OnPush CD strategy. Mark us for check to be sure CD will reach us.\n    // We are inside a promise here so no need for setTimeout - CD should trigger\n    // after the promise.\n    Trace.write('DetachedLoader.loadInLocation component loaded -> markForCheck', 'detached-loader');\n\n    return componentRef;\n  }\n\n  public ngOnDestroy() {\n    this.disposeFunctions.forEach((fn) => fn());\n  }\n\n  public detectChanges() {\n    this.changeDetector.markForCheck();\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadComponent(componentType: Type<any>): Promise<ComponentRef<any>> {\n    Trace.write('DetachedLoader.loadComponent', 'detached-loader');\n    return Promise.resolve(this.loadInLocation(componentType));\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadComponentSync(componentType: Type<any>): ComponentRef<any> {\n    Trace.write('DetachedLoader.loadComponent', 'detached-loader');\n    return this.loadInLocation(componentType);\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadWithFactory<T>(factory: ComponentFactory<T>): ComponentRef<T> {\n    const componentRef = factory.create(this.containerRef.injector);\n    this.appRef.attachView(componentRef.hostView);\n\n    this.disposeFunctions.push(() => {\n      this.appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    return componentRef;\n  }\n}\n","import { XhrFactory } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NativescriptXhrFactory extends XhrFactory {\n  build() {\n    return new XMLHttpRequest();\n  }\n}\n","import { Inject, Injectable, NgZone, Optional, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation } from '@angular/core';\nimport { addTaggedAdditionalCSS, Application, ContentView, Device, getViewById, Observable, profile, Utils, View } from '@nativescript/core';\nimport { getViewClass, isKnownView } from './element-registry';\nimport { getFirstNativeLikeView, NgView } from './views';\n\nimport { NamespaceFilter, NAMESPACE_FILTERS } from './property-filter';\nimport { APP_ROOT_VIEW, ENABLE_REUSABE_VIEWS, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { NativeScriptDebug } from './trace';\nimport { ViewUtil } from './view-util';\n\nconst addStyleToCss = profile('\"renderer\".addStyleToCss', function addStyleToCss(style: string, tag?: string | number): void {\n  if (tag) {\n    addTaggedAdditionalCSS(style, tag);\n  } else {\n    Application.addCss(style);\n  }\n});\n\nexport class NativeScriptRendererFactory implements RendererFactory2 {\n  private componentRenderers = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n  // backwards compatibility with RadListView\n  private viewUtil = new ViewUtil(this.namespaceFilters, this.reuseViews);\n\n  constructor(@Inject(APP_ROOT_VIEW) private rootView: View, @Inject(NAMESPACE_FILTERS) private namespaceFilters: NamespaceFilter[], @Inject(NATIVESCRIPT_ROOT_MODULE_ID) private rootModuleID: string | number, @Optional() @Inject(ENABLE_REUSABE_VIEWS) private reuseViews) {\n    if (typeof this.reuseViews !== 'boolean') {\n      this.reuseViews = false; // default to false\n    }\n    this.defaultRenderer = new NativeScriptRenderer(rootView, namespaceFilters, this.reuseViews);\n  }\n  createRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRendererFactory.createRenderer ${hostElement}. type.id: ${type.id} type.encapsulation: ${type.encapsulation}`);\n    }\n    if (!hostElement || !type) {\n      return this.defaultRenderer;\n    }\n\n    let renderer = this.componentRenderers.get(type.id);\n    /**\n     *! WARNING\n     *! We're reusing the renderer for the components\n     *! this might cause unexpected behavior as the \"rootView\" is an arbitrary hostElement\n     *! also, the renderer has it's .destroy() called!\n     *! might be useful to create a BaseEmulatedRender and a ProxyEmulatedRender\n     *! every component type gets a BaseEmulatedRender (singleton) which is passed to ProxyEmulatedRender\n     *! ProxyEmulatedRenderer registers with BaseEmulatedRender so we can clean up things like CSS when it's not needed\n     *! this might be useful if we find a way to HMR component styling without a full rebootstrap\n     */\n    if (renderer) {\n      if (renderer instanceof EmulatedRenderer) {\n        renderer.applyToHost(hostElement);\n      }\n\n      return renderer;\n    }\n\n    if (type.encapsulation === ViewEncapsulation.None) {\n      type.styles.map((s) => s.toString()).forEach((v) => addStyleToCss(v, this.rootModuleID));\n      renderer = this.defaultRenderer;\n    } else {\n      renderer = new EmulatedRenderer(type, hostElement, this.namespaceFilters, this.rootModuleID, this.reuseViews);\n      (<EmulatedRenderer>renderer).applyToHost(hostElement);\n    }\n\n    this.componentRenderers.set(type.id, renderer);\n    return renderer;\n  }\n  // begin?(): void {\n  //     throw new Error(\"Method not implemented.\");\n  // }\n  // end?(): void {\n  //     throw new Error(\"Method not implemented.\");\n  // }\n  whenRenderingDone(): Promise<any> {\n    if (!this.rootView) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      let interval: any = 0;\n      function scheduleResolve() {\n        // iOS really hates synchronous things...\n        // Utils.queueMacrotask(resolve);\n        setTimeout(resolve, 15);\n      }\n      function fireWhenLoaded() {\n        const view = rootFactory();\n        if (view.isLoaded) {\n          scheduleResolve();\n        } else {\n          view.once('loaded', scheduleResolve);\n        }\n      }\n      const rootFactory = () => (this.rootView instanceof ContentView ? this.rootView.content : this.rootView);\n      if (!rootFactory()) {\n        interval = setInterval(() => {\n          if (rootFactory()) {\n            clearInterval(interval);\n            fireWhenLoaded();\n          }\n        }, 10);\n      } else {\n        fireWhenLoaded();\n      }\n    });\n    // throw new Error(\"Method not implemented.\");\n  }\n}\n\nclass NativeScriptRenderer implements Renderer2 {\n  private viewUtil = new ViewUtil(this.namespaceFilters, this.reuseViews);\n\n  constructor(private rootView: View, private namespaceFilters?: NamespaceFilter[], private reuseViews?: boolean) {}\n  get data(): { [key: string]: any } {\n    throw new Error('Method not implemented.');\n  }\n  destroy(): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog('NativeScriptRenderer.destroy');\n    }\n  }\n  createElement(name: string, namespace?: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createElement: ${name}`);\n    }\n    let oldName;\n    if (!isKnownView(name)) {\n      oldName = name;\n      name = 'ProxyViewContainer';\n    }\n    const view = this.viewUtil.createView(name);\n    if (oldName) {\n      (view as any).customCSSName = oldName;\n    }\n    return view;\n  }\n  createComment(value: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createComment ${value}`);\n    }\n    return this.viewUtil.createComment(value);\n  }\n  createText(value: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createText ${value}`);\n    }\n    return this.viewUtil.createText(value);\n  }\n  destroyNode: (node: any) => void = (node: View) => {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.destroyNode node: ${node}`);\n    }\n    if (node?.destroyNode) {\n      node?.destroyNode();\n    }\n  };\n  appendChild(parent: View, newChild: View): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.appendChild child: ${newChild} parent: ${parent}`);\n    }\n    this.viewUtil.appendChild(parent, newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.insertBefore child: ${newChild} ` + `parent: ${parent} refChild: ${refChild}`);\n    }\n    this.viewUtil.insertBefore(parent, newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any, isHostElement?: boolean): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeChild child: ${oldChild} parent: ${parent}`);\n    }\n    this.viewUtil.removeChild(parent, oldChild);\n  }\n  selectRootElement(selectorOrNode: any, preserveContent?: boolean) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.selectRootElement: ${selectorOrNode}`);\n    }\n    if (selectorOrNode instanceof View) {\n      return selectorOrNode;\n    }\n    if (selectorOrNode && selectorOrNode[0] === '#') {\n      const result = getViewById(this.rootView, selectorOrNode.slice(1));\n      return (result || this.rootView) as View;\n    }\n    if (typeof selectorOrNode === 'string') {\n      const view = this.viewUtil.createView(selectorOrNode);\n      if (getFirstNativeLikeView(view) === view) {\n        // view is nativelike!\n        this.appendChild(this.rootView, view);\n        return view;\n      }\n    }\n    return this.rootView;\n  }\n  parentNode(node: NgView) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.parentNode for node: ${node} is ${node.parentNode}`);\n    }\n    return node.parentNode;\n  }\n  nextSibling(node: NgView) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.nextSibling of ${node} is ${node.nextSibling}`);\n    }\n    return node.nextSibling;\n  }\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setAttribute ${namespace ? namespace + ':' : ''}${el}.${name} = ${value}`);\n    }\n    this.viewUtil.setProperty(el, name, value, namespace);\n  }\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeAttribute ${namespace ? namespace + ':' : ''}${el}.${name}`);\n    }\n  }\n  addClass(el: any, name: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.addClass ${name}`);\n    }\n    this.viewUtil.addClass(el, name);\n  }\n  removeClass(el: any, name: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeClass ${name}`);\n    }\n    this.viewUtil.removeClass(el, name);\n  }\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setStyle: ${el}, ${style} = ${value}`);\n    }\n    this.viewUtil.setStyle(el, style, value);\n  }\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog('NativeScriptRenderer.removeStyle: ${styleName}');\n    }\n    this.viewUtil.removeStyle(el, style);\n  }\n  setProperty(el: any, name: string, value: any): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setProperty ${el}.${name} = ${value}`);\n    }\n    this.viewUtil.setProperty(el, name, value);\n  }\n  setValue(node: any, value: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setValue renderNode: ${node}, value: ${value}`);\n    }\n    // throw new Error(\"Method not implemented.\");\n  }\n  listen(target: View, eventName: string, callback: (event: any) => boolean | void): () => void {\n    // throw new Error(\"Method not implemented.\");\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.listen: ${eventName}`);\n    }\n    target.on(eventName, callback);\n    if (eventName === View.loadedEvent && target.isLoaded) {\n      // we must create a new obervable here to ensure that the event goes through whatever zone patches are applied\n      const obs = new Observable();\n      obs.once(eventName, callback);\n      obs.notify({\n        eventName,\n        object: target,\n      });\n    }\n    return () => target.off(eventName, callback);\n  }\n}\n\n// CONTENT_ATTR not exported from nativescript-renderer - we need it for styles application.\nconst COMPONENT_REGEX = /%COMP%/g;\nconst ATTR_SANITIZER = /-/g;\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nconst replaceNgAttribute = function (input: string, componentId: string): string {\n  return input.replace(COMPONENT_REGEX, componentId);\n};\n\nconst addScopedStyleToCss = profile(`\"renderer\".addScopedStyleToCss`, function addScopedStyleToCss(style: string, tag?: number | string): void {\n  if (tag) {\n    addTaggedAdditionalCSS(style, tag);\n  } else {\n    Application.addCss(style);\n  }\n});\n\n@Injectable()\nexport class EmulatedRenderer extends NativeScriptRenderer {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(component: RendererType2, rootView: View, namespaceFilters: NamespaceFilter[], private rootModuleId: string | number, reuseViews: boolean) {\n    super(rootView, namespaceFilters, reuseViews);\n\n    const componentId = component.id.replace(ATTR_SANITIZER, '_');\n    this.contentAttr = replaceNgAttribute(CONTENT_ATTR, componentId);\n    this.hostAttr = replaceNgAttribute(HOST_ATTR, componentId);\n    this.addStyles(component.styles, componentId);\n  }\n\n  applyToHost(view: NgView) {\n    super.setAttribute(view, this.hostAttr, '');\n  }\n\n  appendChild(parent: any, newChild: NgView): void {\n    super.appendChild(parent, newChild);\n  }\n\n  createElement(parent: any, name: string): NgView {\n    const view = super.createElement(parent, name);\n\n    // Set an attribute to the view to scope component-specific css.\n    // The property name is pre-generated by Angular.\n    super.setAttribute(view, this.contentAttr, '');\n\n    return view;\n  }\n\n  @profile\n  private addStyles(styles: (string | any[])[], componentId: string) {\n    styles\n      .map((s) => s.toString())\n      .map((s) => replaceNgAttribute(s, componentId))\n      .forEach((s) => addScopedStyleToCss(s, this.rootModuleId));\n  }\n}\n","import { ElementRef, Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { NavigatedData, Page, View, ViewBase } from '@nativescript/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable()\nexport class PageService implements OnDestroy {\n  page: Page;\n  private _inPage$: BehaviorSubject<boolean>;\n  private _pageEvents$ = new Subject<NavigatedData>();\n\n  get inPage(): boolean {\n    return this._inPage$.value;\n  }\n  get inPage$(): Observable<boolean> {\n    return this._inPage$.pipe(distinctUntilChanged());\n  }\n  get pageEvents$(): Observable<NavigatedData> {\n    return this._pageEvents$.asObservable();\n  }\n  constructor(@Optional() page?: Page, @Optional() elRef?: ElementRef<ViewBase>, @Optional() view?: ViewBase) {\n    if (page) {\n      this.page = page;\n    } else {\n      view = view || elRef.nativeElement;\n      while (view) {\n        if (view instanceof Page) {\n          this.page = view;\n          break;\n        }\n        view = view.parent;\n      }\n    }\n    this._inPage$ = new BehaviorSubject<boolean>(!!this.page?.isLoaded);\n    if (this.page) {\n      this.page.on('navigatedFrom', this.pageEvent, this);\n      this.page.on('navigatedTo', this.pageEvent, this);\n      this.page.on('navigatingFrom', this.pageEvent, this);\n      this.page.on('navigatingTo', this.pageEvent, this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.page) {\n      this.page.off('navigatedFrom', this.pageEvent, this);\n      this.page.off('navigatedTo', this.pageEvent, this);\n      this.page.off('navigatingFrom', this.pageEvent, this);\n      this.page.off('navigatingTo', this.pageEvent, this);\n    }\n    this._inPage$.complete();\n    this._pageEvents$.complete();\n  }\n\n  private pageEvent(evt: NavigatedData) {\n    this._pageEvents$.next(evt);\n    switch (evt.eventName) {\n      case 'navigatedTo':\n        this._inPage$.next(true);\n        break;\n      case 'navigatedFrom':\n        this._inPage$.next(false);\n        break;\n      default:\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\nimport { Frame, Page, View } from '@nativescript/core';\nimport { frameMeta, registerElement } from '../../element-registry';\nimport { PageService } from './page.service';\n\nexport function customFrameComponentFactory(v: FramePageComponent) {\n  return v.element.nativeElement;\n}\n\nexport function customPageFactoryFromFrame(v: FramePageComponent) {\n  return v.page;\n}\n\nregisterElement('FramePage', () => Frame, {\n  insertChild: (parent: Frame, child: View) => {\n    if (child instanceof Page) {\n      frameMeta.insertChild(parent, child);\n      return;\n    }\n    parent['__ng_page__'].content = child;\n  },\n});\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'FramePage',\n  template: `<ng-content></ng-content>`,\n  providers: [\n    {\n      provide: Frame,\n      useFactory: customFrameComponentFactory,\n      deps: [FramePageComponent],\n    },\n    {\n      provide: Page,\n      useFactory: customPageFactoryFromFrame,\n      deps: [FramePageComponent],\n    },\n    PageService,\n  ],\n})\nexport class FramePageComponent implements AfterViewInit, OnChanges {\n  page: Page;\n\n  @Input() actionBarHidden = false;\n\n  constructor(public element: ElementRef<Frame>, renderer: Renderer2) {\n    this.page = renderer.createElement('Page') as Page;\n    element.nativeElement['__ng_page__'] = this.page;\n    renderer.appendChild(element.nativeElement, this.page);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.actionBarHidden && changes.actionBarHidden.previousValue !== changes.actionBarHidden.currentValue) {\n      if (this.page) {\n        this.page.actionBarHidden = !!this.actionBarHidden;\n      }\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.page) {\n      this.page.actionBarHidden = !!this.actionBarHidden;\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { Frame } from '@nativescript/core';\n\nexport function customFrameDirectiveFactory(v: FrameDirective) {\n  return v.element.nativeElement;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'Frame',\n  providers: [\n    {\n      provide: Frame,\n      useFactory: customFrameDirectiveFactory,\n      deps: [FrameDirective],\n    },\n  ],\n})\nexport class FrameDirective {\n  constructor(public element: ElementRef<Frame>) {}\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { Page } from '@nativescript/core';\nimport { PageService } from './page.service';\n\nexport function customPageFactory(v: PageDirective) {\n  return v.element.nativeElement;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'Page',\n  providers: [\n    {\n      provide: Page,\n      useFactory: customPageFactory,\n      deps: [PageDirective],\n    },\n    PageService,\n  ],\n})\nexport class PageDirective {\n  constructor(public element: ElementRef<Page>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { FramePageComponent } from './frame-page.component';\nimport { FrameDirective } from './frame.directive';\nimport { PageDirective } from './page.directive';\n\n@NgModule({\n  declarations: [FrameDirective, PageDirective, FramePageComponent],\n  exports: [FrameDirective, PageDirective, FramePageComponent],\n})\nexport class FramePageModule {}\n","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n","import { Directive, Component, ElementRef, Optional, OnDestroy } from '@angular/core';\nimport { ActionBar, ActionItem, ActionItems, NavigationButton, Page } from '@nativescript/core';\n\nimport { isBlank } from '../../utils/lang-facade';\nimport { NgView, ViewClassMeta, ViewExtensions } from '../../views/view-types';\nimport { isInvisibleNode, isView } from '../../views/utils';\nimport { registerElement } from '../../element-registry';\n\nexport function isActionItem(view: any): view is ActionItem {\n  return view instanceof ActionItem;\n}\n\nexport function isNavigationButton(view: any): view is NavigationButton {\n  return view instanceof NavigationButton;\n}\n\ntype NgActionBar = ActionBar & ViewExtensions;\n\nexport const actionBarMeta: ViewClassMeta = {\n  skipAddToDom: true,\n  insertChild: (parent: NgActionBar, child: NgView, next: any) => {\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (isNavigationButton(child)) {\n      parent.navigationButton = child;\n      child.parentNode = parent;\n    } else if (isActionItem(child)) {\n      addActionItem(parent, child, next);\n      child.parentNode = parent;\n    } else if (isView(child)) {\n      parent.titleView = child;\n    }\n  },\n  removeChild: (parent: NgActionBar, child: NgView) => {\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (isNavigationButton(child)) {\n      if (parent.navigationButton === child) {\n        parent.navigationButton = null;\n      }\n\n      child.parentNode = null;\n    } else if (isActionItem(child)) {\n      parent.actionItems.removeItem(child);\n      child.parentNode = null;\n    } else if (isView(child) && parent.titleView && parent.titleView === child) {\n      parent.titleView = null;\n    }\n  },\n};\n\nregisterElement('ActionBar', () => ActionBar, actionBarMeta);\nregisterElement('ActionItem', () => <any>ActionItem);\nregisterElement('NavigationButton', () => <any>NavigationButton);\n\nconst addActionItem = (bar: NgActionBar, item: ActionItem, next: ActionItem) => {\n  if (next) {\n    insertActionItemBefore(bar, item, next);\n  } else {\n    appendActionItem(bar, item);\n  }\n};\n\nconst insertActionItemBefore = (bar: NgActionBar, item: ActionItem, next: ActionItem) => {\n  const actionItems: ActionItems = bar.actionItems;\n  const actionItemsCollection: ActionItem[] = actionItems.getItems();\n\n  const indexToInsert = actionItemsCollection.indexOf(next);\n  actionItemsCollection.splice(indexToInsert, 0, item);\n\n  (<any>actionItems).setItems(actionItemsCollection);\n};\n\nconst appendActionItem = (bar: NgActionBar, item: ActionItem) => {\n  bar.actionItems.addItem(item);\n};\n\n@Component({\n  selector: 'ActionBar',\n  template: '<ng-content></ng-content>',\n})\nexport class ActionBarComponent {\n  constructor(public element: ElementRef, private page: Page) {\n    if (!this.page) {\n      throw new Error('Inside ActionBarComponent but no Page found in DI.');\n    }\n\n    if (isBlank(this.page.actionBarHidden)) {\n      this.page.actionBarHidden = false;\n    }\n    this.page.actionBar = this.element.nativeElement;\n    this.page.actionBar.update();\n  }\n}\n\n@Component({\n  selector: 'ActionBarExtension',\n  template: '',\n})\nexport class ActionBarScope {\n  // tslint:disable-line:component-class-suffix\n  constructor(private page: Page) {\n    if (!this.page) {\n      throw new Error('Inside ActionBarScope but no Page found in DI.');\n    }\n  }\n\n  public onNavButtonInit(navBtn: NavigationButtonDirective) {\n    this.page.actionBar.navigationButton = navBtn.element.nativeElement;\n  }\n\n  public onNavButtonDestroy(navBtn: NavigationButtonDirective) {\n    const nav = <NavigationButton>navBtn.element.nativeElement;\n    if (nav && this.page.actionBar.navigationButton === nav) {\n      this.page.actionBar.navigationButton = null;\n    }\n  }\n\n  public onActionInit(item: ActionItemDirective) {\n    this.page.actionBar.actionItems.addItem(item.element.nativeElement);\n  }\n\n  public onActionDestroy(item: ActionItemDirective) {\n    if (item.element.nativeElement.actionBar) {\n      this.page.actionBar.actionItems.removeItem(item.element.nativeElement);\n    }\n  }\n}\n\n@Directive({\n  selector: 'ActionItem', // tslint:disable-line:directive-selector\n})\nexport class ActionItemDirective implements OnDestroy {\n  constructor(public element: ElementRef, @Optional() private ownerScope: ActionBarScope) {\n    if (this.ownerScope) {\n      this.ownerScope.onActionInit(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ownerScope) {\n      this.ownerScope.onActionDestroy(this);\n    }\n  }\n}\n\n@Directive({\n  selector: 'NavigationButton', // tslint:disable-line:directive-selector\n})\nexport class NavigationButtonDirective implements OnDestroy {\n  constructor(public element: ElementRef, @Optional() private ownerScope: ActionBarScope) {\n    if (this.ownerScope) {\n      this.ownerScope.onNavButtonInit(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ownerScope) {\n      this.ownerScope.onNavButtonDestroy(this);\n    }\n  }\n}\n","import { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, Directive, DoCheck, ElementRef, EmbeddedViewRef, EventEmitter, forwardRef, Host, HostListener, Inject, InjectionToken, Input, IterableDiffer, IterableDiffers, NgZone, OnDestroy, Output, TemplateRef, ViewChild, ViewContainerRef, ɵisListLikeIterable as isListLikeIterable, ɵmarkDirty } from '@angular/core';\nimport { ItemEventData, KeyedTemplate, LayoutBase, ListView, ObservableArray, profile, View } from '@nativescript/core';\n\nimport { extractSingleViewRecursive } from '../../element-registry/registry';\nimport { NativeScriptDebug } from '../../trace';\nimport { NgViewTemplate } from '../../view-refs';\n\nconst NG_VIEW = '_ngViewRef';\n\nexport interface TemplatedItemsHost<T = any> {\n  registerTemplate(key: string, template: TemplateRef<T>);\n}\n\nexport const TEMPLATED_ITEMS_COMPONENT = new InjectionToken<TemplatedItemsHost>('TemplatedItemsComponent');\n\nexport class ItemContext<T> {\n  constructor(public $implicit?: T, public item?: T, public index?: number, public even?: boolean, public odd?: boolean) {}\n}\n\nexport class NsTemplatedItem<T> implements NgViewTemplate<{ index: number; data: T }> {\n  constructor(private template: TemplateRef<ItemContext<T>>, public location: ViewContainerRef, private onCreate?: (view: View) => void) {}\n  create(context?: { index: number; data: T }): View {\n    const viewRef = this.location.createEmbeddedView(this.template, context ? this.setupItemContext(context) : new ItemContext());\n    viewRef.detach(); // create detached, just beware this doesn't always work and the view might run the first CD anyway.\n    const resultView = getItemViewRoot(viewRef);\n    resultView[NG_VIEW] = viewRef;\n    if (this.onCreate) {\n      this.onCreate(resultView);\n    }\n    return resultView;\n  }\n  update(view: View, context?: { index: number; data: T }): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    this.setupItemContext(context, viewRef);\n    viewRef?.detectChanges();\n  }\n  attach(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.reattach();\n    viewRef?.detectChanges();\n  }\n  detach(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.detach();\n  }\n  dispose(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.destroy();\n  }\n\n  getEmbeddedViewRef(view: View): EmbeddedViewRef<ItemContext<T>> | undefined {\n    let viewRef = view[NG_VIEW];\n\n    // Getting angular view from original element (in cases when ProxyViewContainer\n    // is used NativeScript internally wraps it in a StackLayout)\n    if (!viewRef && view instanceof LayoutBase && view.getChildrenCount() > 0) {\n      viewRef = view.getChildAt(0)[NG_VIEW];\n    }\n    return viewRef;\n  }\n\n  isValid(view: View) {\n    return !!this.getEmbeddedViewRef(view);\n  }\n\n  private setupItemContext({ index, data }: { index: number; data: T }, oldView?: EmbeddedViewRef<ItemContext<T>>): ItemContext<T> {\n    const context: ItemContext<T> = oldView ? oldView.context : new ItemContext<T>();\n    context.$implicit = data;\n    context.item = data;\n    context.index = index;\n    context.even = index % 2 === 0;\n    context.odd = !context.even;\n    return context;\n  }\n}\n\nexport interface SetupItemViewArgs<T> {\n  view: EmbeddedViewRef<ItemContext<T>>;\n  nativeElement: View;\n  data: T;\n  index: number;\n  context: ItemContext<T>;\n}\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'ListView',\n  template: `<DetachedContainer>\n    <ng-container #loader></ng-container>\n  </DetachedContainer>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: TEMPLATED_ITEMS_COMPONENT, useExisting: forwardRef(() => ListViewComponent) }],\n})\nexport class ListViewComponent<T = any> implements DoCheck, OnDestroy, AfterContentInit, TemplatedItemsHost {\n  public get nativeElement(): ListView {\n    return this.templatedItemsView;\n  }\n\n  protected templatedItemsView: ListView;\n  protected _items: T[] | ObservableArray<T>;\n  protected _differ: IterableDiffer<T>;\n  protected _templateMap: Map<string, NsTemplatedItem<T>>;\n  protected _viewToTemplate: WeakMap<View, string> = new WeakMap<View, string>();\n\n  @ViewChild('loader', { read: ViewContainerRef, static: true }) loader: ViewContainerRef;\n\n  @Output() public setupItemView = new EventEmitter<SetupItemViewArgs<T>>();\n\n  @ContentChild(TemplateRef, { read: TemplateRef, static: false }) itemTemplateQuery: TemplateRef<ItemContext<T>>;\n\n  fallbackItemTemplate: TemplateRef<ItemContext<T>>;\n\n  @Input()\n  get items() {\n    return this._items;\n  }\n\n  set items(value: T[] | ObservableArray<T>) {\n    this._items = value;\n    let needDiffer = true;\n    if (value instanceof ObservableArray) {\n      needDiffer = false;\n    }\n    if (needDiffer && !this._differ && isListLikeIterable(value)) {\n      this._differ = this._iterableDiffers.find(this._items).create((_index, item) => {\n        return item;\n      });\n    }\n\n    this.templatedItemsView.items = this._items;\n  }\n\n  constructor(_elementRef: ElementRef, private _iterableDiffers: IterableDiffers, private zone: NgZone) {\n    this.templatedItemsView = _elementRef.nativeElement;\n  }\n\n  ngAfterContentInit() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.listViewLog('TemplatedItemsView.ngAfterContentInit()');\n    }\n\n    this.setItemTemplates();\n  }\n\n  ngOnDestroy() {\n    this.templatedItemsView = null;\n\n    if (this._templateMap) {\n      this._templateMap.clear();\n    }\n  }\n\n  private setItemTemplates() {\n    // The itemTemplateQuery may be changed after list items are added that contain <template> inside,\n    // so cache and use only the original template to avoid errors.\n    this.fallbackItemTemplate = this.itemTemplateQuery;\n    if (this.fallbackItemTemplate && !this._templateMap?.has('default')) {\n      // apparently you can create a Core ListView without a template...\n      // we also add a fallback default for when the user sets multiple templates but no templateSelector\n      this.registerTemplate('default', this.fallbackItemTemplate);\n    }\n\n    if (this._templateMap) {\n      // sometimes templates are registered before loader is ready, so we update here\n      this._templateMap.forEach((t) => (t.location = this.loader));\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog('Setting templates');\n      }\n\n      const templates: KeyedTemplate[] = [];\n      this._templateMap.forEach((value, key) => {\n        templates.push({\n          createView: () => null, // we'll handle creation later, otherwise core will create an invalid template\n          key,\n        });\n      });\n      this.templatedItemsView.itemTemplates = templates;\n    }\n  }\n\n  public registerTemplate(key: string, template: TemplateRef<ItemContext<T>>) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.listViewLog(`registerTemplate for key: ${key}, ${this.loader}`);\n    }\n\n    if (!this._templateMap) {\n      this._templateMap = new Map<string, NsTemplatedItem<T>>();\n    }\n\n    this._templateMap.set(\n      key,\n      new NsTemplatedItem<T>(template, this.loader, (v) => this._viewToTemplate.set(v, key))\n    );\n  }\n\n  @HostListener('itemLoading', ['$event'])\n  @profile\n  public onItemLoading(args: ItemEventData) {\n    if (!this._templateMap) {\n      return;\n    }\n\n    const index = args.index;\n    const lview: ListView = <ListView>args.object;\n    const items = lview.items;\n    const currentItem = 'getItem' in items && typeof items.getItem === 'function' ? items.getItem(index) : items[index];\n\n    let template: NsTemplatedItem<T>;\n\n    if (args.view) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog(`onItemLoading: ${index} - Reusing existing view`);\n      }\n\n      let templateKey = this._viewToTemplate.get(args.view);\n      if (!templateKey && args.view instanceof LayoutBase && args.view.getChildrenCount() > 0) {\n        templateKey = this._viewToTemplate.get(args.view.getChildAt(0));\n      }\n      if (!templateKey) {\n        // this template was not created by us\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewError(`ViewReference not found for item ${index}. View recycling is not working`);\n        }\n        return;\n      }\n      template = this._templateMap.get(templateKey);\n      template.update(args.view, { index, data: currentItem });\n    } else {\n      // this should never enter if it creates the view\n      const templateKey = typeof lview.itemTemplateSelector === 'function' ? lview.itemTemplateSelector(currentItem, index, items) : 'default';\n      template = this._templateMap.get(templateKey);\n      if (!template) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewError(`Template for key '${templateKey}' not found.`);\n        }\n        return;\n      }\n      args.view = template.create({ index, data: currentItem });\n    }\n    this.setupViewRef(template.getEmbeddedViewRef(args.view), currentItem, index, args.view);\n\n    template.attach(args.view);\n    ɵmarkDirty(this);\n  }\n\n  public setupViewRef(viewRef: EmbeddedViewRef<ItemContext<T>>, data: T, index: number, nativeElement: View): void {\n    const context = viewRef.context;\n    this.setupItemView.next({ view: viewRef, nativeElement, data: data, index: index, context: context });\n  }\n\n  ngDoCheck() {\n    if (this._differ) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog('ngDoCheck() - execute differ');\n      }\n\n      const changes = this._differ.diff(this._items as T[]);\n      if (changes) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewLog('ngDoCheck() - refresh');\n        }\n\n        this.templatedItemsView.refresh();\n      }\n    }\n  }\n}\n\nexport type RootLocator = (nodes: Array<unknown>, nestLevel: number) => View;\n\nexport function getItemViewRoot(viewRef: EmbeddedViewRef<unknown>, rootLocator: RootLocator = extractSingleViewRecursive): View {\n  const rootView = rootLocator(viewRef.rootNodes, 0);\n  return rootView;\n}\n\n// eslint-disable-next-line @angular-eslint/directive-selector\n@Directive({ selector: '[nsTemplateKey],[nsTemplateKeys]' })\nexport class TemplateKeyDirective<T> {\n  constructor(private templateRef: TemplateRef<T>, @Host() @Inject(TEMPLATED_ITEMS_COMPONENT) private comp: TemplatedItemsHost<T>) {}\n\n  @Input()\n  set nsTemplateKey(value: string) {\n    if (this.comp && this.templateRef) {\n      this.comp.registerTemplate(value, this.templateRef);\n    }\n  }\n  @Input()\n  set nsTemplateKeys(values: string[]) {\n    // single template with multiple keys\n    if (this.comp && this.templateRef && values) {\n      values.forEach((value) => this.comp.registerTemplate(value, this.templateRef));\n    }\n  }\n}\n","/**\n * Utility method to ensure a NgModule is only imported once in a codebase, otherwise will throw to help prevent accidental double importing\n * @param parentModule Parent module name\n * @param moduleName The module name\n */\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import ${moduleName} in the AppModule only.`);\n  }\n}\n\n/**\n * Utility method which will only fire the callback once ever\n * @param fn callback to call only once\n */\nexport function once(fn: Function) {\n  let wasCalled = false;\n\n  return function wrapper() {\n    if (wasCalled) {\n      return;\n    }\n\n    wasCalled = true;\n    fn.apply(null, arguments);\n  };\n}\n\n/** Interface that can be used to generically type a class. */\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n","import { Injectable } from '@angular/core';\nimport { Frame } from '@nativescript/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FrameService {\n  // TODO: Add any methods that are needed to handle frame/page navigation\n  getFrame(): Frame {\n    return Frame.topmost();\n  }\n}\n","import { Frame, NavigationTransition } from '@nativescript/core';\nimport { DefaultUrlSerializer, UrlSegmentGroup, UrlTree, ActivatedRouteSnapshot, Params } from '@angular/router';\n\nexport interface LocationState {\n  queryParams: Params;\n  segmentGroup: UrlSegmentGroup;\n  isRootSegmentGroup: boolean;\n  isPageNavigation: boolean;\n  frame?: Frame;\n}\n\nexport interface NavigationOptions {\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: NavigationTransition;\n}\n\nexport class Outlet {\n  showingModal: boolean;\n  modalNavigationDepth: number;\n  parent: Outlet;\n  isPageNavigationBack: boolean;\n\n  // More than one key available when using NSEmptyOutletComponent component\n  // in module that lazy loads children (loadChildren) and has outlet name.\n  outletKeys: Array<string>;\n\n  // More than one frame available when using NSEmptyOutletComponent component\n  // in module that lazy loads children (loadChildren) and has outlet name.\n  frames: Array<Frame> = [];\n  // The url path to the Outlet.\n  // E.G: the path to Outlet3 that is nested Outlet1(home)->Outlet2(nested1)->Outlet3(nested2)\n  // will be 'home/nested1'\n  path: string;\n  pathByOutlets: string;\n  states: Array<LocationState> = [];\n  isNSEmptyOutlet: boolean;\n\n  // Used in reuse-strategy by its children to determine if they should be detached too.\n  shouldDetach: boolean = true;\n  constructor(outletKey: string, path: string, pathByOutlets: string, modalNavigationDepth?: number) {\n    this.outletKeys = [outletKey];\n    this.isPageNavigationBack = false;\n    this.showingModal = false;\n    this.modalNavigationDepth = modalNavigationDepth || 0;\n    this.pathByOutlets = pathByOutlets;\n    this.path = path;\n  }\n\n  containsFrame(frame: Frame): boolean {\n    return this.frames.indexOf(frame) > -1;\n  }\n\n  peekState(): LocationState {\n    if (this.states.length > 0) {\n      return this.states[this.states.length - 1];\n    }\n    return null;\n  }\n\n  containsTopState(stateUrl: string): boolean {\n    const lastState = this.peekState();\n    return lastState && lastState.segmentGroup.toString() === stateUrl;\n  }\n\n  // Search for frame that can go back.\n  // Nested 'primary' outlets could result in Outlet with multiple navigatable frames.\n  getFrameToBack(): Frame {\n    let frame = this.frames[this.frames.length - 1];\n\n    if (!this.isNSEmptyOutlet) {\n      for (let index = this.frames.length - 1; index >= 0; index--) {\n        const currentFrame = this.frames[index];\n        if (currentFrame.canGoBack()) {\n          frame = currentFrame;\n          break;\n        }\n      }\n    }\n\n    return frame;\n  }\n}\n\nexport const defaultNavOptions: NavigationOptions = {\n  clearHistory: false,\n  animated: true,\n};\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { DefaultUrlSerializer, UrlSegmentGroup, UrlTree, ActivatedRouteSnapshot, Params } from '@angular/router';\nimport { Frame } from '@nativescript/core';\nimport { NativeScriptDebug } from '../../trace';\nimport { isPresent } from '../../utils/lang-facade';\nimport { FrameService } from '../frame.service';\nimport { Outlet, NavigationOptions, LocationState, defaultNavOptions } from './ns-location-utils';\nimport { START_PATH } from '../../tokens';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NSLocationStrategy extends LocationStrategy {\n  private outlets: Array<Outlet> = [];\n  private currentOutlet: Outlet;\n\n  private popStateCallbacks = new Array<(_: any) => any>();\n  private _currentNavigationOptions: NavigationOptions;\n  private currentUrlTree: UrlTree;\n\n  public _modalNavigationDepth = 0;\n\n  constructor(private frameService: FrameService, @Inject(START_PATH) @Optional() private startPath?: string) {\n    super();\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.constructor()');\n    }\n  }\n\n  path(): string {\n    if (!this.currentUrlTree) {\n      return this.startPath || '/';\n    }\n\n    const state = this.currentOutlet && this.currentOutlet.peekState();\n    if (!state) {\n      return '/';\n    }\n\n    let tree = this.currentUrlTree;\n    let changedOutlet = this.getSegmentGroupByOutlet(this.currentOutlet);\n\n    // Handle case where the user declares a component at path \"/\".\n    // The url serializer doesn't parse this url as having a primary outlet.\n    if (state.isRootSegmentGroup) {\n      tree.root = state.segmentGroup;\n    } else if (changedOutlet) {\n      this.updateSegmentGroup(tree.root, changedOutlet, state.segmentGroup);\n    }\n\n    const urlSerializer = new DefaultUrlSerializer();\n    tree.queryParams = state.queryParams;\n    const url = urlSerializer.serialize(tree);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.path(): ' + url);\n    }\n    return url;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.prepareExternalUrl() internal: ' + internal);\n    }\n    return internal;\n  }\n\n  pushState(state: any, title: string, url: string, queryParams: string): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.pushState state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n    }\n    this.pushStateInternal(state, title, url, queryParams);\n  }\n\n  pushStateInternal(state: any, title: string, url: string, queryParams: string): void {\n    const urlSerializer = new DefaultUrlSerializer();\n    this.currentUrlTree = urlSerializer.parse(url);\n    const urlTreeRoot = this.currentUrlTree.root;\n\n    // Handle case where the user declares a component at path \"/\".\n    // The url serializer doesn't parse this url as having a primary outlet.\n    if (!Object.keys(urlTreeRoot.children).length) {\n      const segmentGroup = this.currentUrlTree && this.currentUrlTree.root;\n      const outletKey = this.getOutletKey(this.getSegmentGroupFullPath(segmentGroup), 'primary');\n      const outlet = this.findOutlet(outletKey);\n\n      if (outlet && this.updateStates(outlet, segmentGroup, this.currentUrlTree.queryParams)) {\n        this.currentOutlet = outlet; // If states updated\n      } else if (!outlet) {\n        // tslint:disable-next-line:max-line-length\n        const rootOutlet = this.createOutlet('primary', null, segmentGroup, null, null, this.currentUrlTree.queryParams);\n        this.currentOutlet = rootOutlet;\n      }\n\n      this.currentOutlet.peekState().isRootSegmentGroup = true;\n      return;\n    }\n\n    const queue = [];\n    let currentTree = <any>urlTreeRoot;\n\n    while (currentTree) {\n      Object.keys(currentTree.children).forEach((outletName) => {\n        const currentSegmentGroup = currentTree.children[outletName];\n        currentSegmentGroup.outlet = outletName;\n        currentSegmentGroup.root = urlTreeRoot;\n\n        const outletPath = this.getSegmentGroupFullPath(currentTree);\n        let outletKey = this.getOutletKey(outletPath, outletName);\n        let outlet = this.findOutlet(outletKey);\n\n        const parentOutletName = currentTree.outlet || '';\n        const parentOutletPath = this.getSegmentGroupFullPath(currentTree.parent);\n        const parentOutletKey = this.getOutletKey(parentOutletPath, parentOutletName);\n        const parentOutlet = this.findOutlet(parentOutletKey);\n\n        const containsLastState = outlet && outlet.containsTopState(currentSegmentGroup.toString());\n        if (!outlet) {\n          // tslint:disable-next-line:max-line-length\n          outlet = this.createOutlet(outletKey, outletPath, currentSegmentGroup, parentOutlet, this._modalNavigationDepth, this.currentUrlTree.queryParams);\n          this.currentOutlet = outlet;\n        } else if (this._modalNavigationDepth > 0 && outlet.showingModal && !containsLastState) {\n          // Navigation inside modal view.\n          this.upsertModalOutlet(outlet, currentSegmentGroup, this.currentUrlTree.queryParams);\n        } else {\n          outlet.parent = parentOutlet;\n\n          if (this.updateStates(outlet, currentSegmentGroup, this.currentUrlTree.queryParams)) {\n            this.currentOutlet = outlet; // If states updated\n          }\n        }\n\n        queue.push(currentSegmentGroup);\n      });\n\n      currentTree = queue.shift();\n    }\n  }\n\n  replaceState(state: any, title: string, url: string, queryParams: string): void {\n    const states = this.currentOutlet && this.currentOutlet.states;\n\n    if (states && states.length > 0) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy.replaceState changing existing state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n      }\n    } else {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy.replaceState pushing new state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n      }\n      this.pushStateInternal(state, title, url, queryParams);\n    }\n  }\n\n  forward(): void {\n    throw new Error('NSLocationStrategy.forward() - not implemented');\n  }\n\n  back(outlet?: Outlet, frame?: Frame): void {\n    this.currentOutlet = outlet || this.currentOutlet;\n\n    if (this.currentOutlet.isPageNavigationBack) {\n      const states = this.currentOutlet.states;\n      // We are navigating to the previous page\n      // clear the stack until we get to a page navigation state\n      let state = states.pop();\n      let count = 1;\n\n      if (frame) {\n        while (state.frame && state.frame !== frame) {\n          state = states.pop();\n          count++;\n        }\n      }\n\n      while (!state.isPageNavigation) {\n        state = states.pop();\n        count++;\n      }\n\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog(`NSLocationStrategy.back() while navigating back. States popped: ${count}`);\n      }\n      this.callPopState(state, true);\n    } else {\n      let state = this.currentOutlet.peekState();\n      if (state && state.isPageNavigation) {\n        // This was a page navigation - so navigate through frame.\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('NSLocationStrategy.back() while not navigating back but top' + ' state is page - will call frame.goBack()');\n        }\n\n        if (!outlet) {\n          const topmostFrame = this.frameService.getFrame();\n          this.currentOutlet = this.getOutletByFrame(topmostFrame) || this.currentOutlet;\n        }\n\n        const frameToBack: Frame = this.currentOutlet.getFrameToBack();\n        if (frameToBack) {\n          frameToBack.goBack();\n        }\n      } else {\n        // Nested navigation - just pop the state\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('NSLocationStrategy.back() while not navigating back but top' + ' state is not page - just pop');\n        }\n\n        this.callPopState(this.currentOutlet.states.pop(), true);\n      }\n    }\n  }\n\n  canGoBack(outlet?: Outlet) {\n    outlet = outlet || this.currentOutlet;\n    return outlet.states.length > 1;\n  }\n\n  onPopState(fn: (_: any) => any): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.onPopState');\n    }\n    this.popStateCallbacks.push(fn);\n  }\n\n  getBaseHref(): string {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.getBaseHref()');\n    }\n    return '';\n  }\n\n  private callPopState(state: LocationState, pop: boolean = true, outlet?: Outlet) {\n    outlet = outlet || this.currentOutlet;\n    const urlSerializer = new DefaultUrlSerializer();\n    let changedOutlet = this.getSegmentGroupByOutlet(outlet);\n\n    if (state && changedOutlet) {\n      this.updateSegmentGroup(this.currentUrlTree.root, changedOutlet, state.segmentGroup);\n    } else if (changedOutlet) {\n      // when closing modal view there are scenarios (e.g. root viewContainerRef) when we need\n      // to clean up the named page router outlet to make sure we will open the modal properly again if needed.\n      this.updateSegmentGroup(this.currentUrlTree.root, changedOutlet, null);\n    }\n\n    const url = urlSerializer.serialize(this.currentUrlTree);\n    const change = { url: url, pop: pop };\n    for (let fn of this.popStateCallbacks) {\n      fn(change);\n    }\n  }\n\n  public toString() {\n    let result = [];\n\n    this.outlets.forEach((outlet) => {\n      const outletStates = outlet.states;\n      const outletLog = outletStates\n        // tslint:disable-next-line:max-line-length\n        .map((v, i) => `${outlet.outletKeys}.${i}.[${v.isPageNavigation ? 'PAGE' : 'INTERNAL'}].[${outlet.modalNavigationDepth ? 'MODAL' : 'BASE'}] \"${v.segmentGroup.toString()}\"`)\n        .reverse();\n\n      result = result.concat(outletLog);\n    });\n\n    return result.join('\\n');\n  }\n\n  // Methods for syncing with page navigation in PageRouterOutlet\n  public _beginBackPageNavigation(frame: Frame) {\n    const outlet: Outlet = this.getOutletByFrame(frame);\n\n    if (!outlet || outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('Attempted to call startGoBack while going back.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.startGoBack()');\n    }\n    outlet.isPageNavigationBack = true;\n\n    this.currentOutlet = outlet;\n  }\n\n  public _finishBackPageNavigation(frame: Frame) {\n    const outlet: Outlet = this.getOutletByFrame(frame);\n\n    if (!outlet || !outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('Attempted to call endGoBack while not going back.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.finishBackPageNavigation()');\n    }\n    outlet.isPageNavigationBack = false;\n  }\n\n  public _beginModalNavigation(frame: Frame): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._beginModalNavigation()');\n    }\n\n    this.currentOutlet = this.getOutletByFrame(frame) || this.currentOutlet;\n\n    // It is possible to have frame, but not corresponding Outlet, if\n    // showing modal dialog on app.component.ts ngOnInit() e.g. In that case\n    // the modal is treated as none modal navigation.\n    if (this.currentOutlet) {\n      this.currentOutlet.showingModal = true;\n      this._modalNavigationDepth++;\n    }\n  }\n\n  public _closeModalNavigation() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.closeModalNavigation()');\n    }\n\n    const isShowingModal = this._modalNavigationDepth > 0;\n\n    if (isShowingModal) {\n      this._modalNavigationDepth--;\n    }\n\n    // currentOutlet should be the one that corresponds to the topmost frame\n    const topmostOutlet = this.getOutletByFrame(this.frameService.getFrame());\n    const outlet = this.findOutletByModal(this._modalNavigationDepth, isShowingModal) || topmostOutlet;\n\n    if (outlet) {\n      this.currentOutlet = outlet;\n      this.currentOutlet.showingModal = false;\n      this.callPopState(this.currentOutlet.peekState(), false);\n    }\n  }\n\n  public _beginPageNavigation(frame: Frame): NavigationOptions {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._beginPageNavigation()');\n    }\n\n    this.currentOutlet = this.getOutletByFrame(frame) || this.currentOutlet;\n    const lastState = this.currentOutlet.peekState();\n\n    if (lastState) {\n      lastState.isPageNavigation = true;\n    }\n\n    const navOptions = this._currentNavigationOptions || defaultNavOptions;\n    if (navOptions.clearHistory) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy._beginPageNavigation clearing states history');\n      }\n      this.currentOutlet.states = [lastState];\n    }\n\n    this._currentNavigationOptions = undefined;\n    return navOptions;\n  }\n\n  public _setNavigationOptions(options: NavigationOptions) {\n    this._currentNavigationOptions = {\n      clearHistory: isPresent(options.clearHistory) ? options.clearHistory : false,\n      animated: isPresent(options.animated) ? options.animated : true,\n      transition: options.transition,\n    };\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._setNavigationOptions(' + `${JSON.stringify(this._currentNavigationOptions)})`);\n    }\n  }\n\n  public _getOutlets(): Array<Outlet> {\n    return this.outlets;\n  }\n\n  updateOutletFrame(outlet: Outlet, frame: Frame, isEmptyOutletFrame: boolean) {\n    const lastState = outlet.peekState();\n\n    if (lastState && !lastState.frame && !isEmptyOutletFrame) {\n      lastState.frame = frame;\n    }\n\n    if (!outlet.containsFrame(frame)) {\n      outlet.frames.push(frame);\n    }\n    this.currentOutlet = outlet;\n  }\n\n  clearOutlet(frame: Frame) {\n    this.outlets = this.outlets.filter((currentOutlet) => {\n      let isEqualToCurrent;\n\n      if (this.currentOutlet) {\n        isEqualToCurrent = currentOutlet.pathByOutlets === this.currentOutlet.pathByOutlets;\n      }\n\n      // Remove outlet from the url tree.\n      if (currentOutlet.containsFrame(frame) && !isEqualToCurrent) {\n        this.callPopState(null, true, currentOutlet);\n      }\n\n      // Skip frames filtering since currentOutlet is <router-outlet> when no frames available.\n      if (currentOutlet.frames.length && !currentOutlet.isNSEmptyOutlet) {\n        currentOutlet.frames = currentOutlet.frames.filter((currentFrame) => currentFrame !== frame);\n        return currentOutlet.frames.length;\n      }\n\n      return !currentOutlet.containsFrame(frame);\n    });\n  }\n\n  getSegmentGroupFullPath(segmentGroup: UrlSegmentGroup): string {\n    let fullPath = '';\n\n    while (segmentGroup) {\n      const url = segmentGroup.toString();\n\n      if (fullPath) {\n        fullPath = (url ? url + '/' : '') + fullPath;\n      } else {\n        fullPath = url;\n      }\n\n      segmentGroup = segmentGroup.parent;\n    }\n\n    return fullPath;\n  }\n\n  getRouteFullPath(currentRoute: any): string {\n    const outletName = currentRoute.outlet;\n    let fullPath;\n\n    currentRoute = currentRoute.parent;\n    while (currentRoute) {\n      const urls = currentRoute.url.value || currentRoute.url;\n      let url = urls;\n\n      if (Array.isArray(urls)) {\n        url = url.join('/');\n      }\n\n      fullPath = fullPath ? (url ? url + '/' : url) + fullPath : url;\n      currentRoute = currentRoute.parent;\n    }\n\n    return fullPath ? fullPath + '-' + outletName : outletName;\n  }\n\n  getPathByOutlets(urlSegmentGroup: any): string {\n    if (!urlSegmentGroup) {\n      return '';\n    }\n\n    let pathToOutlet;\n    let lastPath = urlSegmentGroup.outlet || 'primary';\n    let parent = urlSegmentGroup.parent;\n\n    while (parent && urlSegmentGroup.root !== parent) {\n      if (parent && parent.outlet !== lastPath) {\n        if (lastPath === 'primary') {\n          lastPath = parent.outlet;\n        } else {\n          lastPath = parent.outlet;\n          pathToOutlet = lastPath + '-' + (pathToOutlet || urlSegmentGroup.outlet);\n        }\n      }\n\n      parent = parent.parent;\n    }\n\n    return pathToOutlet || lastPath;\n  }\n\n  findOutlet(outletKey: string, activatedRouteSnapshot?: ActivatedRouteSnapshot): Outlet {\n    let outlet: Outlet = this.outlets.find((currentOutlet) => {\n      let equalModalDepth = currentOutlet.modalNavigationDepth === this._modalNavigationDepth;\n      return equalModalDepth && currentOutlet.outletKeys.indexOf(outletKey) > -1;\n    });\n\n    // No Outlet with the given outletKey could happen when using nested unnamed p-r-o\n    // primary -> primary -> prymary\n    if (!outlet && activatedRouteSnapshot) {\n      const pathByOutlets = this.getPathByOutlets(activatedRouteSnapshot);\n      outlet = this.outlets.find((currentOutlet) => {\n        let equalModalDepth = currentOutlet.modalNavigationDepth === this._modalNavigationDepth;\n        return equalModalDepth && currentOutlet.pathByOutlets === pathByOutlets;\n      });\n    }\n\n    return outlet;\n  }\n\n  private findOutletByModal(modalNavigation: number, isShowingModal?: boolean): Outlet {\n    return this.outlets.find((outlet) => {\n      let equalModalDepth = outlet.modalNavigationDepth === modalNavigation;\n      return isShowingModal ? equalModalDepth && outlet.showingModal : equalModalDepth;\n    });\n  }\n\n  private getOutletByFrame(frame: Frame): Outlet {\n    let outlet;\n\n    for (let index = 0; index < this.outlets.length; index++) {\n      const currentOutlet = this.outlets[index];\n\n      if (currentOutlet.containsFrame(frame)) {\n        outlet = currentOutlet;\n        break;\n      }\n    }\n\n    return outlet;\n  }\n\n  private updateStates(outlet: Outlet, currentSegmentGroup: UrlSegmentGroup, queryParams: Params): boolean {\n    const isNewPage = outlet.states.length === 0;\n    const lastState = outlet.states[outlet.states.length - 1];\n    const equalStateUrls = outlet.containsTopState(currentSegmentGroup.toString());\n\n    const locationState: LocationState = {\n      segmentGroup: currentSegmentGroup,\n      isRootSegmentGroup: false,\n      isPageNavigation: isNewPage,\n      queryParams: { ...queryParams },\n    };\n\n    if (!lastState || !equalStateUrls) {\n      outlet.states.push(locationState);\n\n      // Update last state segmentGroup of parent Outlet.\n      if (this._modalNavigationDepth === 0 && !outlet.showingModal) {\n        this.updateParentsStates(outlet, currentSegmentGroup.parent);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private updateParentsStates(outlet: Outlet, newSegmentGroup: UrlSegmentGroup) {\n    let parentOutlet = outlet.parent;\n\n    // Update parents lastState segmentGroups\n    while (parentOutlet && newSegmentGroup) {\n      const state = parentOutlet.peekState();\n\n      if (state) {\n        state.segmentGroup = newSegmentGroup;\n        newSegmentGroup = newSegmentGroup.parent;\n        parentOutlet = parentOutlet.parent;\n      }\n    }\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private createOutlet(outletKey: string, path: string, segmentGroup: any, parent: Outlet, modalNavigation?: number, queryParams: Params = {}): Outlet {\n    const pathByOutlets = this.getPathByOutlets(segmentGroup);\n    const newOutlet = new Outlet(outletKey, path, pathByOutlets, modalNavigation);\n\n    const locationState: LocationState = {\n      segmentGroup: segmentGroup,\n      isRootSegmentGroup: false,\n      isPageNavigation: true, // It is a new OutletNode.\n      queryParams: { ...queryParams },\n    };\n\n    newOutlet.states = [locationState];\n    newOutlet.parent = parent;\n    this.outlets.push(newOutlet);\n\n    // Update last state segmentGroup of parent Outlet.\n    if (this._modalNavigationDepth === 0 && !newOutlet.showingModal) {\n      this.updateParentsStates(newOutlet, segmentGroup.parent);\n    }\n\n    return newOutlet;\n  }\n\n  private getSegmentGroupByOutlet(outlet: Outlet): UrlSegmentGroup {\n    const pathList = outlet.pathByOutlets.split('-');\n    let segmentGroup = this.currentUrlTree.root;\n    let pathToOutlet;\n\n    for (let index = 0; index < pathList.length; index++) {\n      const currentPath = pathList[index];\n      const childrenCount = Object.keys(segmentGroup.children).length;\n\n      if (childrenCount && segmentGroup.children[currentPath]) {\n        const url = segmentGroup.toString();\n        pathToOutlet = pathToOutlet ? pathToOutlet + '/' + url : url;\n        segmentGroup = segmentGroup.children[currentPath];\n      } else {\n        // If no child outlet found with the given name - forget about all previously found outlets.\n        // example: seaching for 'primary-second-primary' shouldn't return 'primary-second'\n        // if no 'primary' child available on 'second'.\n        segmentGroup = null;\n        break;\n      }\n    }\n\n    // Paths should also match since there could be another Outlet\n    // with the same pathByOutlets but different url path.\n    if (segmentGroup && outlet.path && pathToOutlet && outlet.path !== pathToOutlet) {\n      segmentGroup = null;\n    }\n\n    return segmentGroup;\n  }\n\n  // Traversal and replacement of segmentGroup.\n  private updateSegmentGroup(rootNode: any, oldSegmentGroup: UrlSegmentGroup, newSegmentGroup: UrlSegmentGroup) {\n    const queue = [];\n    let currentTree = rootNode;\n\n    while (currentTree) {\n      Object.keys(currentTree.children).forEach((outletName) => {\n        if (currentTree.children[outletName] === oldSegmentGroup) {\n          if (newSegmentGroup) {\n            currentTree.children[outletName] = newSegmentGroup;\n          } else {\n            delete currentTree.children[outletName];\n          }\n        }\n        queue.push(currentTree.children[outletName]);\n      });\n\n      currentTree = queue.shift();\n    }\n  }\n\n  private upsertModalOutlet(parentOutlet: Outlet, segmentedGroup: UrlSegmentGroup, queryParams: Params) {\n    let currentModalOutlet = this.findOutletByModal(this._modalNavigationDepth);\n\n    // We want to treat every p-r-o as a standalone Outlet.\n    if (!currentModalOutlet) {\n      if (this._modalNavigationDepth > 1) {\n        // The parent of the current Outlet should be the previous opened modal (if any).\n        parentOutlet = this.findOutletByModal(this._modalNavigationDepth - 1);\n      }\n\n      // No currentModalOutlet available when opening 'primary' p-r-o.\n      const outletName = 'primary';\n      const outletPath = parentOutlet.peekState().segmentGroup.toString();\n      const outletKey = this.getOutletKey(outletPath, outletName);\n      // tslint:disable-next-line:max-line-length\n      currentModalOutlet = this.createOutlet(outletKey, outletPath, segmentedGroup, parentOutlet, this._modalNavigationDepth, queryParams);\n      this.currentOutlet = currentModalOutlet;\n    } else if (this.updateStates(currentModalOutlet, segmentedGroup, queryParams)) {\n      this.currentOutlet = currentModalOutlet; // If states updated\n    }\n  }\n\n  private getOutletKey(path: string, outletName: string): string {\n    return path ? path + '-' + outletName : outletName;\n  }\n\n  ngOnDestroy() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.ngOnDestroy()');\n    }\n\n    this.outlets = [];\n    this.currentOutlet = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Injectable, Injector, NgModuleRef, NgZone, Type, ViewContainerRef, ɵmarkDirty } from '@angular/core';\nimport { Application, ContentView, Frame, ShowModalOptions, View, ViewBase } from '@nativescript/core';\nimport { AppHostAsyncView, AppHostView } from '../../app-host-view';\nimport { DetachedLoader } from '../../cdk/detached-loader';\nimport { ComponentPortal } from '../../cdk/portal/common';\nimport { NativeScriptDomPortalOutlet } from '../../cdk/portal/nsdom-portal-outlet';\nimport { once } from '../../utils/general';\nimport { NgViewRef } from '../../view-refs';\nimport { NSLocationStrategy } from '../router/ns-location-strategy';\n\nexport type BaseShowModalOptions = Pick<ShowModalOptions, Exclude<keyof ShowModalOptions, 'closeCallback' | 'context'>>;\n\nexport interface ModalDialogOptions extends BaseShowModalOptions {\n  context?: any;\n  viewContainerRef?: ViewContainerRef;\n  moduleRef?: NgModuleRef<any>;\n  target?: View;\n}\n\nexport interface ShowDialogOptions extends BaseShowModalOptions {\n  containerRef?: ViewContainerRef;\n  /**\n   * which container to attach the change detection\n   * if not specified, attaches to the ApplicationRef (recommended)\n   */\n  attachToContainerRef?: ViewContainerRef;\n  injector: Injector;\n  context: any;\n  doneCallback;\n  pageFactory?: any;\n  parentView: ViewBase;\n  resolver: ComponentFactoryResolver;\n  type: Type<any>;\n}\n\nexport class ModalDialogParams {\n  constructor(public context: any = {}, public closeCallback: (...args) => any) {}\n}\n\n@Injectable()\nexport class ModalDialogService {\n  constructor(private location: NSLocationStrategy, private zone: NgZone, private appRef: ApplicationRef, private defaultInjector: Injector) {}\n\n  public showModal(type: Type<any>, options: ModalDialogOptions = {}): Promise<any> {\n    // if (!options.viewContainerRef) {\n    //   throw new Error('No viewContainerRef: ' + 'Make sure you pass viewContainerRef in ModalDialogOptions.');\n    // }\n\n    let parentView = options.viewContainerRef?.element.nativeElement || Application.getRootView();\n    if (options.target) {\n      parentView = options.target;\n    }\n\n    if ((parentView instanceof AppHostView || parentView instanceof AppHostAsyncView) && parentView.ngAppRoot) {\n      parentView = parentView.ngAppRoot;\n    }\n\n    // _ngDialogRoot is the first child of the previously detached proxy.\n    // It should have 'viewController' (iOS) or '_dialogFragment' (Android) available for\n    // presenting future modal views.\n    if (parentView._ngDialogRoot) {\n      parentView = parentView._ngDialogRoot;\n    }\n\n    // resolve from particular module (moduleRef)\n    // or from same module as parentView (viewContainerRef)\n    const componentInjector = options.moduleRef?.injector || options.viewContainerRef?.injector || this.defaultInjector;\n    const resolver = componentInjector.get(ComponentFactoryResolver);\n\n    let frame = parentView;\n    if (!(parentView instanceof Frame)) {\n      frame = (parentView.page && parentView.page.frame) || Frame.topmost();\n    }\n\n    this.location?._beginModalNavigation(frame);\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          this._showDialog({\n            ...options,\n            containerRef: options.viewContainerRef,\n            injector: componentInjector,\n            context: options.context,\n            doneCallback: resolve,\n            parentView,\n            resolver,\n            type,\n          });\n        } catch (err) {\n          reject(err);\n        }\n      }, 10);\n    });\n  }\n\n  private _showDialog(options: ShowDialogOptions): void {\n    let componentViewRef: NgViewRef<unknown>;\n    let detachedLoaderRef: ComponentRef<DetachedLoader>;\n    let portalOutlet: NativeScriptDomPortalOutlet;\n\n    const closeCallback = once((...args) => {\n      options.doneCallback.apply(undefined, args);\n      if (componentViewRef) {\n        componentViewRef.firstNativeLikeView.closeModal();\n        this.location._closeModalNavigation();\n        if (detachedLoaderRef || portalOutlet) {\n          this.zone.run(() => {\n            portalOutlet?.dispose();\n            detachedLoaderRef?.instance.detectChanges();\n            detachedLoaderRef?.destroy();\n          });\n        }\n      }\n    });\n\n    const modalParams = new ModalDialogParams(options.context, closeCallback);\n\n    const childInjector = Injector.create({\n      providers: [{ provide: ModalDialogParams, useValue: modalParams }],\n      parent: options.injector,\n    });\n    this.zone.run(() => {\n      // if we ever support templates in the old API\n      // if(options.templateRef) {\n      //     const detachedFactory = options.resolver.resolveComponentFactory(DetachedLoader);\n      //     if(options.attachToContainerRef) {\n      //         detachedLoaderRef = options.attachToContainerRef.createComponent(detachedFactory, 0, childInjector, null);\n      //     } else {\n      //         detachedLoaderRef = detachedFactory.create(childInjector); // this DetachedLoader is **completely** detached\n      //         this.appRef.attachView(detachedLoaderRef.hostView); // we attach it to the applicationRef, so it becomes a \"root\" view in angular's hierarchy\n      //     }\n      //     detachedLoaderRef.changeDetectorRef.detectChanges(); // force a change detection\n      //     detachedLoaderRef.instance.createTemplatePortal(options.templateRef);\n      // }\n      const targetView = new ContentView();\n      const portal = new ComponentPortal(options.type);\n      portalOutlet = new NativeScriptDomPortalOutlet(targetView, options.resolver, this.appRef, childInjector);\n      const componentRef = portalOutlet.attach(portal);\n      ɵmarkDirty(componentRef.instance);\n      componentViewRef = new NgViewRef(componentRef);\n      if (componentViewRef !== componentRef.location.nativeElement) {\n        componentRef.location.nativeElement._ngDialogRoot = componentViewRef.firstNativeLikeView;\n      }\n      // if we don't detach the view from its parent, ios gets mad\n      componentViewRef.detachNativeLikeView();\n      options.parentView.showModal(componentViewRef.firstNativeLikeView, { ...options, closeCallback });\n    });\n  }\n}\n","/**\n * This decorator delays a potentially unsafe event (like loaded/unloaded that will sometimes be called before ngOnInit) to be handled safely by ensuring it's called after a lifecycle hook.\n * @param runAfterEvent event/function call to wait until the event can be fired ('ngOnInit', 'ngAfterViewInit', ...)\n * @param options Optional event handling params\n * @returns decorator\n */\nexport function NativeScriptNgSafeEvent(\n  runAfterEvent: string,\n  options: {\n    onlyLast?: boolean;\n    onlyFirst?: boolean;\n    alwaysRunBefore?: string;\n  } = {}\n) {\n  const event = runAfterEvent;\n  return function (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n    type NgSafeType = {\n      events: {\n        [key: string]: {\n          done: boolean;\n          originalDelegate: (...args: unknown[]) => unknown;\n          buffer: Array<{\n            key: string;\n            fn: (...args: unknown[]) => unknown;\n          }>;\n        };\n      };\n      runBefore: {\n        [propertyKey: string]: (...args: unknown[]) => unknown;\n      };\n    };\n    function getNgSafe(): NgSafeType {\n      return target['__ng_safe__'];\n    }\n    if (!target['__ng_safe__']) {\n      const defaultNgSafe: NgSafeType = {\n        events: {},\n        runBefore: {},\n      };\n      target['__ng_safe__'] = defaultNgSafe;\n    }\n    if (!getNgSafe().events[event]) {\n      getNgSafe().events[event] = {\n        done: false,\n        buffer: [],\n        originalDelegate: target[event],\n      };\n      target[event] = function (...args) {\n        try {\n          if (getNgSafe().events[event].originalDelegate) {\n            return getNgSafe().events[event].originalDelegate.apply(this, args);\n          }\n        } finally {\n          getNgSafe().events[event].done = true;\n          getNgSafe().events[event].buffer.forEach((fn) => fn.fn());\n          getNgSafe().events[event].buffer = [];\n        }\n      };\n    }\n\n    if (options.alwaysRunBefore) {\n      getNgSafe().runBefore[propertyKey] = target[options.alwaysRunBefore];\n\n      target[`${options.alwaysRunBefore}`] = function (...args) {\n        getNgSafe()\n          .events[event].buffer.filter((v) => v.key === propertyKey)\n          .forEach((fn) => fn.fn());\n        getNgSafe().events[event].buffer = getNgSafe().events[event].buffer.filter((v) => v.key !== propertyKey);\n        getNgSafe().runBefore[propertyKey];\n        if (getNgSafe().runBefore[propertyKey]) {\n          return getNgSafe().runBefore[propertyKey].apply(this, args);\n        }\n      };\n    }\n\n    const oldFn = descriptor.value;\n    descriptor.value = function (...args) {\n      if (getNgSafe().events[event].done) {\n        return oldFn.apply(this, args);\n      }\n      let shouldPush = true;\n      if (options.onlyFirst || options.onlyLast) {\n        for (let i = 0; i < getNgSafe().events[event].buffer.length; i++) {\n          if (getNgSafe().events[event].buffer[i].key === propertyKey) {\n            if (options.onlyFirst) {\n              shouldPush = false;\n              break;\n            }\n            if (options.onlyLast) {\n              getNgSafe().events[event].buffer.splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n      if (shouldPush) {\n        getNgSafe().events[event].buffer.push({\n          key: propertyKey,\n          fn: oldFn.bind(this, args),\n        });\n      }\n    };\n  };\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TabView, TabViewItem } from '@nativescript/core';\n\nimport { InvisibleNode } from '../../views';\nimport { NativeScriptDebug } from '../../trace';\nimport { isBlank } from '../../utils';\n\ntype TextTransform = 'initial' | 'none' | 'capitalize' | 'uppercase' | 'lowercase';\nexport interface TabViewItemDef {\n  title?: string;\n  iconSource?: string;\n  textTransform?: TextTransform;\n}\n\n@Directive({\n  selector: 'TabView', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TabViewDirective implements AfterViewInit {\n  public tabView: TabView;\n  private _selectedIndex: number;\n  private viewInitialized: boolean;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._selectedIndex = value;\n    if (this.viewInitialized) {\n      this.tabView.selectedIndex = this._selectedIndex;\n    }\n  }\n\n  constructor(element: ElementRef) {\n    this.tabView = element.nativeElement;\n  }\n\n  ngAfterViewInit() {\n    this.viewInitialized = true;\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.rendererLog('this._selectedIndex: ' + this._selectedIndex);\n    }\n    if (!isBlank(this._selectedIndex)) {\n      this.tabView.selectedIndex = this._selectedIndex;\n    }\n  }\n}\n\n@Directive({\n  selector: '[tabItem]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TabViewItemDirective implements OnInit {\n  private item: TabViewItem;\n  private _config: TabViewItemDef;\n\n  constructor(private owner: TabViewDirective, private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef) {}\n\n  @Input('tabItem')\n  set config(config: TabViewItemDef) {\n    if (!this._config || this._config.iconSource !== config.iconSource || this._config.title !== config.title || this._config.textTransform !== config.textTransform) {\n      this._config = config;\n      this.applyConfig();\n    }\n  }\n\n  get config(): TabViewItemDef {\n    // tslint:disable-line:no-input-rename\n    return this._config || {};\n  }\n\n  @Input()\n  set title(title: string) {\n    this.config = Object.assign(this.config, { title });\n  }\n\n  get title() {\n    return this.config.title;\n  }\n\n  @Input()\n  set iconSource(iconSource: string) {\n    this.config = Object.assign(this.config, { iconSource });\n  }\n\n  get iconSource() {\n    return this.config.iconSource;\n  }\n\n  @Input()\n  set textTransform(textTransform: TextTransform) {\n    this.config = Object.assign(this.config, { textTransform });\n  }\n\n  get textTransform() {\n    return this.config.textTransform;\n  }\n\n  private ensureItem() {\n    if (!this.item) {\n      this.item = new TabViewItem();\n    }\n  }\n\n  private applyConfig() {\n    this.ensureItem();\n\n    if (this.config.title) {\n      this.item.title = this.config.title;\n    }\n\n    if (this.config.iconSource) {\n      this.item.iconSource = this.config.iconSource;\n    }\n\n    //  TabViewItem textTransform has a default value for Android that kick in\n    // only if no value (even a null value) is set.\n    if (this.config.textTransform) {\n      this.item.textTransform = this.config.textTransform;\n    }\n  }\n\n  ngOnInit() {\n    this.applyConfig();\n\n    const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n    // Filter out text nodes and comments\n    const realViews = viewRef.rootNodes.filter((node) => !(node instanceof InvisibleNode));\n\n    if (realViews.length > 0) {\n      this.item.view = realViews[0];\n\n      const newItems = (this.owner.tabView.items || []).concat([this.item]);\n      this.owner.tabView.items = newItems;\n    }\n  }\n}\n","/* eslint-disable @angular-eslint/component-selector */\nimport { Component, Inject } from '@angular/core';\nimport { platformNames, IDevice } from '@nativescript/core';\nimport { DEVICE } from '../../tokens';\n\n@Component({\n  selector: 'android',\n  template: `<ng-content *ngIf=\"show\"></ng-content>`,\n})\nexport class AndroidFilterComponent {\n  public show: boolean;\n\n  constructor(@Inject(DEVICE) device: IDevice) {\n    this.show = device.os === platformNames.android;\n  }\n}\n","/* eslint-disable @angular-eslint/component-selector */\nimport { Component, Inject } from '@angular/core';\nimport { platformNames, IDevice } from '@nativescript/core';\nimport { DEVICE } from '../../tokens';\n\n@Component({\n  selector: 'ios',\n  template: `<ng-content *ngIf=\"show\"></ng-content>`,\n})\nexport class IOSFilterComponent {\n  public show: boolean;\n  constructor(@Inject(DEVICE) device: IDevice) {\n    this.show = device.os === platformNames.ios;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { FramePageModule } from './cdk/frame-page/frame-page.module';\nimport { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './cdk/action-bar';\nimport { ListViewComponent, TemplateKeyDirective } from './cdk/list-view/list-view.component';\nimport { registerNativeScriptViewComponents } from './element-registry';\nimport { ModalDialogService } from './legacy/directives/dialogs';\nimport { TabViewDirective, TabViewItemDirective } from './cdk/tab-view';\nimport { AndroidFilterComponent } from './cdk/platform-filters/android-filter.component';\nimport { IOSFilterComponent } from './cdk/platform-filters/ios-filter.component';\n\nconst CDK_COMPONENTS = [ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective, ListViewComponent, TemplateKeyDirective, TabViewDirective, TabViewItemDirective, AndroidFilterComponent, IOSFilterComponent];\n\nregisterNativeScriptViewComponents();\n\n@NgModule({\n  imports: [CommonModule, FramePageModule],\n  declarations: [...CDK_COMPONENTS],\n  exports: [CommonModule, FramePageModule, ...CDK_COMPONENTS],\n  providers: [ModalDialogService],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptCommonModule {}\n","import { ViewportScroller, XhrFactory, ɵNullViewportScroller as NullViewportScroller } from '@angular/common';\nimport { ApplicationModule, ErrorHandler, Inject, NgModule, NO_ERRORS_SCHEMA, Optional, Provider, RendererFactory2, SkipSelf, StaticProvider, ɵINJECTOR_SCOPE as INJECTOR_SCOPE } from '@angular/core';\nimport { Color, Device, View } from '@nativescript/core';\nimport { AppHostView } from './app-host-view';\nimport { NativescriptXhrFactory } from './nativescript-xhr-factory';\nimport { NativeScriptRendererFactory } from './nativescript-renderer';\nimport { PlatformNamespaceFilter, NAMESPACE_FILTERS } from './property-filter';\nimport { APP_ROOT_VIEW, DEVICE, ENABLE_REUSABE_VIEWS, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { ViewUtil } from './view-util';\nimport { DetachedLoader } from './cdk/detached-loader';\nimport { NativeScriptCommonModule } from './nativescript-common.module';\n\nexport function generateFallbackRootView(parentRootView?: View) {\n  if (parentRootView) {\n    return parentRootView;\n  }\n  return new AppHostView(new Color('white'));\n}\n\nexport function errorHandler() {\n  return new ErrorHandler();\n}\nexport function generateRandomId() {\n  return `${Date.now()}` + '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport const NATIVESCRIPT_MODULE_STATIC_PROVIDERS: StaticProvider[] = [\n  { provide: APP_ROOT_VIEW, useFactory: generateFallbackRootView, deps: [[new Optional(), new SkipSelf(), APP_ROOT_VIEW]] },\n  { provide: INJECTOR_SCOPE, useValue: 'root' },\n  { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n  { provide: ViewUtil, useClass: ViewUtil, deps: [NAMESPACE_FILTERS, [new Optional(), ENABLE_REUSABE_VIEWS]] },\n  {\n    provide: NativeScriptRendererFactory,\n    useClass: NativeScriptRendererFactory,\n    deps: [APP_ROOT_VIEW, NAMESPACE_FILTERS, NATIVESCRIPT_ROOT_MODULE_ID, [new Optional(), ENABLE_REUSABE_VIEWS]],\n  },\n  { provide: NATIVESCRIPT_ROOT_MODULE_ID, useFactory: generateRandomId },\n  { provide: RendererFactory2, useExisting: NativeScriptRendererFactory },\n  { provide: NAMESPACE_FILTERS, useClass: PlatformNamespaceFilter, deps: [DEVICE], multi: true },\n  { provide: DEVICE, useValue: Device },\n  { provide: XhrFactory, useClass: NativescriptXhrFactory, deps: [] },\n];\nexport const NATIVESCRIPT_MODULE_PROVIDERS: Provider[] = [{ provide: ViewportScroller, useClass: NullViewportScroller }];\n\n@NgModule({\n  imports: [ApplicationModule, NativeScriptCommonModule],\n  declarations: [DetachedLoader],\n  providers: [...NATIVESCRIPT_MODULE_STATIC_PROVIDERS, ...NATIVESCRIPT_MODULE_PROVIDERS],\n  exports: [ApplicationModule, DetachedLoader, NativeScriptCommonModule],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptModule {\n  constructor(@Optional() @SkipSelf() @Inject(NativeScriptModule) parentModule: NativeScriptModule | null) {\n    if (parentModule) {\n      throw new Error(`NativeScriptModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Application, ContentView, RootLayout, View } from '@nativescript/core';\nimport { APP_ROOT_VIEW, DISABLE_ROOT_VIEW_HANDLING } from './tokens';\n\nexport class RootViewProxy extends ContentView {\n  constructor(private parentRootLayout: RootLayout) {\n    super();\n  }\n\n  _addView(view: View, atIndex?: number) {\n    super._addView(view, atIndex);\n    if (this.parentRootLayout.getChildIndex(this) < 0) {\n      this.parentRootLayout.insertChild(this, 0);\n    }\n  }\n\n  _removeView(view: View) {\n    super._removeView(view);\n    this.parentRootLayout.removeChild(this);\n  }\n}\n\n/**\n * This generates a RootLayout and returns a RootViewProxy.\n * Setting RootViewProxy.content will add the view to the bottom of the RootLayout\n * Setting RootViewProxy.content = null will remove the view from the RootLayout\n * @returns RootViewProxy that will insert content into the start of the RootLayout\n */\nexport function generateRootLayoutAndProxy() {\n  let rootView = Application.getRootView();\n  if (!rootView || !(rootView instanceof RootLayout)) {\n    rootView = new RootLayout();\n    Application.resetRootView({ create: () => rootView });\n  }\n  const viewProxy = new RootViewProxy(rootView as RootLayout);\n  // (rootView as RootLayout).insertChild(viewProxy, 0);\n  return viewProxy;\n}\n\n@NgModule({\n  providers: [\n    { provide: DISABLE_ROOT_VIEW_HANDLING, useValue: true },\n    { provide: APP_ROOT_VIEW, useFactory: generateRootLayoutAndProxy },\n  ],\n})\nexport class RootCompositeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { ShowModalOptions } from '@nativescript/core';\n\nexport type NativeShowModalOptions = Partial<Omit<ShowModalOptions, 'cancelable' | 'closeCallback'>>;\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class NativeDialogConfig<D = any> {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  /** Alternate `ComponentFactoryResolver` to use when resolving the associated component. */\n  componentFactoryResolver?: ComponentFactoryResolver;\n\n  nativeOptions?: NativeShowModalOptions = {};\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","import { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { NativeModalRef } from './native-modal-ref';\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/** Possible states of the lifecycle of a dialog. */\nexport const enum NativeDialogState {\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\nexport class NativeDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined; //= this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  private _closeFallbackTimeout: any;\n\n  /** Current state of the dialog. */\n  private _state = NativeDialogState.OPEN;\n\n  constructor(private _nativeModalRef: NativeModalRef, readonly id: string = `native-dialog-${uniqueId++}`) {\n    // Pass the id along to the container.\n    _nativeModalRef._id = id;\n\n    // Emit when opening animation completes\n    _nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'opened'),\n        take(1)\n      )\n      .subscribe(() => {\n        this._afterOpened.next();\n        this._afterOpened.complete();\n      });\n\n    // Dispose overlay when closing animation is complete\n    _nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'closed'),\n        take(1)\n      )\n      .subscribe(() => {\n        clearTimeout(this._closeFallbackTimeout);\n        this._finishDialogClose();\n      });\n\n    _nativeModalRef.onDismiss.subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      _nativeModalRef.dispose();\n    });\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'closing'),\n        take(1)\n      )\n      .subscribe((event) => {\n        this._beforeClosed.next(dialogResult);\n        this._beforeClosed.complete();\n        this._nativeModalRef.dispose();\n        // this._overlayRef.detachBackdrop();\n\n        // The logic that disposes of the overlay depends on the exit animation completing, however\n        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n        // timeout which will clean everything up if the animation hasn't fired within the specified\n        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n        // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n        this._closeFallbackTimeout = setTimeout(\n          () => this._finishDialogClose(),\n          //event.totalTime + 100);\n          100\n        );\n      });\n\n    this._state = NativeDialogState.CLOSING;\n    this._nativeModalRef._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed;\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    throw new Error('Method not implemented');\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    // this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    // this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): NativeDialogState {\n    return this._state;\n  }\n\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  private _finishDialogClose() {\n    this._state = NativeDialogState.CLOSED;\n    this._nativeModalRef.dispose();\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, Optional, ViewContainerRef, ɵmarkDirty } from '@angular/core';\nimport { ContentView, View, Application, Frame } from '@nativescript/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AppHostAsyncView, AppHostView } from '../../app-host-view';\nimport { NSLocationStrategy } from '../../legacy/router/ns-location-strategy';\nimport { once } from '../../utils/general';\nimport { DetachedLoader } from '../detached-loader';\nimport { ComponentPortal, TemplatePortal } from '../portal/common';\nimport { NativeScriptDomPortalOutlet } from '../portal/nsdom-portal-outlet';\nimport { NativeDialogConfig } from './dialog-config';\nimport { NgViewRef } from '../../view-refs';\n\nexport class NativeModalRef {\n  _id: string;\n  stateChanged = new Subject<{ state: 'opened' | 'closed' | 'closing' }>();\n  onDismiss = new Subject<void>();\n\n  parentView: View;\n  portalOutlet: NativeScriptDomPortalOutlet;\n  detachedLoaderRef: ComponentRef<DetachedLoader>;\n  modalViewRef: NgViewRef<any>;\n\n  private _closeCallback: () => void;\n\n  constructor(private _config: NativeDialogConfig, private _injector: Injector, @Optional() private location?: NSLocationStrategy) {\n    let parentView = this._config.viewContainerRef?.element.nativeElement || Application.getRootView();\n\n    if ((parentView instanceof AppHostView || parentView instanceof AppHostAsyncView) && parentView.ngAppRoot) {\n      parentView = parentView.ngAppRoot;\n    }\n\n    // _ngDialogRoot is the first child of the previously detached proxy.\n    // It should have 'viewController' (iOS) or '_dialogFragment' (Android) available for\n    // presenting future modal views.\n    if (parentView._ngDialogRoot) {\n      parentView = parentView._ngDialogRoot;\n    }\n    this.parentView = parentView;\n\n    this._closeCallback = once(() => {\n      this.stateChanged.next({ state: 'closing' });\n      this.modalViewRef.firstNativeLikeView?.closeModal();\n      this.location?._closeModalNavigation();\n      // this.detachedLoaderRef?.destroy();\n      if (this.modalViewRef?.firstNativeLikeView.isLoaded) {\n        fromEvent(this.modalViewRef.firstNativeLikeView, 'unloaded')\n          .pipe(take(1))\n          .subscribe(() => this.stateChanged.next({ state: 'closed' }));\n      } else {\n        this.stateChanged.next({ state: 'closed' });\n      }\n    });\n  }\n\n  _generateDetachedContainer(vcRef?: ViewContainerRef) {\n    const detachedFactory = (this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver)).resolveComponentFactory(DetachedLoader);\n    if (vcRef) {\n      this.detachedLoaderRef = vcRef.createComponent(detachedFactory);\n    } else {\n      this.detachedLoaderRef = detachedFactory.create(this._config.viewContainerRef?.injector || this._injector);\n      this._injector.get(ApplicationRef).attachView(this.detachedLoaderRef.hostView);\n    }\n    this.detachedLoaderRef.changeDetectorRef.detectChanges();\n  }\n\n  attachTemplatePortal<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T> {\n    this.startModalNavigation();\n    const vcRef = portal.viewContainerRef || this._config.viewContainerRef;\n    this._generateDetachedContainer(vcRef);\n    portal.viewContainerRef = this.detachedLoaderRef.instance.vc;\n    const targetView = new ContentView();\n    this.portalOutlet = new NativeScriptDomPortalOutlet(targetView, this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver), this._injector.get(ApplicationRef), this._injector);\n    const templateRef = this.portalOutlet.attach(portal);\n    this.modalViewRef = new NgViewRef(templateRef);\n    this.modalViewRef.firstNativeLikeView['__ng_modal_id__'] = this._id;\n    // if we don't detach the view from its parent, ios gets mad\n    this.modalViewRef.detachNativeLikeView();\n\n    const userOptions = this._config.nativeOptions || {};\n    this.parentView.showModal(this.modalViewRef.firstNativeLikeView, {\n      context: null,\n      ...userOptions,\n      closeCallback: () => {\n        this.location?._closeModalNavigation();\n        this.onDismiss.next();\n        this.onDismiss.complete();\n      },\n      cancelable: !this._config.disableClose,\n    });\n    //   if (this.modalView !== templateRef.rootNodes[0]) {\n    //     componentRef.location.nativeElement._ngDialogRoot = this.modalView;\n    //   }\n    return templateRef;\n  }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this.startModalNavigation();\n\n    const targetView = new ContentView();\n    this.portalOutlet = new NativeScriptDomPortalOutlet(targetView, this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver), this._injector.get(ApplicationRef), this._injector);\n    const componentRef = this.portalOutlet.attach(portal);\n    ɵmarkDirty(componentRef.instance);\n    this.modalViewRef = new NgViewRef(componentRef);\n    if (this.modalViewRef.firstNativeLikeView !== this.modalViewRef.view) {\n      (<any>this.modalViewRef.view)._ngDialogRoot = this.modalViewRef.firstNativeLikeView;\n    }\n    this.modalViewRef.firstNativeLikeView['__ng_modal_id__'] = this._id;\n    // if we don't detach the view from its parent, ios gets mad\n    this.modalViewRef.detachNativeLikeView();\n\n    const userOptions = this._config.nativeOptions || {};\n    this.parentView.showModal(this.modalViewRef.firstNativeLikeView, {\n      context: null,\n      ...userOptions,\n      closeCallback: () => {\n        this.location?._closeModalNavigation();\n        this.onDismiss.next();\n        this.onDismiss.complete();\n      },\n      cancelable: !this._config.disableClose,\n    });\n    return componentRef;\n  }\n\n  _startExitAnimation() {\n    this._closeCallback();\n  }\n\n  dispose() {\n    this.portalOutlet.dispose();\n  }\n  private startModalNavigation() {\n    const frame = this.parentView instanceof Frame ? this.parentView : this.parentView?.page?.frame || Frame.topmost();\n\n    this.location?._beginModalNavigation(frame);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive, Inject, Injectable, InjectionToken, Injector, OnDestroy, Optional, SkipSelf, StaticProvider, TemplateRef, Type } from '@angular/core';\nimport { defer, Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { NSLocationStrategy } from '../../legacy/router/ns-location-strategy';\nimport { ComponentType } from '../../utils/general';\nimport { ComponentPortal, TemplatePortal } from '../portal/common';\nimport { NativeDialogConfig } from './dialog-config';\nimport { NativeDialogRef } from './dialog-ref';\nimport { NativeModalRef } from './native-modal-ref';\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const NATIVE_DIALOG_DATA = new InjectionToken<any>('NativeDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const NATIVE_DIALOG_DEFAULT_OPTIONS = new InjectionToken<NativeDialogConfig>('native-dialog-default-options');\n\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\n@Directive()\nexport abstract class _NativeDialogBase<C extends NativeModalRef> implements OnDestroy {\n  private _openDialogsAtThisLevel: NativeDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<NativeDialogRef<any>>();\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => (this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith<any, any>(undefined)))) as Observable<any>;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): NativeDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<NativeDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  _getAfterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n\n  constructor(private _injector: Injector, private _defaultOptions: NativeDialogConfig | undefined, private _parentDialog: _NativeDialogBase<C> | undefined, private _dialogRefConstructor: Type<NativeDialogRef<any>>, private _nativeModalType: Type<C>, private _dialogDataToken: InjectionToken<any>, private locationStrategy: NSLocationStrategy) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(component: ComponentType<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  /**\n   * Opens a modal dialog containing the given template.\n   * @param template TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(template: TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  open<T, D = any, R = any>(template: ComponentType<T> | TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R> {\n    config = _applyConfigDefaults(config, this._defaultOptions || new NativeDialogConfig());\n\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef, config);\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    // Notify the dialog container that the content has been attached.\n    // dialogContainer._initializeWithAttachedContent();\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): NativeDialogRef<any> | undefined {\n    return this.openDialogs.find((dialog) => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping dialog container.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config: NativeDialogConfig): NativeDialogRef<T, R> {\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const nativeModalRef = new this._nativeModalType(config, this._injector, this.locationStrategy);\n    const dialogRef = new this._dialogRefConstructor(nativeModalRef, config.id);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      //     const detachedFactory = options.resolver.resolveComponentFactory(DetachedLoader);\n      //     if(options.attachToContainerRef) {\n      //         detachedLoaderRef = options.attachToContainerRef.createComponent(detachedFactory, 0, childInjector, null);\n      //     } else {\n      //         detachedLoaderRef = detachedFactory.create(childInjector); // this DetachedLoader is **completely** detached\n      //         this.appRef.attachView(detachedLoaderRef.hostView); // we attach it to the applicationRef, so it becomes a \"root\" view in angular's hierarchy\n      //     }\n      //     detachedLoaderRef.changeDetectorRef.detectChanges(); // force a change detection\n      //     detachedLoaderRef.instance.createTemplatePortal(options.templateRef);\n      nativeModalRef.attachTemplatePortal(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        new TemplatePortal<T>(componentOrTemplateRef, null!, <any>{ $implicit: config.data, dialogRef })\n      );\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef);\n      const contentRef = nativeModalRef.attachComponentPortal<T>(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param dialogContainer Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(config: NativeDialogConfig, dialogRef: NativeDialogRef<T>): Injector {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers: StaticProvider[] = [\n      { provide: this._dialogDataToken, useValue: config.data },\n      { provide: this._dialogRefConstructor, useValue: dialogRef },\n    ];\n\n    return Injector.create({ parent: userInjector || this._injector, providers });\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: NativeDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._getAfterAllClosed().next();\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: NativeDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n}\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class NativeDialogService extends _NativeDialogBase<NativeModalRef> {\n  constructor(injector: Injector, @Optional() @Inject(NATIVE_DIALOG_DEFAULT_OPTIONS) defaultOptions: NativeDialogConfig, @Optional() @SkipSelf() parentDialog: NativeDialogService, @Optional() location: NSLocationStrategy) {\n    super(injector, defaultOptions, parentDialog, NativeDialogRef, NativeModalRef, NATIVE_DIALOG_DATA, location);\n  }\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config?: NativeDialogConfig, defaultOptions?: NativeDialogConfig): NativeDialogConfig {\n  return { ...defaultOptions, ...config };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive, Input, OnChanges, OnInit, Optional, SimpleChanges, ElementRef, HostListener } from '@angular/core';\nimport { View, ViewBase } from '@nativescript/core';\nimport { NativeDialogService } from './dialog-services';\nimport { NativeDialogRef } from './dialog-ref';\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[native-dialog-close], [nativeDialogClose]',\n  exportAs: 'nativeDialogClose',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class NativeDialogCloseDirective implements OnInit, OnChanges {\n  /** Dialog close input. */\n  @Input('native-dialog-close') dialogResult: any;\n\n  @Input('nativeDialogClose') _matDialogClose: any;\n\n  constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Optional() public dialogRef: NativeDialogRef<any>,\n    private _elementRef: ElementRef<View>,\n    private _dialog: NativeDialogService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n\n  @HostListener('tap')\n  _onButtonClick() {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    this.dialogRef.close(this.dialogResult);\n  }\n}\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<View>, openDialogs: NativeDialogRef<any>[]) {\n  let view: ViewBase | null = element.nativeElement.parent;\n\n  while (view && !Object.hasOwnProperty.call(view, '__ng_modal_id__')) {\n    view = view.parent;\n  }\n\n  return view ? openDialogs.find((dialog) => dialog.id === view['__ng_modal_id__']) : null;\n}\n","import { NgModule } from '@angular/core';\nimport { NativeDialogCloseDirective } from './dialog-content-directives';\nimport { NativeDialogService } from './dialog-services';\n\n@NgModule({\n  declarations: [NativeDialogCloseDirective],\n  exports: [NativeDialogCloseDirective],\n  providers: [NativeDialogService],\n})\nexport class NativeDialogModule {}\n","import { Injectable } from '@angular/core';\nimport { knownFolders, Folder, File } from '@nativescript/core';\n\n// Allows greater flexibility with `file-system` and Angular\n// Also provides a way for `file-system` to be mocked for testing\n\n@Injectable()\nexport class NSFileSystem {\n  public currentApp(): Folder {\n    return knownFolders.currentApp();\n  }\n\n  public fileFromPath(path: string): File {\n    return File.fromPath(path);\n  }\n\n  public fileExists(path: string): boolean {\n    return File.exists(path);\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { ContentView } from '@nativescript/core';\nimport { DetachedLoader } from './cdk/detached-loader';\nimport { ComponentPortal, NativeScriptDomPortalOutlet, TemplatePortal } from './cdk/portal';\nimport { NgViewRef } from './view-refs';\n\n/**\n * creates a DetachedLoader either linked to the ViewContainerRef or the ApplicationRef if ViewContainerRef is not defined\n * @param resolver component factory resolver\n * @param injector default injector, unused if viewContainerRef is set\n * @param viewContainerRef where the view should live in the angular tree\n * @returns reference to the DetachedLoader\n */\nexport function generateDetachedLoader(resolver: ComponentFactoryResolver, injector: Injector, viewContainerRef?: ViewContainerRef) {\n  injector = viewContainerRef?.injector || injector;\n  const detachedFactory = resolver.resolveComponentFactory(DetachedLoader);\n  const detachedLoaderRef = viewContainerRef?.createComponent(detachedFactory) || detachedFactory.create(injector);\n  if (!viewContainerRef) {\n    injector.get(ApplicationRef).attachView(detachedLoaderRef.hostView);\n  }\n  detachedLoaderRef.changeDetectorRef.detectChanges();\n  return detachedLoaderRef;\n}\n\n/**\n * Generates a NgViewRef from a component or template. @see NgViewRef\n * Pass keepNativeViewAttached as `true` if you don't want the first native view to be detached from its parent.\n * For opening modals and others, the firstNativeLikeView should be detached.\n * @param typeOrTemplate ComponentType or TemplateRef that should be instanced\n * @param options options for creating the view\n * @returns NgViewRef\n */\nexport function generateNativeScriptView<T>(\n  typeOrTemplate: Type<T> | TemplateRef<T>,\n  options: {\n    resolver?: ComponentFactoryResolver;\n    viewContainerRef?: ViewContainerRef;\n    injector: Injector;\n    keepNativeViewAttached?: boolean;\n    /**\n     * reuse a detachedLoaderRef. This will override viewContainerRef\n     */\n    detachedLoaderRef?: ComponentRef<DetachedLoader>;\n  }\n) {\n  let detachedLoaderRef: ComponentRef<DetachedLoader> = options.detachedLoaderRef;\n  const reusingDetachedLoader = !!detachedLoaderRef;\n  if (reusingDetachedLoader) {\n    options.viewContainerRef = detachedLoaderRef.instance.vc;\n  }\n  const injector = options.viewContainerRef?.injector || options.injector;\n  const resolver = options.resolver || injector.get(ComponentFactoryResolver);\n  if (!detachedLoaderRef && (options.viewContainerRef || typeOrTemplate instanceof TemplateRef)) {\n    detachedLoaderRef = generateDetachedLoader(resolver, injector, options.viewContainerRef);\n  }\n  let portal: ComponentPortal<T> | TemplatePortal<T>;\n  if (typeOrTemplate instanceof TemplateRef) {\n    portal = new TemplatePortal(typeOrTemplate, detachedLoaderRef.instance.vc);\n  } else {\n    portal = new ComponentPortal(typeOrTemplate, detachedLoaderRef?.instance.vc);\n  }\n  const parentView = new ContentView();\n  const portalOutlet = new NativeScriptDomPortalOutlet(parentView, resolver, injector.get(ApplicationRef), injector);\n  const componentOrTemplateRef: ComponentRef<T> | EmbeddedViewRef<T> = portalOutlet.attach(portal);\n  componentOrTemplateRef.onDestroy(() => {\n    portalOutlet.dispose();\n  });\n  if (detachedLoaderRef && !reusingDetachedLoader) {\n    componentOrTemplateRef.onDestroy(() => {\n      detachedLoaderRef.destroy();\n    });\n  }\n  const viewRef = new NgViewRef(componentOrTemplateRef);\n  (viewRef as any).detachedLoaderRef = detachedLoaderRef;\n  if (!options.keepNativeViewAttached) {\n    viewRef.detachNativeLikeView();\n  }\n  return viewRef;\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { View, unsetValue } from '@nativescript/core';\n\nimport { isBlank } from '../../utils/lang-facade';\n\nexport class BaseValueAccessor<TView extends View> implements ControlValueAccessor {\n  private pendingChangeNotification: any = 0;\n  onChange = (_) => {};\n  onTouched = () => {};\n\n  constructor(public view: TView) {}\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = (arg) => {\n      if (this.pendingChangeNotification) {\n        clearTimeout(this.pendingChangeNotification);\n      }\n      this.pendingChangeNotification = setTimeout(() => {\n        this.pendingChangeNotification = 0;\n        fn(arg);\n      }, 20);\n    };\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.view.isEnabled = !isDisabled;\n  }\n\n  writeValue(_: any) {}\n\n  protected normalizeValue(value: any): any {\n    return isBlank(value) ? unsetValue : value;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { View } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst TEXT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TextValueAccessor),\n  multi: true,\n};\n\nexport type TextView = { text: string } & View;\n\n/**\n * The accessor for writing a text and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TextField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'TextField[ngModel],TextField[formControlName],TextField[formControl],' +\n    'textField[ngModel],textField[formControlName],textField[formControl],' +\n    'textfield[ngModel],textfield[formControlName],textfield[formControl],' +\n    'text-field[ngModel],text-field[formControlName],text-field[formControl],' +\n    'TextView[ngModel],TextView[formControlName],TextView[formControl],' +\n    'textView[ngModel],textView[formControlName],textView[formControl],' +\n    'textview[ngModel],textview[formControlName],textview[formControl],' +\n    'text-view[ngModel],text-view[formControlName],text-view[formControl],' +\n    'SearchBar[ngModel],SearchBar[formControlName],SearchBar[formControl],' +\n    'searchBar[ngModel],searchBar[formControlName],searchBar[formControl],' +\n    'searchbar[ngModel],searchbar[formControlName],searchbar[formControl],' +\n    'search-bar[ngModel], search-bar[formControlName],search-bar[formControl]',\n  providers: [TEXT_VALUE_ACCESSOR],\n  host: {\n    '(blur)': 'onTouched()',\n    '(textChange)': 'onChange($event.value)',\n  },\n})\nexport class TextValueAccessor extends BaseValueAccessor<TextView> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value ? `${value}` : value);\n    this.view.text = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Switch } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst CHECKED_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckedValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a checked property and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <Switch [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'Switch[ngModel],Switch[formControlName],Switch[formControl],' + 'switch[ngModel],switch[formControlName],switch[formControl]',\n  providers: [CHECKED_VALUE_ACCESSOR],\n  host: {\n    '(checkedChange)': 'onChange($event.value)',\n  },\n})\nexport class CheckedValueAccessor extends BaseValueAccessor<Switch> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.checked = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePicker } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DateValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePicker [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'DatePicker[ngModel],DatePicker[formControlName],DatePicker[formControl],' + 'datepicker[ngModel],datepicker[formControlName],datepicker[formControl],' + 'datePicker[ngModel],datePicker[formControlName],datePicker[formControl],' + 'date-picker[ngModel],date-picker[formControlName],date-picker[formControl]',\n  providers: [DATE_VALUE_ACCESSOR],\n  host: {\n    '(dateChange)': 'onChange($event.value)',\n  },\n})\nexport class DateValueAccessor extends BaseValueAccessor<DatePicker> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.date = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TimePicker } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst TIME_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimeValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePicker [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'TimePicker[ngModel],TimePicker[formControlName],TimePicker[formControl],' + 'timepicker[ngModel],timepicker[formControlName],timepicker[formControl],' + 'timePicker[ngModel],timePicker[formControlName],timePicker[formControl],' + 'time-picker[ngModel],time-picker[formControlName],time-picker[formControl]',\n  providers: [TIME_VALUE_ACCESSOR],\n  host: {\n    '(timeChange)': 'onChange($event.value)',\n  },\n})\nexport class TimeValueAccessor extends BaseValueAccessor<TimePicker> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.time = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Slider } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a value and listening to changes that is used by the\n * {@link NgModel}\n *\n *  ### Example\n *  ```\n *  <Slider [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'Slider[ngModel],Slider[formControlName],Slider[formControl],' + 'slider[ngModel],slider[formControlName],slider[formControl]',\n  providers: [NUMBER_VALUE_ACCESSOR],\n  host: {\n    '(valueChange)': 'onChange($event.value)',\n  },\n})\nexport class NumberValueAccessor extends BaseValueAccessor<Slider> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.value = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef, AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { View } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst SELECTED_INDEX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectedIndexValueAccessor),\n  multi: true,\n};\n\nexport type SelectableView = { selectedIndex: number } & View;\n\n/**\n * The accessor for setting a selectedIndex and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <SegmentedBar [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'SegmentedBar[ngModel],SegmentedBar[formControlName],SegmentedBar[formControl],' +\n    'segmentedBar[ngModel],segmentedBar[formControlName],segmentedBar[formControl],' +\n    'segmentedbar[ngModel],segmentedbar[formControlName],segmentedbar[formControl],' +\n    'segmented-bar[ngModel],segmented-bar[formControlName],segmented-bar[formControl],' +\n    'ListPicker[ngModel],ListPicker[formControlName],ListPicker[formControl],' +\n    'listPicker[ngModel],listPicker[formControlName],listPicker[formControl],' +\n    'listpicker[ngModel],listpicker[formControlName],listpicker[formControl],' +\n    'list-picker[ngModel],list-picker[formControlName],list-picker[formControl],' +\n    'TabView[ngModel],TabView[formControlName],TabView[formControl],' +\n    'tabView[ngModel],tabView[formControlName],tabView[formControl],' +\n    'tabview[ngModel],tabview[formControlName],tabview[formControl],' +\n    'tab-view[ngModel],tab-view[formControlName],tab-view[formControl]',\n  providers: [SELECTED_INDEX_VALUE_ACCESSOR],\n  host: {\n    '(selectedIndexChange)': 'onChange($event.value)',\n  },\n})\nexport class SelectedIndexValueAccessor extends BaseValueAccessor<SelectableView> implements AfterViewInit {\n  // tslint:disable-line:max-line-length directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  private value: number;\n  private viewInitialized: boolean;\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.value = normalized;\n\n    if (this.viewInitialized) {\n      this.view.selectedIndex = this.value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.viewInitialized = true;\n    this.view.selectedIndex = this.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, NumberValueAccessor, SelectedIndexValueAccessor } from './value-accessors';\n\nexport * from './value-accessors';\n\n@NgModule({\n  declarations: [TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],\n  providers: [],\n  imports: [FormsModule],\n  exports: [FormsModule, TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],\n})\nexport class NativeScriptFormsModule {}\n","import { KeyframeAnimation, KeyframeAnimationInfo, KeyframeDeclaration, KeyframeInfo, parseKeyframeDeclarations, animationTimingFunctionConverter } from '@nativescript/core';\n\nexport interface Keyframe {\n  [key: string]: string | number;\n  offset: number;\n}\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n\nexport function createKeyframeAnimation(styles: Keyframe[], duration: number, delay: number, easing: string): KeyframeAnimation {\n  const info = createKeyframeAnimationInfo(styles, duration, delay, easing);\n  return KeyframeAnimation.keyframeAnimationFromInfo(info);\n}\n\nconst createKeyframeAnimationInfo = (styles: Keyframe[], duration: number, delay: number, easing: string): KeyframeAnimationInfo => ({\n  isForwards: true,\n  duration: duration || 0.01,\n  delay,\n  curve: getCurve(easing),\n  keyframes: styles.map(parseAnimationKeyframe),\n});\n\nconst getCurve = (value: string) => animationTimingFunctionConverter(value);\n\nconst parseAnimationKeyframe = (styles: Keyframe): KeyframeInfo => ({\n  duration: getKeyframeDuration(styles),\n  declarations: getDeclarations(styles),\n});\n\nconst getKeyframeDuration = (styles: Keyframe): number => styles.offset;\n\nfunction getDeclarations(styles: Keyframe): KeyframeDeclaration[] {\n  const unparsedDeclarations: KeyframeDeclaration[] = Object.keys(styles).map((property) => ({ property, value: styles[property] }));\n\n  return parseKeyframeDeclarations(unparsedDeclarations);\n}\n","import { AnimationPlayer } from '@angular/animations';\nimport { View, EventData, KeyframeAnimation } from '@nativescript/core';\n\nimport { Keyframe, createKeyframeAnimation } from './utils';\nimport { NgView } from '../views/view-types';\nimport { NativeScriptDebug } from '../trace';\n\nexport class NativeScriptAnimationPlayer implements AnimationPlayer {\n  public parentPlayer: AnimationPlayer = null;\n\n  private _startSubscriptions: Function[] = [];\n  private _doneSubscriptions: Function[] = [];\n  private _finished = false;\n  private _started = false;\n  private animation: KeyframeAnimation;\n\n  constructor(private target: NgView, keyframes: Keyframe[], private duration: number, private delay: number, easing: string) {\n    this.initKeyframeAnimation(keyframes, duration, delay, easing);\n  }\n\n  get totalTime(): number {\n    return this.delay + this.duration;\n  }\n\n  init(): void {}\n\n  hasStarted(): boolean {\n    return this._started;\n  }\n\n  onStart(fn: Function): void {\n    this._startSubscriptions.push(fn);\n  }\n  onDone(fn: Function): void {\n    this._doneSubscriptions.push(fn);\n  }\n  onDestroy(fn: Function): void {\n    this._doneSubscriptions.push(fn);\n  }\n\n  play(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.play`);\n    }\n\n    if (!this.animation) {\n      return;\n    }\n\n    if (!this._started) {\n      this._started = true;\n      this._startSubscriptions.forEach((fn) => fn());\n      this._startSubscriptions = [];\n    }\n\n    // When this issue https://github.com/NativeScript/NativeScript/issues/7984 is fixes in @nativescript/core\n    // we can change this fix and apply the one that is recommended in that issue.\n    if (this.target.isLoaded) {\n      this.playAnimation();\n    } else {\n      this.target.on(View.loadedEvent, this.onTargetLoaded.bind(this));\n    }\n  }\n\n  private onTargetLoaded(args: EventData) {\n    this.target.off(View.loadedEvent, this.onTargetLoaded);\n    this.playAnimation();\n  }\n\n  private playAnimation() {\n    this.animation\n      .play(this.target)\n      .then(() => this.onFinish())\n      .catch((_e) => {});\n  }\n\n  pause(): void {}\n\n  finish(): void {\n    this.onFinish();\n  }\n\n  reset(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.reset`);\n    }\n\n    if (this.animation && this.animation.isPlaying) {\n      this.animation.cancel();\n    }\n  }\n\n  restart(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.restart`);\n    }\n\n    this.reset();\n    this.play();\n  }\n\n  destroy(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.destroy`);\n    }\n    this.onFinish();\n  }\n\n  setPosition(_p: any): void {\n    throw new Error('AnimationPlayer.setPosition method is not supported!');\n  }\n\n  getPosition(): number {\n    return 0;\n  }\n\n  private initKeyframeAnimation(keyframes: Keyframe[], duration: number, delay: number, easing: string) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.initKeyframeAnimation`);\n    }\n\n    this.animation = createKeyframeAnimation(keyframes, duration, delay, easing);\n  }\n\n  private onFinish() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.onFinish`);\n    }\n\n    if (this._finished) {\n      return;\n    }\n\n    this._finished = true;\n    this._started = false;\n    this._doneSubscriptions.forEach((fn) => fn());\n    this._doneSubscriptions = [];\n  }\n}\n","import { AnimationPlayer } from '@angular/animations';\nimport { AnimationDriver } from '@angular/animations/browser';\nimport { ProxyViewContainer, eachDescendant, CssAnimationProperty, CSSHelper } from '@nativescript/core';\n\nimport { NativeScriptAnimationPlayer } from './animation-player';\nimport { Keyframe, dashCaseToCamelCase } from './utils';\nimport { InvisibleNode } from '../views/invisible-nodes';\nimport { NgView } from '../views/view-types';\nimport { NativeScriptDebug } from '../trace';\n\ninterface ViewMatchResult {\n  found: boolean;\n}\n\ninterface ViewMatchParams {\n  originalView: NgView;\n}\n\ninterface QueryParams {\n  selector: Selector;\n  multi: boolean;\n}\n\ninterface QueryResult {\n  matches: NgView[];\n}\n\nclass Selector {\n  private nsSelectors: Array<any>;\n  private classSelectors: string[];\n\n  constructor(rawSelector: string) {\n    this.parse(rawSelector);\n  }\n\n  match(element: NgView): boolean {\n    return this.nsSelectorMatch(element) || this.classSelectorsMatch(element);\n  }\n\n  private parse(rawSelector: string) {\n    const selectors = rawSelector.split(',').map((s) => s.trim());\n\n    this.nsSelectors = selectors.map(CSSHelper.createSelector);\n    this.classSelectors = selectors.filter((s) => s.startsWith('.')).map((s) => s.substring(1));\n  }\n\n  private nsSelectorMatch(element: NgView) {\n    return this.nsSelectors.some((s) => s.match(element));\n  }\n\n  private classSelectorsMatch(element: NgView) {\n    return this.classSelectors.some((s) => this.hasClass(element, s));\n  }\n\n  // we're using that instead of match for classes\n  // that are dynamically added by the animation engine\n  // such as .ng-trigger, that's added for every :enter view\n  private hasClass(element: NgView, cls: string) {\n    return element && element['$$classes'] && element['$$classes'][cls];\n  }\n}\n\nexport class NativeScriptAnimationDriver implements AnimationDriver {\n  private static validProperties = [...CssAnimationProperty._getPropertyNames(), 'transform'];\n\n  validateStyleProperty(property: string): boolean {\n    NativeScriptDebug.animationsLog(`CssAnimationProperty.validateStyleProperty: ${property}`);\n    return NativeScriptAnimationDriver.validProperties.indexOf(property) !== -1;\n  }\n\n  matchesElement(element: NgView, rawSelector: string): boolean {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.matchesElement ` + `element: ${element}, selector: ${rawSelector}`);\n\n    const selector = this.makeSelector(rawSelector);\n    return selector.match(element);\n  }\n\n  containsElement(elm1: NgView, elm2: NgView): boolean {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.containsElement ` + `element1: ${elm1}, element2: ${elm2}`);\n\n    // Checking if the parent is our fake body object\n    if (elm1['isOverride']) {\n      return true;\n    }\n\n    const params: ViewMatchParams = { originalView: elm2 };\n    const result: ViewMatchResult = this.visitDescendants(elm1, viewMatches, params);\n\n    return result.found;\n  }\n\n  query(element: NgView, rawSelector: string, multi: boolean): NgView[] {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.query ` + `element: ${element}, selector: ${rawSelector} ` + `multi: ${multi}`);\n\n    const selector = this.makeSelector(rawSelector);\n    const params: QueryParams = { selector, multi };\n    const result: QueryResult = this.visitDescendants(element, queryDescendants, params);\n\n    return result.matches || [];\n  }\n\n  computeStyle(element: NgView, prop: string): string {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.computeStyle ` + `element: ${element}, prop: ${prop}`);\n\n    const camelCaseProp = dashCaseToCamelCase(prop);\n    return element.style[camelCaseProp];\n  }\n\n  animate(element: NgView, keyframes: Keyframe[], duration: number, delay: number, easing: string): AnimationPlayer {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.animate ` + `element: ${element}, keyframes: ${keyframes} ` + `duration: ${duration}, delay: ${delay} ` + `easing: ${easing}`);\n\n    return new NativeScriptAnimationPlayer(element, keyframes, duration, delay, easing);\n  }\n\n  private makeSelector(rawSelector: string): Selector {\n    return new Selector(rawSelector);\n  }\n\n  private visitDescendants(element: NgView, cb: (child: NgView, result: any, params: any) => boolean, cbParams: any): any {\n    const result = {};\n    // fill the result obj with the result from the callback function\n    eachDescendant(element, (child: NgView) => cb(child, result, cbParams));\n\n    return result;\n  }\n}\n\nfunction viewMatches(element: NgView, result: ViewMatchResult, params: ViewMatchParams): boolean {\n  if (element === params.originalView) {\n    result.found = true;\n  }\n\n  return !result.found;\n}\n\nfunction queryDescendants(element: NgView, result: QueryResult, params: QueryParams): boolean {\n  if (!result.matches) {\n    result.matches = [];\n  }\n\n  const { selector, multi } = params;\n\n  // skip comment and text nodes\n  // because they are not actual Views\n  // and cannot be animated\n  if (element instanceof InvisibleNode || !selector.match(element)) {\n    return true;\n  }\n\n  if (element instanceof ProxyViewContainer) {\n    element.eachChild((child: NgView) => {\n      result.matches.push(child);\n      return true;\n    });\n  } else {\n    result.matches.push(element);\n  }\n\n  return multi;\n}\n","import { NgModule, Injectable, Inject, NgZone, RendererFactory2, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationBuilder } from '@angular/animations';\n\nimport { AnimationDriver, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵAnimationEngine as AnimationEngine } from '@angular/animations/browser';\n\nimport { ɵAnimationRendererFactory as AnimationRendererFactory, ɵBrowserAnimationBuilder as BrowserAnimationBuilder } from '@angular/platform-browser/animations';\n\n// import { NativeScriptModule } from \"../nativescript.module\";\nimport { NativeScriptRendererFactory } from '../nativescript-renderer';\nimport { NativeScriptAnimationDriver } from './animation-driver';\nimport { throwIfAlreadyLoaded } from '../utils/general';\nimport { NativeScriptCommonModule } from '../nativescript-common.module';\n\n@Injectable()\nexport class InjectableAnimationEngine extends AnimationEngine {\n  constructor(@Inject(DOCUMENT) doc: any, driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(doc.body, driver, normalizer);\n  }\n}\n\nexport function instantiateSupportedAnimationDriver() {\n  return new NativeScriptAnimationDriver();\n}\n\nexport function instantiateRendererFactory(renderer: NativeScriptRendererFactory, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n\n@NgModule({\n  imports: [NativeScriptCommonModule],\n  providers: [\n    {\n      provide: AnimationDriver,\n      useFactory: instantiateSupportedAnimationDriver,\n    },\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    {\n      provide: AnimationStyleNormalizer,\n      useFactory: instantiateDefaultStyleNormalizer,\n    },\n    { provide: AnimationEngine, useClass: InjectableAnimationEngine },\n    {\n      provide: RendererFactory2,\n      useFactory: instantiateRendererFactory,\n      deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],\n    },\n  ],\n})\nexport class NativeScriptAnimationsModule {\n  constructor(@Optional() @SkipSelf() parentModule: NativeScriptAnimationsModule) {\n    // Prevents NativeScriptAnimationsModule from getting imported multiple times\n    throwIfAlreadyLoaded(parentModule, 'NativeScriptAnimationsModule');\n  }\n}\n","import { path } from '@nativescript/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NSFileSystem } from '../file-system/ns-file-system';\n\nexport type httpResponseFactory<T> = (url: string, body: any, status: number) => T;\nexport type httpErrorFactory = (url: string, body: any, status: number) => any;\n\nexport function isLocalRequest(url: string): boolean {\n  return url.indexOf('~') === 0 || url.indexOf('/') === 0;\n}\n\nexport function getAbsolutePath(url: string, nsFileSystem: NSFileSystem): string {\n  url = url.replace('~', '').replace('/', '');\n  url = path.join(nsFileSystem.currentApp().path, url);\n  return url;\n}\n\nexport function processLocalFileRequest<T>(url: string, nsFileSystem: NSFileSystem, successResponse: httpResponseFactory<T>, errorResponse: httpErrorFactory): Observable<T> {\n  url = getAbsolutePath(url, nsFileSystem);\n\n  // request from local app resources\n  return new Observable((observer: Observer<T>) => {\n    if (nsFileSystem.fileExists(url)) {\n      const localFile = nsFileSystem.fileFromPath(url);\n      localFile.readText().then(\n        (data) => {\n          try {\n            const json = JSON.parse(data);\n            observer.next(successResponse(url, json, 200));\n            observer.complete();\n          } catch (error) {\n            // Even though the response status was 2xx, this is still an error.\n            // The parse error contains the text of the body that failed to parse.\n            const errorResult = { error, text: data };\n            observer.error(errorResponse(url, errorResult, 200));\n          }\n        },\n        (err: Object) => {\n          observer.error(errorResponse(url, err, 400));\n        }\n      );\n    } else {\n      observer.error(errorResponse(url, 'Not Found', 404));\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpXhrBackend } from '@angular/common/http';\nimport { XhrFactory } from '@angular/common';\nimport { Observable } from 'rxjs';\n\nimport { NSFileSystem } from '../file-system/ns-file-system';\nimport { isLocalRequest, processLocalFileRequest } from './http-utils';\n\n@Injectable()\nexport class NsHttpBackEnd extends HttpXhrBackend {\n  constructor(xhrFactory: XhrFactory, private nsFileSystem: NSFileSystem) {\n    super(xhrFactory);\n  }\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    let result: Observable<HttpEvent<any>>;\n\n    if (isLocalRequest(req.url)) {\n      result = this.handleLocalFileRequest(req.url);\n    } else {\n      result = super.handle(req);\n    }\n\n    return result;\n  }\n\n  private handleLocalFileRequest(url: string): Observable<HttpEvent<any>> {\n    return processLocalFileRequest(url, this.nsFileSystem, createSuccessResponse, createErrorResponse);\n  }\n}\n\nfunction createSuccessResponse(url: string, body: any, status: number): HttpEvent<any> {\n  return new HttpResponse({\n    url,\n    body,\n    status,\n    statusText: 'OK',\n  });\n}\n\nfunction createErrorResponse(url: string, body: any, status: number): HttpErrorResponse {\n  return new HttpErrorResponse({\n    url,\n    error: body,\n    status,\n    statusText: 'ERROR',\n  });\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpBackend } from '@angular/common/http';\n\nimport { NSFileSystem } from '../file-system/ns-file-system';\nimport { NsHttpBackEnd } from './ns-http-backend';\n\n@NgModule({\n  providers: [NSFileSystem, NsHttpBackEnd, { provide: HttpBackend, useExisting: NsHttpBackEnd }],\n  imports: [HttpClientModule],\n  exports: [HttpClientModule],\n})\nexport class NativeScriptHttpClientModule {}\n","import { ComponentRef } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, ChildrenOutletContexts, PRIMARY_OUTLET } from '@angular/router';\n\n/**\n * There are cases where multiple activatedRoute nodes should be associated/handled by the same PageRouterOutlet.\n * We can gat additional ActivatedRoutes nodes when there is:\n *  - Lazy loading - there is an additional ActivatedRoute node for the RouteConfig with the `loadChildren` setup\n *  - Componentless routes - there is an additional ActivatedRoute node for the componentless RouteConfig\n *\n * Example:\n *   R  <-- root\n *   |\n * feature (lazy module) <-- RouteConfig: { path: \"lazy\", loadChildren: \"./feature/feature.module#FeatureModule\" }\n *   |\n * module (componentless route) <-- RouteConfig: { path: \"module\", children: [...] } // Note: No 'component'\n *   |\n *  home <-- RouteConfig: { path: \"module\", component: MyComponent } - this is what we get as activatedRoute param\n *\n *  In these cases we will mark the top-most node (feature). NSRouteReuseStrategy will detach the tree there and\n *  use this ActivateRoute as a kay for caching.\n */\nexport function findTopActivatedRouteNodeForOutlet(activatedRoute: ActivatedRouteSnapshot): ActivatedRouteSnapshot {\n  let outletActivatedRoute = activatedRoute;\n\n  while (outletActivatedRoute.parent && outletActivatedRoute.parent.routeConfig && !outletActivatedRoute.parent.routeConfig.component) {\n    outletActivatedRoute = outletActivatedRoute.parent;\n  }\n\n  return outletActivatedRoute;\n}\n\nexport const pageRouterActivatedSymbol = Symbol('page-router-activated');\nexport const loaderRefSymbol = Symbol('loader-ref');\n\nexport function destroyComponentRef(componentRef: ComponentRef<any>) {\n  if (componentRef) {\n    const loaderRef = componentRef[loaderRefSymbol];\n    if (loaderRef) {\n      loaderRef.destroy();\n    }\n    componentRef.destroy();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\nimport { NativeScriptDebug } from '../../trace';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { destroyComponentRef, findTopActivatedRouteNodeForOutlet, pageRouterActivatedSymbol } from './page-router-outlet-utils';\n\ninterface CacheItem {\n  key: string;\n  state: DetachedRouteHandle;\n  isModal: boolean;\n}\n\nconst getSnapshotKey = function (snapshot: ActivatedRouteSnapshot): string {\n  return snapshot.pathFromRoot.join('->');\n};\n\n/**\n * Detached state cache\n */\nclass DetachedStateCache {\n  private cache = new Array<CacheItem>();\n\n  public get length(): number {\n    return this.cache.length;\n  }\n\n  public push(cacheItem: CacheItem) {\n    this.cache.push(cacheItem);\n  }\n\n  public pop(): CacheItem {\n    return this.cache.pop();\n  }\n\n  public peek(): CacheItem {\n    return this.cache[this.cache.length - 1];\n  }\n\n  public clear() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`DetachedStateCache.clear() ${this.cache.length} items will be destroyed`);\n    }\n\n    while (this.cache.length > 0) {\n      const state = <any>this.cache.pop().state;\n      if (!state.componentRef) {\n        throw new Error('No componentRed found in DetachedRouteHandle');\n      }\n\n      destroyComponentRef(state.componentRef);\n    }\n  }\n\n  public clearModalCache() {\n    let removedItemsCount = 0;\n    const hasModalPages = this.cache.some((cacheItem) => {\n      return cacheItem.isModal;\n    });\n\n    if (hasModalPages) {\n      let modalCacheCleared = false;\n\n      while (!modalCacheCleared) {\n        let cacheItem = this.peek();\n        const state = <any>cacheItem.state;\n\n        if (!state.componentRef) {\n          throw new Error('No componentRef found in DetachedRouteHandle');\n        }\n\n        destroyComponentRef(state.componentRef);\n        if (cacheItem.isModal) {\n          modalCacheCleared = true;\n        }\n\n        this.pop();\n        removedItemsCount++;\n      }\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`DetachedStateCache.clearModalCache() ${removedItemsCount} items will be destroyed`);\n    }\n  }\n}\n\n/**\n * Detaches subtrees loaded inside PageRouterOutlet in forward navigation\n * and reattaches them on back.\n * Reuses routes as long as their route config is the same.\n */\n@Injectable()\nexport class NSRouteReuseStrategy implements RouteReuseStrategy {\n  private cacheByOutlet: { [key: string]: DetachedStateCache } = {};\n\n  constructor(private location: NSLocationStrategy) {}\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const key = getSnapshotKey(route);\n    const isPageActivated = route[pageRouterActivatedSymbol];\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    let shouldDetach = outlet && !isBack && isPageActivated;\n\n    if (outlet) {\n      if (outlet.parent && !outlet.parent.shouldDetach) {\n        shouldDetach = false;\n      }\n\n      outlet.shouldDetach = shouldDetach;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldDetach isBack: ${isBack} key: ${key} result: ${shouldDetach}`);\n    }\n\n    return shouldDetach;\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const cache = this.cacheByOutlet[outletKey];\n    if (!cache) {\n      return false;\n    }\n\n    const key = getSnapshotKey(route);\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    const shouldAttach = isBack && cache.peek()?.key === key;\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldAttach isBack: ${isBack} key: ${key} result: ${shouldAttach}`);\n    }\n\n    if (outlet) {\n      outlet.shouldDetach = true;\n    }\n\n    return shouldAttach;\n  }\n\n  store(route: ActivatedRouteSnapshot, state: DetachedRouteHandle): void {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const key = getSnapshotKey(route);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`store key: ${key}, state: ${state}`);\n    }\n\n    const outletKey = this.location.getRouteFullPath(route);\n\n    // tslint:disable-next-line:max-line-length\n    const cache = (this.cacheByOutlet[outletKey] = this.cacheByOutlet[outletKey] || new DetachedStateCache());\n\n    if (state) {\n      let isModal = false;\n      if (this.location._modalNavigationDepth > 0) {\n        isModal = true;\n      }\n\n      cache.push({ key, state, isModal });\n    } else {\n      const topItem = cache.peek();\n      if (topItem.key === key) {\n        cache.pop();\n\n        if (!cache.length) {\n          delete this.cacheByOutlet[outletKey];\n        }\n      } else {\n        throw new Error(\"Trying to pop from DetachedStateCache but keys don't match. \" + `expected: ${topItem.key} actual: ${key}`);\n      }\n    }\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const cache = this.cacheByOutlet[outletKey];\n    if (!cache) {\n      return null;\n    }\n\n    const key = getSnapshotKey(route);\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    const cachedItem = cache.peek();\n\n    let state = null;\n    if (isBack && cachedItem && cachedItem.key === key) {\n      state = cachedItem.state;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`retrieved isBack: ${isBack} key: ${key} state: ${state}`);\n    }\n\n    return state;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    const shouldReuse = future.routeConfig === curr.routeConfig;\n\n    if (shouldReuse && curr && curr[pageRouterActivatedSymbol]) {\n      // When reusing route - copy the pageRouterActivated to the new snapshot\n      // It's needed in shouldDetach to determine if the route should be detached.\n      future[pageRouterActivatedSymbol] = curr[pageRouterActivatedSymbol];\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldReuseRoute result: ${shouldReuse}`);\n    }\n\n    return shouldReuse;\n  }\n\n  clearCache(outletKey: string) {\n    const cache = this.cacheByOutlet[outletKey];\n\n    if (cache) {\n      cache.clear();\n    }\n  }\n\n  clearModalCache(outletKey: string) {\n    const cache = this.cacheByOutlet[outletKey];\n\n    if (cache) {\n      cache.clearModalCache();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, UrlTree, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { NavigationOptions, Outlet } from './ns-location-utils';\nimport { FrameService } from '../frame.service';\nimport { NativeScriptDebug } from '../../trace';\nimport { findTopActivatedRouteNodeForOutlet } from './page-router-outlet-utils';\n\nexport type ExtendedNavigationExtras = NavigationExtras & NavigationOptions;\n\nexport interface BackNavigationOptions {\n  outlets?: Array<string>;\n  relativeTo?: ActivatedRoute | null;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensions {\n  constructor(public router: Router, public locationStrategy: NSLocationStrategy, public frameService: FrameService) {}\n\n  public navigate(commands: any[], extras?: ExtendedNavigationExtras): Promise<boolean> {\n    if (extras) {\n      this.locationStrategy._setNavigationOptions(extras);\n    }\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: NavigationOptions): Promise<boolean> {\n    if (options) {\n      this.locationStrategy._setNavigationOptions(options);\n    }\n    return this.router.navigateByUrl(url);\n  }\n\n  public back(backNavigationOptions?: BackNavigationOptions) {\n    if (backNavigationOptions) {\n      this.backOutlets(backNavigationOptions);\n    } else {\n      this.locationStrategy.back();\n    }\n  }\n\n  public canGoBack(backNavigationOptions?: BackNavigationOptions) {\n    let canGoBack = true;\n    if (backNavigationOptions) {\n      const { outletsToBack, outlets } = this.findOutletsToBack(backNavigationOptions);\n\n      if (outletsToBack.length !== outlets.length) {\n        NativeScriptDebug.routerError('No outlet found relative to activated route');\n      } else {\n        outletsToBack.forEach((outletToBack) => {\n          if (!this.locationStrategy.canGoBack(outletToBack)) {\n            canGoBack = false;\n          }\n        });\n      }\n    } else {\n      canGoBack = this.locationStrategy.canGoBack();\n    }\n\n    return canGoBack;\n  }\n\n  public backToPreviousPage() {\n    this.frameService.getFrame().goBack();\n  }\n\n  public canGoBackToPreviousPage(): boolean {\n    return this.frameService.getFrame().canGoBack();\n  }\n\n  private backOutlets(options: BackNavigationOptions) {\n    const { outletsToBack, outlets } = this.findOutletsToBack(options);\n\n    if (outletsToBack.length !== outlets.length) {\n      NativeScriptDebug.routerError('No outlet found relative to activated route');\n    } else {\n      outletsToBack.forEach((outletToBack) => {\n        if (outletToBack.isPageNavigationBack) {\n          NativeScriptDebug.routerError('Attempted to call startGoBack while going back:');\n        } else {\n          this.locationStrategy.back(outletToBack);\n        }\n      });\n    }\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private findOutletsToBack(options?: BackNavigationOptions): { outletsToBack: Array<Outlet>; outlets: Array<string> } {\n    const outletsToBack: Array<Outlet> = [];\n    const rootRoute: ActivatedRoute = this.router.routerState.root;\n    let outlets = options.outlets;\n    let relativeRoute = options.relativeTo || rootRoute;\n\n    const relativeRouteOutlet = this.findOutletByRoute(relativeRoute);\n    const isNSEmptyOutlet = relativeRouteOutlet && relativeRouteOutlet.isNSEmptyOutlet;\n\n    // Lazy named outlet has added 'primary' inner NSEmptyOutlet child.\n    // Take parent route when `relativeTo` option points to the outer named outlet.\n    if (isNSEmptyOutlet && relativeRoute.outlet !== 'primary') {\n      relativeRoute = relativeRoute.parent || relativeRoute;\n    }\n\n    const routesToMatch = outlets ? relativeRoute.children : [relativeRoute];\n    outlets = outlets || [relativeRoute.outlet];\n\n    for (let index = 0; index < routesToMatch.length; index++) {\n      const currentRoute = routesToMatch[index];\n      if (outlets.some((currentOutlet) => currentOutlet === currentRoute.outlet)) {\n        const outlet = this.findOutletByRoute(currentRoute);\n\n        if (outlet) {\n          outletsToBack.push(outlet);\n        }\n      }\n    }\n\n    return { outletsToBack: outletsToBack, outlets: outlets };\n  }\n\n  private findOutletByRoute(currentRoute: ActivatedRoute): Outlet {\n    let outlet;\n\n    const currentRouteSnapshop = findTopActivatedRouteNodeForOutlet(currentRoute.snapshot);\n    const outletKey = this.locationStrategy.getRouteFullPath(currentRouteSnapshop);\n    outlet = this.locationStrategy.findOutlet(outletKey, currentRouteSnapshop);\n\n    return outlet;\n  }\n}\n","import { Directive, Input, ElementRef, NgZone, AfterViewInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { ActivatedRoute, Router, UrlTree } from '@angular/router';\nimport { NavigationTransition } from '@nativescript/core';\nimport { NativeScriptDebug } from '../../trace';\nimport { RouterExtensions } from './router-extensions';\nimport { NavigationOptions } from './ns-location-utils';\n\n// Copied from \"@angular/router/src/config\"\nexport type QueryParamsHandling = 'merge' | 'preserve' | '';\n\n/**\n * The nsRouterLink directive lets you link to specific parts of your app.\n *\n * Consider the following route configuration:\n * ```\n * [{ path: \"/user\", component: UserCmp }]\n * ```\n *\n * When linking to this `User` route, you can write:\n *\n * ```\n * <a [nsRouterLink]=\"[\"/user\"]\">link to user component</a>\n * ```\n *\n * NSRouterLink expects the value to be an array of path segments, followed by the params\n * for that level of routing. For instance `[\"/team\", {teamId: 1}, \"user\", {userId: 2}]`\n * means that we want to generate a link to `/team;teamId=1/user;userId=2`.\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * If the segment begins with `/`, the router will look up the route from the root of the app.\n * If the segment begins with `./`, or doesn\"t begin with a slash, the router will\n * instead look in the current component\"s children for the route.\n * And if the segment begins with `../`, the router will go up one level.\n */\n@Directive({ selector: '[nsRouterLink]' })\nexport class NSRouterLink implements AfterViewInit {\n  // tslint:disable-line:directive-class-suffix\n  @Input() target: string;\n  @Input() queryParams: { [k: string]: any };\n  @Input() fragment: string;\n\n  @Input() queryParamsHandling: QueryParamsHandling;\n  @Input() preserveQueryParams: boolean;\n  @Input() preserveFragment: boolean;\n  @Input() skipLocationChange: boolean;\n  @Input() replaceUrl: boolean;\n\n  @Input() clearHistory: boolean;\n  @Input() pageTransition: boolean | string | NavigationTransition = true;\n  @Input() pageTransitionDuration;\n\n  private commands: any[] = [];\n\n  constructor(private ngZone: NgZone, private router: Router, private navigator: RouterExtensions, private route: ActivatedRoute, private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.el.nativeElement.on('tap', () => {\n      this.ngZone.run(() => {\n        this.onTap();\n      });\n    });\n  }\n\n  @Input('nsRouterLink')\n  set params(data: any[] | string) {\n    if (Array.isArray(data)) {\n      this.commands = data;\n    } else {\n      this.commands = [data];\n    }\n  }\n\n  onTap() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`nsRouterLink.tapped: ${this.commands} ` + `clear: ${this.clearHistory} ` + `transition: ${JSON.stringify(this.pageTransition)} ` + `duration: ${this.pageTransitionDuration}`);\n    }\n\n    const extras = this.getExtras();\n    // this.navigator.navigateByUrl(this.urlTree, extras);\n    this.navigator.navigate(this.commands, {\n      ...extras,\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n\n  private getExtras(): NavigationExtras & NavigationOptions {\n    const transition = this.getTransition();\n    return {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n\n      clearHistory: this.convertClearHistory(this.clearHistory),\n      animated: transition.animated,\n      transition: transition.transition,\n    };\n  }\n\n  get urlTree(): UrlTree {\n    const urlTree = this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`nsRouterLink urlTree created: ${urlTree}`);\n    }\n\n    return urlTree;\n  }\n\n  private convertClearHistory(value: boolean | string): boolean {\n    return value === true || value === 'true';\n  }\n\n  private getTransition(): { animated: boolean; transition?: NavigationTransition } {\n    let transition: NavigationTransition;\n    let animated: boolean;\n\n    if (typeof this.pageTransition === 'boolean') {\n      animated = this.pageTransition;\n    } else if (typeof this.pageTransition === 'string') {\n      if (this.pageTransition === 'none' || this.pageTransition === 'false') {\n        animated = false;\n      } else {\n        animated = true;\n        transition = {\n          name: <string>this.pageTransition,\n        };\n      }\n    } else {\n      animated = true;\n      transition = <NavigationTransition>this.pageTransition;\n    }\n\n    let duration = +this.pageTransitionDuration;\n    if (!isNaN(duration)) {\n      transition = transition || {};\n      transition.duration = duration;\n    }\n\n    return { animated, transition };\n  }\n}\n\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n","/* tslint:disable:forin */\n// Copied unexported functions from @angular/router/src/url_tree\nimport { UrlTree, UrlSegment, PRIMARY_OUTLET } from '@angular/router';\n// UrlSegmentGroup not exported, just use any.\ntype UrlSegmentGroup = any;\n\nexport function containsTree(container: UrlTree, containee: UrlTree, exact: boolean): boolean {\n  if (exact) {\n    return equalSegmentGroups(container.root, containee.root);\n  } else {\n    return containsSegmentGroup(container.root, containee.root);\n  }\n}\n\nfunction equalSegmentGroups(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  if (!equalPath(container.segments, containee.segments)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) {\n    return false;\n  }\n  for (let c in containee.children) {\n    if (!container.children[c]) {\n      return false;\n    }\n    if (!equalSegmentGroups(container.children[c], containee.children[c])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction containsSegmentGroup(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n\nfunction containsSegmentGroupHelper(container: UrlSegmentGroup, containee: UrlSegmentGroup, containeePaths: UrlSegment[]): boolean {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) {\n      return false;\n    }\n    if (containee.hasChildren()) {\n      return false;\n    }\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) {\n      return false;\n    }\n    for (let c in containee.children) {\n      if (!container.children[c]) {\n        return false;\n      }\n      if (!containsSegmentGroup(container.children[c], containee.children[c])) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) {\n      return false;\n    }\n    if (!container.children[PRIMARY_OUTLET]) {\n      return false;\n    }\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n\nexport function equalPath(a: UrlSegment[], b: UrlSegment[]): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i].path !== b[i].path) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NavigationEnd, Router, UrlTree } from '@angular/router';\nimport { containsTree } from './private-imports/router-url-tree';\n\nimport { NSRouterLink } from './ns-router-link';\n\n/**\n * The NSRouterLinkActive directive lets you add a CSS class to an element when the link\"s route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either \"/user\" or \"/user/bob\", the active-link class will\n * be added to the component. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"class1 class2\">Bob</a>\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"[\"class1\", \"class2\"]\">Bob</a>\n * ```\n *\n * You can configure NSRouterLinkActive by passing `exact: true`. This will add the\n * classes only when the url matches the link exactly.\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\"\n * [nsRouterLinkActiveOptions]=\"{exact: true}\">Bob</a>\n * ```\n *\n * Finally, you can apply the NSRouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div [nsRouterLinkActive]=\"active-link\" [nsRouterLinkActiveOptions]=\"{exact: true}\">\n *   <a [nsRouterLink]=\"/user/jim\">Jim</a>\n *   <a [nsRouterLink]=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either \"/user/jim\" or\n * \"/user/bob\".\n *\n * @stable\n */\n@Directive({\n  selector: '[nsRouterLinkActive]',\n  exportAs: 'routerLinkActive',\n})\nexport class NSRouterLinkActive implements OnChanges, OnDestroy, AfterContentInit {\n  // tslint:disable-line:max-line-length directive-class-suffix\n  @ContentChildren(NSRouterLink) links: QueryList<NSRouterLink>;\n\n  private classes: string[] = [];\n  private subscription: Subscription;\n  private active: boolean = false;\n\n  @Input() nsRouterLinkActiveOptions: { exact: boolean } = { exact: false };\n\n  constructor(private router: Router, private element: ElementRef, private renderer: Renderer2) {\n    this.subscription = router.events.subscribe((s) => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n  get isActive(): boolean {\n    return this.active;\n  }\n\n  ngAfterContentInit(): void {\n    this.links.changes.subscribe(() => this.update());\n    this.update();\n  }\n\n  @Input('nsRouterLinkActive')\n  set nsRouterLinkActive(data: string[] | string) {\n    if (Array.isArray(data)) {\n      this.classes = <any>data;\n    } else {\n      this.classes = data.split(' ');\n    }\n  }\n\n  ngOnChanges(_: {}): any {\n    this.update();\n  }\n  ngOnDestroy(): any {\n    this.subscription.unsubscribe();\n  }\n\n  private update(): void {\n    if (!this.links) {\n      return;\n    }\n    const hasActiveLinks = this.hasActiveLinks();\n    // react only when status has changed to prevent unnecessary dom updates\n    if (this.active !== hasActiveLinks) {\n      const currentUrlTree = this.router.parseUrl(this.router.url);\n      const isActiveLinks = this.reduceList(currentUrlTree, this.links);\n      this.classes.forEach((c) => {\n        if (isActiveLinks) {\n          this.renderer.addClass(this.element.nativeElement, c);\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, c);\n        }\n      });\n    }\n    Promise.resolve(hasActiveLinks).then((active) => (this.active = active));\n  }\n\n  private reduceList(currentUrlTree: UrlTree, q: QueryList<any>): boolean {\n    return q.reduce((res: boolean, link: NSRouterLink) => {\n      return res || containsTree(currentUrlTree, link.urlTree, this.nsRouterLinkActiveOptions.exact);\n    }, false);\n  }\n\n  private isLinkActive(router: Router): (link: NSRouterLink) => boolean {\n    return (link: NSRouterLink) => router.isActive(link.urlTree, this.nsRouterLinkActiveOptions.exact);\n  }\n\n  private hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router));\n  }\n}\n","import { Attribute, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, Directive, Inject, InjectionToken, Injector, OnDestroy, EventEmitter, Output, Type, ViewContainerRef, ElementRef, InjectFlags, NgZone } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, ChildrenOutletContexts, PRIMARY_OUTLET } from '@angular/router';\n\nimport { Frame, Page, NavigatedData, profile } from '@nativescript/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { PAGE_FACTORY, PageFactory } from '../../tokens';\nimport { NativeScriptDebug } from '../../trace';\nimport { DetachedLoader } from '../../cdk/detached-loader';\nimport { ViewUtil } from '../../view-util';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { Outlet } from './ns-location-utils';\nimport { NSRouteReuseStrategy } from './ns-route-reuse-strategy';\nimport { findTopActivatedRouteNodeForOutlet, pageRouterActivatedSymbol, loaderRefSymbol, destroyComponentRef } from './page-router-outlet-utils';\nimport { registerElement } from '../../element-registry';\nimport { PageService } from '../../cdk/frame-page/page.service';\n\nexport class PageRoute {\n  activatedRoute: BehaviorSubject<ActivatedRoute>;\n\n  constructor(startRoute: ActivatedRoute) {\n    this.activatedRoute = new BehaviorSubject(startRoute);\n  }\n}\n\nexport class DestructibleInjector implements Injector {\n  private refs = new Set<any>();\n  constructor(private destructableProviders: ProviderSet, private parent: Injector) {}\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T {\n    const ref = this.parent.get(token, notFoundValue, flags);\n    if (this.destructableProviders.has(token)) {\n      this.refs.add(ref);\n    }\n    return ref;\n  }\n  destroy() {\n    this.refs.forEach((ref) => {\n      if (ref.ngOnDestroy instanceof Function) {\n        ref.ngOnDestroy();\n      }\n    });\n    this.refs.clear();\n  }\n}\n\ntype ProviderSet = Set<Type<any> | InjectionToken<any>>;\n\nconst routeToString = function (activatedRoute: ActivatedRoute | ActivatedRouteSnapshot): string {\n  return activatedRoute.pathFromRoot.join('->');\n};\n\nregisterElement('page-router-outlet', () => Frame);\n// eslint-disable-next-line @angular-eslint/directive-selector\n@Directive({ selector: 'page-router-outlet' }) // tslint:disable-line:directive-selector\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class PageRouterOutlet implements OnDestroy {\n  // tslint:disable-line:directive-class-suffix\n  private activated: ComponentRef<any> | null = null;\n  private _activatedRoute: ActivatedRoute | null = null;\n  private detachedLoaderFactory: ComponentFactory<DetachedLoader>;\n\n  private outlet: Outlet;\n  private name: string;\n  private isEmptyOutlet: boolean;\n  private viewUtil: ViewUtil;\n  private frame: Frame;\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('activate') activateEvents = new EventEmitter<any>(); // tslint:disable-line:no-output-rename\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('deactivate') deactivateEvents = new EventEmitter<any>(); // tslint:disable-line:no-output-rename\n\n  /** @deprecated from Angular since v4 */\n  get locationInjector(): Injector {\n    return this.location.injector;\n  }\n  /** @deprecated from Angular since v4 */\n  get locationFactoryResolver(): ComponentFactoryResolver {\n    return this.resolver;\n  }\n\n  get isActivated(): boolean {\n    return !!this.activated;\n  }\n\n  get component(): unknown {\n    if (!this.activated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    return this.activated.instance;\n  }\n  get activatedRoute(): ActivatedRoute {\n    if (!this.activated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    return this._activatedRoute;\n  }\n\n  constructor(\n    private parentContexts: ChildrenOutletContexts,\n    private location: ViewContainerRef,\n    @Attribute('name') name: string,\n    @Attribute('actionBarVisibility') actionBarVisibility: string,\n    @Attribute('isEmptyOutlet') isEmptyOutlet: boolean,\n    private locationStrategy: NSLocationStrategy,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private resolver: ComponentFactoryResolver,\n    private changeDetector: ChangeDetectorRef,\n    @Inject(PAGE_FACTORY) private pageFactory: PageFactory,\n    private routeReuseStrategy: NSRouteReuseStrategy,\n    private ngZone: NgZone,\n    elRef: ElementRef,\n    viewUtil: ViewUtil\n  ) {\n    this.isEmptyOutlet = isEmptyOutlet;\n    this.frame = elRef.nativeElement;\n    this.setActionBarVisibility(actionBarVisibility);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.constructor frame: ${this.frame}`);\n    }\n\n    this.name = name || PRIMARY_OUTLET;\n    parentContexts.onChildOutletCreated(this.name, <any>this);\n\n    this.viewUtil = viewUtil;\n    this.detachedLoaderFactory = resolver.resolveComponentFactory(DetachedLoader);\n  }\n\n  setActionBarVisibility(actionBarVisibility: string): void {\n    switch (actionBarVisibility) {\n      case 'always':\n      case 'never':\n        this.frame.actionBarVisibility = actionBarVisibility;\n        return;\n\n      default:\n        this.frame.actionBarVisibility = 'auto';\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Clear accumulated modal view page cache when page-router-outlet\n    // destroyed on modal view closing\n    this.parentContexts.onChildOutletDestroyed(this.name);\n\n    if (this.outlet) {\n      this.outlet.outletKeys.forEach((key) => {\n        this.routeReuseStrategy.clearModalCache(key);\n      });\n      this.locationStrategy.clearOutlet(this.frame);\n    } else {\n      NativeScriptDebug.routerLog('PageRouterOutlet.ngOnDestroy: no outlet available for page-router-outlet');\n    }\n\n    if (this.isActivated) {\n      const c = this.activated.instance;\n      this.activated.hostView.detach();\n      destroyComponentRef(this.activated);\n\n      this.deactivateEvents.emit(c);\n      this.activated = null;\n    }\n  }\n\n  deactivate(): void {\n    if (!this.outlet || !this.outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Currently not in page back navigation - component should be detached instead of deactivated.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('PageRouterOutlet.deactivate() while going back - should destroy');\n    }\n\n    if (!this.isActivated) {\n      return;\n    }\n\n    const c = this.activated.instance;\n    destroyComponentRef(this.activated);\n\n    this.activated = null;\n    this._activatedRoute = null;\n\n    this.deactivateEvents.emit(c);\n  }\n\n  /**\n   * Called when the `RouteReuseStrategy` instructs to detach the subtree\n   */\n  detach(): ComponentRef<any> {\n    if (!this.isActivated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.detach() - ${routeToString(this._activatedRoute)}`);\n    }\n\n    // Detach from ChangeDetection\n    this.activated.hostView.detach();\n\n    const component = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    return component;\n  }\n\n  /**\n   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n   */\n  attach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.attach() - ${routeToString(activatedRoute)}`);\n    }\n\n    this.activated = ref;\n\n    // reattach to ChangeDetection\n    this.activated.hostView.markForCheck();\n    this.activated.hostView.reattach();\n    this._activatedRoute = activatedRoute;\n    this.markActivatedRoute(activatedRoute);\n\n    this.locationStrategy._finishBackPageNavigation(this.frame);\n  }\n\n  /**\n   * Called by the Router to instantiate a new component during the commit phase of a navigation.\n   * This method in turn is responsible for calling the `routerOnActivate` hook of its child.\n   */\n  @profile\n  activateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver | null): void {\n    this.outlet = this.outlet || this.getOutlet(activatedRoute.snapshot);\n    if (!this.outlet) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('No outlet found relative to activated route');\n      }\n      return;\n    }\n\n    this.outlet.isNSEmptyOutlet = this.isEmptyOutlet;\n    this.locationStrategy.updateOutletFrame(this.outlet, this.frame, this.isEmptyOutlet);\n\n    if (this.outlet && this.outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Currently in page back navigation - component should be reattached instead of activated.');\n      }\n      this.locationStrategy._finishBackPageNavigation(this.frame);\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.activateWith() - ${routeToString(activatedRoute)}`);\n    }\n\n    this._activatedRoute = activatedRoute;\n\n    this.markActivatedRoute(activatedRoute);\n\n    resolver = resolver || this.resolver;\n\n    this.activateOnGoForward(activatedRoute, resolver);\n    this.activateEvents.emit(this.activated.instance);\n  }\n\n  private activateOnGoForward(activatedRoute: ActivatedRoute, loadedResolver: ComponentFactoryResolver): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('PageRouterOutlet.activate() forward navigation - ' + 'create detached loader in the loader container');\n    }\n\n    const factory = this.getComponentFactory(activatedRoute, loadedResolver);\n    const page = this.pageFactory({\n      isNavigation: true,\n      componentType: factory.componentType,\n    });\n\n    const destructables = new Set([]);\n    const injector = Injector.create({\n      providers: [\n        { provide: Page, useValue: page },\n        { provide: Frame, useValue: this.frame },\n        { provide: PageRoute, useValue: new PageRoute(activatedRoute) },\n        { provide: ActivatedRoute, useValue: activatedRoute },\n        { provide: ChildrenOutletContexts, useValue: this.parentContexts.getOrCreateContext(this.name).children },\n        { provide: PageService, useClass: PageService },\n      ],\n      parent: this.location.injector,\n    });\n\n    const childInjector = new DestructibleInjector(destructables, injector);\n    const loaderRef = this.location.createComponent(this.detachedLoaderFactory, this.location.length, childInjector, []);\n    loaderRef.onDestroy(() => childInjector.destroy());\n    this.changeDetector.markForCheck();\n\n    this.activated = loaderRef.instance.loadWithFactory(factory);\n    this.activated.changeDetectorRef.detectChanges();\n    this.loadComponentInPage(page, this.activated, { activatedRoute });\n\n    this.activated[loaderRefSymbol] = loaderRef;\n  }\n\n  @profile\n  private loadComponentInPage(page: Page, componentRef: ComponentRef<any>, navigationContext): void {\n    // Component loaded. Find its root native view.\n    const componentView = componentRef.location.nativeElement;\n    // Remove it from original native parent.\n    this.viewUtil.removeChild(componentView.parent, componentView);\n    // Add it to the new page\n    this.viewUtil.appendChild(page, componentView);\n\n    const navigatedFromCallback = (<any>global).Zone.current.wrap((args: NavigatedData) => {\n      if (args.isBackNavigation) {\n        this.locationStrategy._beginBackPageNavigation(this.frame);\n        this.locationStrategy.back(null, this.frame);\n      }\n    });\n    // TODO: experiment with using NgZone instead of global above\n    // const navigatedFromCallback = (args: NavigatedData) => {\n    // \tif (args.isBackNavigation) {\n    //     this.ngZone.run(() => {\n    //       this.locationStrategy._beginBackPageNavigation(this.frame);\n    //       this.locationStrategy.back(null, this.frame);\n    //     });\n    // \t}\n    // };\n\n    page.on(Page.navigatedFromEvent, navigatedFromCallback);\n    componentRef.onDestroy(() => {\n      if (page) {\n        page.off(Page.navigatedFromEvent, navigatedFromCallback);\n        page = null;\n      }\n    });\n\n    const navOptions = this.locationStrategy._beginPageNavigation(this.frame);\n\n    // Clear refCache if navigation with clearHistory\n    if (navOptions.clearHistory) {\n      const clearCallback = () =>\n        setTimeout(() => {\n          if (this.outlet) {\n            this.routeReuseStrategy.clearCache(this.outlet.outletKeys[0]);\n          }\n        });\n\n      page.once(Page.navigatedToEvent, clearCallback);\n    }\n\n    this.frame.navigate({\n      create() {\n        return page;\n      },\n      context: navigationContext,\n      clearHistory: navOptions.clearHistory,\n      animated: navOptions.animated,\n      transition: navOptions.transition,\n    });\n  }\n\n  // Find and mark the top activated route as an activated one.\n  // In ns-location-strategy we are reusing components only if their corresponing routes\n  // are marked as activated from this method.\n  private markActivatedRoute(activatedRoute: ActivatedRoute) {\n    const queue = [];\n    queue.push(activatedRoute.snapshot);\n    let currentRoute = queue.shift();\n\n    while (currentRoute) {\n      currentRoute.children.forEach((childRoute) => {\n        queue.push(childRoute);\n      });\n\n      const topActivatedRoute = findTopActivatedRouteNodeForOutlet(currentRoute);\n      const outletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute);\n      const outlet = this.locationStrategy.findOutlet(outletKey, topActivatedRoute);\n\n      if (outlet && outlet.frames.length) {\n        topActivatedRoute[pageRouterActivatedSymbol] = true;\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('Activated route marked as page: ' + routeToString(topActivatedRoute));\n        }\n      }\n\n      currentRoute = queue.shift();\n    }\n  }\n\n  private getComponentFactory(activatedRoute: ActivatedRoute, loadedResolver: ComponentFactoryResolver): ComponentFactory<any> {\n    const { component } = activatedRoute.routeConfig;\n\n    return loadedResolver ? loadedResolver.resolveComponentFactory(component) : this.componentFactoryResolver.resolveComponentFactory(component);\n  }\n\n  private getOutlet(activatedRouteSnapshot: ActivatedRouteSnapshot): Outlet {\n    const topActivatedRoute = findTopActivatedRouteNodeForOutlet(activatedRouteSnapshot);\n    const outletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute);\n    let outlet = this.locationStrategy.findOutlet(outletKey, topActivatedRoute);\n\n    // Named lazy loaded outlet.\n    if (!outlet && this.isEmptyOutlet) {\n      const parentOutletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute.parent);\n      outlet = this.locationStrategy.findOutlet(parentOutletKey, topActivatedRoute.parent);\n\n      if (outlet) {\n        outlet.outletKeys.push(outletKey);\n      }\n    }\n\n    return outlet;\n  }\n}\n","import { NSLocationStrategy } from './ns-location-strategy';\nimport { PlatformLocation, LocationChangeListener } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NativeScriptDebug } from '../../trace';\n\n@Injectable()\nexport class NativescriptPlatformLocation extends PlatformLocation {\n  constructor(private locationStrategy: NSLocationStrategy) {\n    super();\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NativescriptPlatformLocation.constructor()');\n    }\n  }\n\n  getState(): any {\n    return undefined;\n  }\n\n  readonly hostname: string;\n  readonly href: string;\n  readonly port: string;\n  readonly protocol: string;\n\n  getBaseHrefFromDOM(): string {\n    return '/';\n  }\n\n  onPopState(fn: LocationChangeListener): VoidFunction {\n    this.locationStrategy.onPopState(fn);\n    return () => {};\n  }\n\n  onHashChange(_fn: LocationChangeListener): VoidFunction {\n    return () => {};\n  }\n\n  get search(): string {\n    return '';\n  }\n  get hash(): string {\n    return '';\n  }\n  get pathname(): string {\n    return this.locationStrategy.path();\n  }\n  set pathname(_newPath: string) {\n    throw new Error('NativescriptPlatformLocation set pathname - not implemented');\n  }\n\n  pushState(state: any, title: string, url: string): void {\n    this.locationStrategy.pushState(state, title, url, null);\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    this.locationStrategy.replaceState(state, title, url, null);\n  }\n\n  forward(): void {\n    throw new Error('NativescriptPlatformLocation.forward() - not implemented');\n  }\n\n  back(): void {\n    this.locationStrategy.back();\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { Page } from '@nativescript/core';\nimport { PageRouterOutlet } from './page-router-outlet';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ns-empty-outlet',\n  template: \"<page-router-outlet isEmptyOutlet='true'></page-router-outlet>\",\n})\nexport class NSEmptyOutletComponent {\n  @ViewChild(PageRouterOutlet, { read: PageRouterOutlet, static: false }) pageRouterOutlet: PageRouterOutlet;\n  constructor(private page: Page) {\n    if (this.page) {\n      this.page.actionBarHidden = true;\n\n      this.page.on('loaded', () => {\n        if (this.pageRouterOutlet && this.page.frame) {\n          this.pageRouterOutlet.setActionBarVisibility(this.page.frame.actionBarVisibility);\n        }\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA, Optional, SkipSelf } from '@angular/core';\nimport { RouterModule, Routes, ExtraOptions, RouteReuseStrategy } from '@angular/router';\nimport { LocationStrategy, PlatformLocation } from '@angular/common';\nimport { NSRouterLink } from './ns-router-link';\nimport { NSRouterLinkActive } from './ns-router-link-active';\nimport { PageRouterOutlet } from './page-router-outlet';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { NativescriptPlatformLocation } from './ns-platform-location';\nimport { NSRouteReuseStrategy } from './ns-route-reuse-strategy';\nimport { RouterExtensions } from './router-extensions';\nimport { FrameService } from '../frame.service';\nimport { NSEmptyOutletComponent } from './ns-empty-outlet.component';\nimport { NativeScriptCommonModule } from '../../nativescript-common.module';\nimport { START_PATH } from '../../tokens';\n\nexport { PageRoute } from './page-router-outlet';\nexport { RouterExtensions } from './router-extensions';\nexport { Outlet, NavigationOptions, LocationState, defaultNavOptions } from './ns-location-utils';\nexport { NSRouterLink } from './ns-router-link';\nexport { NSRouterLinkActive } from './ns-router-link-active';\nexport { PageRouterOutlet } from './page-router-outlet';\nexport { NSLocationStrategy } from './ns-location-strategy';\nexport { NSEmptyOutletComponent } from './ns-empty-outlet.component';\n\nexport function provideLocationStrategy(locationStrategy: NSLocationStrategy, frameService: FrameService, startPath: string): NSLocationStrategy {\n  return locationStrategy ? locationStrategy : new NSLocationStrategy(frameService, startPath);\n}\n\n@NgModule({\n  declarations: [NSRouterLink, NSRouterLinkActive, PageRouterOutlet, NSEmptyOutletComponent],\n  entryComponents: [NSEmptyOutletComponent],\n  imports: [RouterModule, NativeScriptCommonModule],\n  exports: [RouterModule, NSRouterLink, NSRouterLinkActive, PageRouterOutlet, NSEmptyOutletComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptRouterModule {\n  static forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders<NativeScriptRouterModule> {\n    return {\n      ngModule: NativeScriptRouterModule,\n      providers: [\n        ...RouterModule.forRoot(routes, config).providers,\n        {\n          provide: NSLocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [[NSLocationStrategy, new Optional(), new SkipSelf()], FrameService, [new Optional(), START_PATH]],\n        },\n        { provide: LocationStrategy, useExisting: NSLocationStrategy },\n        NativescriptPlatformLocation,\n        { provide: PlatformLocation, useExisting: NativescriptPlatformLocation },\n        RouterExtensions,\n        NSRouteReuseStrategy,\n        { provide: RouteReuseStrategy, useExisting: NSRouteReuseStrategy },\n      ],\n    };\n  }\n\n  static forChild(routes: Routes): ModuleWithProviders<NativeScriptRouterModule> {\n    return { ngModule: NativeScriptRouterModule, providers: RouterModule.forChild(routes).providers };\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../../../../node_modules/zone.js/zone.d.ts\" />\n/// <reference path=\"../../../../node_modules/@nativescript/core/global-types.d.ts\" />\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { EventEmitter, isDevMode, NgZone } from '@angular/core';\nimport { Utils } from '@nativescript/core';\n\nlet currentRafId = 1;\nfunction noop() {}\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NativeScriptNgZone implements NgZone {\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly hasPendingMicrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({ enableLongStackTrace = isDevMode(), shouldCoalesceEventChangeDetection = true, shouldCoalesceRunChangeDetection = true } = {}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any)());\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n    // if shouldCoalesceRunChangeDetection is true, all tasks including event tasks will be\n    // coalesced, so shouldCoalesceEventChangeDetection option is not necessary and can be skipped.\n    self.shouldCoalesceEventChangeDetection = !shouldCoalesceRunChangeDetection && shouldCoalesceEventChangeDetection;\n    self.shouldCoalesceRunChangeDetection = shouldCoalesceRunChangeDetection;\n    self.lastRequestAnimationFrameId = -1;\n    self.nativeRequestAnimationFrame = function (cb) {\n      const nativeDispatchToMainThread = Utils[Zone.__symbol__('dispatchToMainThread')] || Utils.dispatchToMainThread;\n      nativeDispatchToMainThread(cb);\n      return currentRafId++;\n    };\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean {\n    return Zone.current.get('isAngularZone') === true;\n  }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs);\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn);\n  }\n}\n\nconst EMPTY_PAYLOAD = {};\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n  _hasPendingMicrotasks: boolean;\n\n  hasPendingMacrotasks: boolean;\n  hasPendingMicrotasks: boolean;\n  lastRequestAnimationFrameId: number;\n  /**\n   * A flag to indicate if NgZone is currently inside\n   * checkStable and to prevent re-entry. The flag is\n   * needed because it is possible to invoke the change\n   * detection from within change detection leading to\n   * incorrect behavior.\n   *\n   * For detail, please refer here,\n   * https://github.com/angular/angular/pull/40540\n   */\n  isCheckStableRunning: boolean;\n  isStable: boolean;\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can coalesce such kind of events to trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling it in an animation frame. So in the case above,\n   * the change detection will only be trigged once.\n   */\n  shouldCoalesceEventChangeDetection: boolean;\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loops trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  shouldCoalesceRunChangeDetection: boolean;\n\n  nativeRequestAnimationFrame: (callback: FrameRequestCallback) => number;\n\n  // Cache a  \"fake\" top eventTask so you don't need to schedule a new task every\n  // time you run a `checkStable`.\n  fakeTopEventTask: Task;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  // TODO: @JiaLiPassion, should check zone.isCheckStableRunning to prevent\n  // re-entry. The case is:\n  //\n  // @Component({...})\n  // export class AppComponent {\n  // constructor(private ngZone: NgZone) {\n  //   this.ngZone.onStable.subscribe(() => {\n  //     this.ngZone.run(() => console.log('stable'););\n  //   });\n  // }\n  //\n  // The onStable subscriber run another function inside ngZone\n  // which causes `checkStable()` re-entry.\n  // But this fix causes some issues in g3, so this fix will be\n  // launched in another PR.\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction delayChangeDetectionForEvents(zone: NgZonePrivate) {\n  /**\n   * We also need to check _nesting here\n   * Consider the following case with shouldCoalesceRunChangeDetection = true\n   *\n   * ngZone.run(() => {});\n   * ngZone.run(() => {});\n   *\n   * We want the two `ngZone.run()` only trigger one change detection\n   * when shouldCoalesceRunChangeDetection is true.\n   * And because in this case, change detection run in async way(requestAnimationFrame),\n   * so we also need to check the _nesting here to prevent multiple\n   * change detections.\n   */\n  if (zone.isCheckStableRunning || zone.lastRequestAnimationFrameId !== -1) {\n    return;\n  }\n  zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(global, () => {\n    // This is a work around for https://github.com/angular/angular/issues/36839.\n    // The core issue is that when event coalescing is enabled it is possible for microtasks\n    // to get flushed too early (As is the case with `Promise.then`) between the\n    // coalescing eventTasks.\n    //\n    // To workaround this we schedule a \"fake\" eventTask before we process the\n    // coalescing eventTasks. The benefit of this is that the \"fake\" container eventTask\n    //  will prevent the microtasks queue from getting drained in between the coalescing\n    // eventTask execution.\n    if (!zone.fakeTopEventTask) {\n      zone.fakeTopEventTask = Zone.root.scheduleEventTask(\n        'fakeTopEventTask',\n        () => {\n          zone.lastRequestAnimationFrameId = -1;\n          updateMicroTaskStatus(zone);\n          zone.isCheckStableRunning = true;\n          checkStable(zone);\n          zone.isCheckStableRunning = false;\n        },\n        undefined,\n        () => {},\n        () => {}\n      );\n    }\n    zone.fakeTopEventTask.invoke();\n  });\n  updateMicroTaskStatus(zone);\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  const delayChangeDetectionForEventsDelegate = () => {\n    delayChangeDetectionForEvents(zone);\n  };\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{ isAngularZone: true },\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any, applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        if ((zone.shouldCoalesceEventChangeDetection && task.type === 'eventTask') || zone.shouldCoalesceRunChangeDetection || !Utils.isMainThread()) {\n          delayChangeDetectionForEventsDelegate();\n        }\n        onLeave(zone);\n      }\n    },\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function, applyThis: any, applyArgs?: any[], source?: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        if (zone.shouldCoalesceRunChangeDetection || !Utils.isMainThread()) {\n          delayChangeDetectionForEventsDelegate();\n        }\n        onLeave(zone);\n      }\n    },\n\n    onHasTask: (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n      delegate.hasTask(target, hasTaskState);\n      if (current === target) {\n        // We are only interested in hasTask events which originate from our zone\n        // (A child hasTask event is not interesting to us)\n        if (hasTaskState.change == 'microTask') {\n          zone._hasPendingMicrotasks = hasTaskState.microTask;\n          updateMicroTaskStatus(zone);\n          checkStable(zone);\n        } else if (hasTaskState.change == 'macroTask') {\n          zone.hasPendingMacrotasks = hasTaskState.macroTask;\n        }\n      }\n    },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    },\n  });\n}\n\nfunction updateMicroTaskStatus(zone: NgZonePrivate) {\n  if (zone._hasPendingMicrotasks || zone.lastRequestAnimationFrameId !== -1) {\n    zone.hasPendingMicrotasks = true;\n  } else {\n    zone.hasPendingMicrotasks = false;\n  }\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FramePageComponent as ɵi,customFrameComponentFactory as ɵg,customPageFactoryFromFrame as ɵh} from './lib/cdk/frame-page/frame-page.component';\nexport {FramePageModule as ɵa} from './lib/cdk/frame-page/frame-page.module';\nexport {FrameDirective as ɵc,customFrameDirectiveFactory as ɵb} from './lib/cdk/frame-page/frame.directive';\nexport {PageDirective as ɵe,customPageFactory as ɵd} from './lib/cdk/frame-page/page.directive';\nexport {PageService as ɵf} from './lib/cdk/frame-page/page.service';\nexport {ItemContext as ɵk,ListViewComponent as ɵl,TEMPLATED_ITEMS_COMPONENT as ɵj,TemplateKeyDirective as ɵm} from './lib/cdk/list-view/list-view.component';\nexport {ModalDialogService as ɵn} from './lib/legacy/directives/dialogs';\nexport {FrameService as ɵp} from './lib/legacy/frame.service';\nexport {NSLocationStrategy as ɵo} from './lib/legacy/router/ns-location-strategy';"],"names":["isListLikeIterable","INJECTOR_SCOPE","NullViewportScroller","AnimationEngine","AnimationStyleNormalizer","AnimationRendererFactory","WebAnimationsStyleNormalizer","BrowserAnimationBuilder","Observable"],"mappings":"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"}