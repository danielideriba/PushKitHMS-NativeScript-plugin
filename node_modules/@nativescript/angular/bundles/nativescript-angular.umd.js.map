{"version":3,"file":"nativescript-angular.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/lib/views/invisible-nodes.ts","../../src/lib/views/utils.ts","../../src/lib/tokens.ts","../../src/lib/property-filter.ts","../../src/lib/view-refs.ts","../../src/lib/app-host-view.ts","../../src/lib/loading.service.ts","../../src/lib/trace.ts","../../src/lib/application.ts","../../src/lib/platform-ref.ts","../../src/lib/platform-nativescript.ts","../../src/lib/cdk/portal/portal-errors.ts","../../src/lib/cdk/portal/common.ts","../../src/lib/cdk/portal/portal-directives.ts","../../src/lib/element-registry/metas.ts","../../src/lib/element-registry/registry.ts","../../src/lib/element-registry/common-views.ts","../../src/lib/view-util.ts","../../src/lib/cdk/portal/nsdom-portal-outlet.ts","../../src/lib/cdk/detached-loader.ts","../../src/lib/nativescript-xhr-factory.ts","../../src/lib/nativescript-renderer.ts","../../src/lib/cdk/frame-page/page.service.ts","../../src/lib/cdk/frame-page/frame-page.component.ts","../../src/lib/cdk/frame-page/frame.directive.ts","../../src/lib/cdk/frame-page/page.directive.ts","../../src/lib/cdk/frame-page/frame-page.module.ts","../../src/lib/utils/lang-facade.ts","../../src/lib/cdk/action-bar/index.ts","../../src/lib/cdk/list-view/list-view.component.ts","../../src/lib/utils/general.ts","../../src/lib/legacy/frame.service.ts","../../src/lib/legacy/router/ns-location-utils.ts","../../src/lib/legacy/router/ns-location-strategy.ts","../../src/lib/legacy/directives/dialogs.ts","../../src/lib/utils/ng-safe.ts","../../src/lib/cdk/tab-view/index.ts","../../src/lib/cdk/platform-filters/android-filter.component.ts","../../src/lib/cdk/platform-filters/ios-filter.component.ts","../../src/lib/nativescript-common.module.ts","../../src/lib/nativescript.ts","../../src/lib/rootcomposite.module.ts","../../src/lib/cdk/dialog/dialog-config.ts","../../src/lib/cdk/dialog/dialog-ref.ts","../../src/lib/cdk/dialog/native-modal-ref.ts","../../src/lib/cdk/dialog/dialog-services.ts","../../src/lib/cdk/dialog/dialog-content-directives.ts","../../src/lib/cdk/dialog/dialog-module.ts","../../src/lib/file-system/ns-file-system.ts","../../src/lib/detached-loader-utils.ts","../../src/lib/forms/value-accessors/base-value-accessor.ts","../../src/lib/forms/value-accessors/text-value-accessor.ts","../../src/lib/forms/value-accessors/checked-value-accessor.ts","../../src/lib/forms/value-accessors/date-value-accessor.ts","../../src/lib/forms/value-accessors/time-value-accessor.ts","../../src/lib/forms/value-accessors/number-value-accessor.ts","../../src/lib/forms/value-accessors/selectedIndex-value-accessor.ts","../../src/lib/forms/forms.module.ts","../../src/lib/animations/utils.ts","../../src/lib/animations/animation-player.ts","../../src/lib/animations/animation-driver.ts","../../src/lib/animations/animations.module.ts","../../src/lib/http/http-utils.ts","../../src/lib/http/ns-http-backend.ts","../../src/lib/http/http-client.module.ts","../../src/lib/legacy/router/page-router-outlet-utils.ts","../../src/lib/legacy/router/ns-route-reuse-strategy.ts","../../src/lib/legacy/router/router-extensions.ts","../../src/lib/legacy/router/ns-router-link.ts","../../src/lib/legacy/router/private-imports/router-url-tree.ts","../../src/lib/legacy/router/ns-router-link-active.ts","../../src/lib/legacy/router/page-router-outlet.ts","../../src/lib/legacy/router/ns-platform-location.ts","../../src/lib/legacy/router/ns-empty-outlet.component.ts","../../src/lib/legacy/router/router.module.ts","../../src/lib/nativescript-ng-zone.ts","../../src/nativescript-angular.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { View } from '@nativescript/core';\nimport { NgView } from './view-types';\n\nconst getClassName = (instance) => instance.constructor.name;\n\nexport abstract class InvisibleNode extends View implements NgView {\n  meta: { skipAddToDom: boolean };\n  nodeType: number;\n  nodeName: string;\n  parentNode: NgView;\n  nextSibling: NgView;\n  previousSibling: NgView;\n  firstChild: NgView;\n  lastChild: NgView;\n  ngCssClasses: Map<string, boolean>;\n\n  constructor(protected name: string = '') {\n    super();\n\n    this.nodeType = 1;\n    this.nodeName = getClassName(this);\n  }\n\n  toString() {\n    return `${this.nodeName}(${this.id})-${this.name}`;\n  }\n}\n\nexport class CommentNode extends InvisibleNode {\n  protected static id = 0;\n\n  constructor(value?: string) {\n    super(value);\n\n    this.meta = {\n      skipAddToDom: true,\n    };\n    this.id = CommentNode.id.toString();\n    CommentNode.id += 1;\n  }\n}\n\nexport class TextNode extends InvisibleNode {\n  protected static id = 0;\n\n  constructor(value?: string) {\n    super(value);\n\n    this.meta = {\n      skipAddToDom: true,\n    };\n    this.id = TextNode.id.toString();\n    TextNode.id += 1;\n  }\n}\n","import { ContentView, LayoutBase, ProxyViewContainer, View } from '@nativescript/core';\nimport { InvisibleNode } from './invisible-nodes';\nimport type { NgContentView, NgLayoutBase, NgView } from './view-types';\n\nexport function isDetachedElement(element: View | NgView): boolean {\n  return element && (<NgView>element).meta && (<NgView>element).meta.skipAddToDom;\n}\n\nexport function isView(view: unknown): view is NgView {\n  return view instanceof View;\n}\n\nexport function isInvisibleNode(view: unknown): view is InvisibleNode {\n  return view instanceof InvisibleNode;\n}\n\nexport function isLayout(view: unknown): view is NgLayoutBase {\n  return view instanceof LayoutBase;\n}\n\nexport function isContentView(view: unknown): view is NgContentView {\n  return view instanceof ContentView;\n}\n\nexport function getFirstNativeLikeView(view: View, extractFromNSParent = false) {\n  if (view instanceof ProxyViewContainer) {\n    if (view.getChildrenCount() === 0) {\n      return null;\n    }\n    return getFirstNativeLikeView(view.getChildAt(0));\n  }\n\n  if (extractFromNSParent) {\n    // const node = view.parentNode;\n    detachViewFromParent(view);\n    // view.parentNode = node;\n  }\n  return view;\n}\n\nexport function detachViewFromParent(view: View) {\n  const parent = <NgView>view?.parent;\n  if (!parent) {\n    return;\n  }\n  if (parent.meta && parent.meta.removeChild) {\n    parent.meta.removeChild(parent, view);\n  } else if (isLayout(parent)) {\n    parent.removeChild(view);\n  } else if (isContentView(parent) && parent.content === view) {\n    parent.content = null;\n  } else if (isView(parent)) {\n    parent._removeView(view);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { IDevice, Page, View } from '@nativescript/core';\n\nexport const APP_ROOT_VIEW = new InjectionToken<View>('NativeScriptAppRootView');\nexport const NATIVESCRIPT_ROOT_MODULE_ID = new InjectionToken<string | number>('NativeScriptRootModuleId');\n\nexport const START_PATH = new InjectionToken<Promise<string> | string>('NativeScriptStartPath');\nexport const ENABLE_REUSABE_VIEWS = new InjectionToken<boolean>('NativeScriptEnableReusableViews');\n\nexport type PageFactory = (options: PageFactoryOptions) => Page;\nexport interface PageFactoryOptions {\n  isBootstrap?: boolean;\n  isLivesync?: boolean;\n  isModal?: boolean;\n  isNavigation?: boolean;\n  componentType?: any;\n}\n\nexport const DISABLE_ROOT_VIEW_HANDLING = new InjectionToken<boolean>('NativeScriptDisableRootViewHandling');\nexport const DEVICE = new InjectionToken<IDevice>('NativeScriptDevice');\nexport const PAGE_FACTORY = new InjectionToken<PageFactory>('NativeScriptPageFactory');\nexport const defaultPageFactory: PageFactory = function (_opts: PageFactoryOptions) {\n  return new Page();\n};\n","import { Inject, InjectionToken } from '@angular/core';\nimport { DEVICE } from './tokens';\nimport { Device, platformNames } from '@nativescript/core';\n\nexport interface NamespaceFilter {\n  runsIn(namespace: string, next: (namespace: string) => boolean | undefined): boolean | undefined;\n}\n\nexport class PlatformNamespaceFilter implements NamespaceFilter {\n  constructor(@Inject(DEVICE) private device: typeof Device) {}\n  runsIn(namespace: string, next: (namespace: string) => boolean | undefined): boolean | undefined {\n    if (namespace === 'android') {\n      return this.device.os === platformNames.android;\n    }\n    if (namespace === 'ios') {\n      return this.device.os === platformNames.ios;\n    }\n    return next(namespace);\n  }\n}\n\nexport const NAMESPACE_FILTERS = new InjectionToken<NamespaceFilter[]>('NativeScriptNamespaceFilter');\n","import { ComponentRef, EmbeddedViewRef } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { detachViewFromParent, getFirstNativeLikeView, InvisibleNode } from './views';\n\nexport interface NgViewRef<T> {\n  view: View;\n  ref: EmbeddedViewRef<T> | ComponentRef<T>;\n  firstNativeLikeView: View;\n}\n\nexport interface NgViewTemplate<T> {\n  create(context?: T): View;\n  update(view: View, context?: T): void;\n  attach(view: View): void;\n  detach(view: View): void;\n  dispose(view: View): void;\n}\n\nexport class NgViewRef<T> implements NgViewRef<T> {\n  /**\n   * Component's view instance or first valid template view\n   */\n  view: View;\n  ref: EmbeddedViewRef<T> | ComponentRef<T>;\n  /**\n   * First valid view that isn't strictly logical (ContentView, ProxyViewContainer, ...)\n   * This view *very* likely has a nativeView associated to it.\n   */\n  firstNativeLikeView: View;\n\n  constructor(ref: EmbeddedViewRef<T> | ComponentRef<T>) {\n    this.ref = ref;\n    this.view = ref instanceof ComponentRef ? ref.location.nativeElement : ref.rootNodes.find((v) => !(v instanceof InvisibleNode));\n    this.firstNativeLikeView = getFirstNativeLikeView(this.view);\n  }\n\n  detachNativeLikeView() {\n    detachViewFromParent(this.firstNativeLikeView);\n  }\n}\n","import { ContentView, View, ProxyViewContainer, GridLayout, Color, Application } from '@nativescript/core';\n\nexport class AppHostView extends ContentView {\n\tprivate _ngAppRoot: View;\n\tprivate _content: View;\n\tprivate timeout: any = -1;\n\n\tconstructor(backgroundColor: Color) {\n\t\tsuper();\n\t\tthis.backgroundColor = backgroundColor;\n\t}\n\n\tget ngAppRoot(): View {\n\t\treturn this._ngAppRoot;\n\t}\n\n\tset ngAppRoot(value: View) {\n\t\tthis._ngAppRoot = value;\n    }\n    //@ts-ignore\n\tget content(): View {\n\t\treturn this._content;\n\t}\n\n\tset content(value: View) {\n\t\tif (this._content) {\n\t\t\tthis._content.parentNode = undefined;\n\t\t}\n\n\t\tthis._content = value;\n\n\t\tif (value) {\n\t\t\tthis._content.parentNode = this;\n\t\t}\n\n\t\tthis.ngAppRoot = value;\n\n\t\tif (this._content instanceof ProxyViewContainer) {\n\t\t\tconst grid = new GridLayout();\n\t\t\tgrid.backgroundColor = this.backgroundColor;\n\t\t\tgrid.addChild(this._content);\n\t\t\tthis.ngAppRoot = grid;\n\t\t}\n\t\tif(this.ngAppRoot) {\n\t\t\t// maybe use this approach\n\t\t\t// this.scheduleRootChange();\n\t\t}\n\t}\n\n\tscheduleRootChange() {\n\t\tif(this.timeout === -1) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t//console.log(this.ngAppRoot);\n\t\t\t\tApplication.resetRootView({\n\t\t\t\t\tcreate: () => this.content\n\t\t\t\t});\n\t\t\t\tthis.timeout = -1;\n\t\t\t}, 0);\n\t\t}\n\t}\n}\n\nexport class AppHostAsyncView extends GridLayout {\n\tconstructor(backgroundColor: Color) {\n\t\tsuper();\n\t\tthis.backgroundColor = backgroundColor;\n\t}\n\n\tget ngAppRoot(): View {\n\t\treturn this;\n\t}\n\n\tset ngAppRoot(value: View) {\n\t\t// ignored\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class NativeScriptLoadingService implements OnDestroy {\n  private mainModuleReady$ = new BehaviorSubject(false);\n  readyToDestroy$ = new BehaviorSubject(true);\n  onMainModuleReady$ = this.mainModuleReady$.pipe(filter((ready) => ready));\n\n  /**\n   * delays destroying this module until `notifyReadyToDestroy()`.\n   * remember to call `notifyReadyToDestroy()` when done!\n   */\n  waitUntilNotified() {\n    this.readyToDestroy$.next(false);\n  }\n\n  /**\n   * notifies this module is ready to be destroyed\n   */\n  notifyReadyToDestroy() {\n    this.readyToDestroy$.next(true);\n  }\n  isMainModuleReady() {\n    return this.mainModuleReady$.value;\n  }\n  ngOnDestroy() {\n    this.readyToDestroy$.complete();\n    this.mainModuleReady$.complete();\n  }\n\n  /**\n   * This funcion is called by the bootstrap code when the app is ready\n   * @internal\n   */\n  _notifyMainModuleReady() {\n    this.mainModuleReady$.next(true);\n  }\n}\n","import { Trace } from '@nativescript/core';\n\nexport class NativeScriptDebug {\n  static readonly animationsTraceCategory = 'ns-animations';\n  static readonly rendererTraceCategory = 'ns-renderer';\n  static readonly viewUtilCategory = 'ns-view-util';\n  static readonly routerTraceCategory = 'ns-router';\n  static readonly routeReuseStrategyTraceCategory = 'ns-route-reuse-strategy';\n  static readonly listViewTraceCategory = 'ns-list-view';\n  static readonly bootstrapCategory = 'bootstrap';\n  // TODO: migrate all usage to this - avoids extraneous method executions\n  static readonly enabled = Trace.isEnabled();\n\n  static isLogEnabled() {\n    return Trace.isEnabled();\n  }\n\n  static animationsLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.animationsTraceCategory);\n  }\n\n  static rendererLog(msg): void {\n    Trace.write(msg, NativeScriptDebug.rendererTraceCategory);\n  }\n\n  static rendererError(message: string): void {\n    Trace.write(message, NativeScriptDebug.rendererTraceCategory, Trace.messageType.error);\n  }\n\n  static viewUtilLog(msg): void {\n    Trace.write(msg, NativeScriptDebug.viewUtilCategory);\n  }\n\n  static routerLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.routerTraceCategory);\n  }\n\n  static routerError(message: string): void {\n    Trace.write(message, NativeScriptDebug.routerTraceCategory, Trace.messageType.error);\n  }\n\n  static routeReuseStrategyLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.routeReuseStrategyTraceCategory);\n  }\n\n  static styleError(message: string): void {\n    Trace.write(message, Trace.categories.Style, Trace.messageType.error);\n  }\n\n  static listViewLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.listViewTraceCategory);\n  }\n\n  static listViewError(message: string): void {\n    Trace.write(message, NativeScriptDebug.listViewTraceCategory, Trace.messageType.error);\n  }\n\n  static bootstrapLog(message: string): void {\n    Trace.write(message, NativeScriptDebug.bootstrapCategory);\n  }\n\n  static bootstrapLogError(message: string): void {\n    Trace.write(message, NativeScriptDebug.bootstrapCategory, Trace.messageType.error);\n  }\n}\n","import { NgModuleRef, NgZone, PlatformRef } from '@angular/core';\nimport { filter, map, take } from 'rxjs/operators';\nimport { Application, ApplicationEventData, Color, LaunchEventData, LayoutBase, profile, removeTaggedAdditionalCSS, StackLayout, TextView, View, Utils, Trace } from '@nativescript/core';\nimport { AppHostView } from './app-host-view';\nimport { NativeScriptLoadingService } from './loading.service';\nimport { APP_ROOT_VIEW, DISABLE_ROOT_VIEW_HANDLING, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { Observable, Subject } from 'rxjs';\nimport { NativeScriptDebug } from './trace';\n\nexport interface AppLaunchView extends LayoutBase {\n  // called when the animation is to begin\n  startAnimation?: () => void;\n  // called when bootstrap is complete and cleanup can begin\n  // should resolve when animation is completely finished\n  cleanup?: () => Promise<any>;\n\n  // do you want to handle setting this as a rootview manually?\n  __disable_root_view_handling?: boolean;\n}\n\nexport function disableRootViewHanding(view: AppLaunchView) {\n  view.__disable_root_view_handling = true;\n}\n\nexport type NgModuleReason = 'hotreload' | 'applaunch' | 'appexit';\n\nexport type NgModuleEvent =\n  | {\n      moduleType: 'main' | 'loading' | string;\n      reference: NgModuleRef<unknown>;\n      reason: NgModuleReason | string;\n    }\n  | {\n      moduleType: 'platform';\n      reference: PlatformRef;\n      reason: NgModuleReason | string;\n    };\n\nexport const preAngularDisposal$ = new Subject<NgModuleEvent>();\nexport const postAngularBootstrap$ = new Subject<NgModuleEvent>();\n\n/**\n * @deprecated\n */\nexport const onBeforeLivesync: Observable<NgModuleRef<any>> = preAngularDisposal$.pipe(\n  filter((v) => v.moduleType === 'main' && v.reason === 'hotreload'),\n  map((v) => v.reference as NgModuleRef<any>)\n);\n/**\n * @deprecated\n */\nexport const onAfterLivesync: Observable<{\n  moduleRef?: NgModuleRef<any>;\n  error?: Error;\n}> = postAngularBootstrap$.pipe(\n  filter((v) => v.moduleType === 'main'),\n  map((v) => ({ moduleRef: v.reference as NgModuleRef<any> }))\n);\nexport interface AppRunOptions<T, K> {\n  appModuleBootstrap: (reason: NgModuleReason) => Promise<NgModuleRef<T>>;\n  loadingModule?: (reason: NgModuleReason) => Promise<NgModuleRef<K>>;\n  launchView?: (reason: NgModuleReason) => AppLaunchView;\n}\n\nif (module['hot']) {\n  module['hot'].decline();\n  global.__onLiveSyncCore = () => {\n    Application.getRootView()?._onCssStateChange();\n    // all other changes are applied by runNativeScriptAngularApp\n  };\n}\n\nfunction emitModuleBootstrapEvent<T>(ref: NgModuleRef<T>, name: 'main' | 'loading', reason: NgModuleReason) {\n  postAngularBootstrap$.next({\n    moduleType: name,\n    reference: ref,\n    reason,\n  });\n}\n\nfunction destroyRef<T>(ref: NgModuleRef<T>, name: 'main' | 'loading', reason: NgModuleReason): void;\nfunction destroyRef(ref: PlatformRef, reason: NgModuleReason): void;\nfunction destroyRef<T>(ref: PlatformRef | NgModuleRef<T>, name?: string, reason?: string): void {\n  if (ref) {\n    if (ref instanceof PlatformRef) {\n      preAngularDisposal$.next({\n        moduleType: 'platform',\n        reference: ref,\n        reason: name,\n      });\n    }\n    if (ref instanceof NgModuleRef) {\n      preAngularDisposal$.next({\n        moduleType: name,\n        reference: ref,\n        reason,\n      });\n    }\n    ref.destroy();\n  }\n}\n\nexport function runNativeScriptAngularApp<T, K>(options: AppRunOptions<T, K>) {\n  let mainModuleRef: NgModuleRef<T> = null;\n  let loadingModuleRef: NgModuleRef<K>;\n  let platformRef: PlatformRef = null;\n  let bootstrapId = -1;\n  const updatePlatformRef = (moduleRef: NgModuleRef<T | K>, reason: NgModuleReason) => {\n    const newPlatformRef = moduleRef.injector.get(PlatformRef);\n    if (newPlatformRef === platformRef) {\n      return;\n    }\n    destroyRef(platformRef, reason);\n    platformRef = newPlatformRef;\n    platformRef.onDestroy(() => (platformRef = platformRef === newPlatformRef ? null : platformRef));\n  };\n  const setRootView = (ref: NgModuleRef<T | K> | View) => {\n    if (bootstrapId === -1) {\n      // treat edge cases\n      return;\n    }\n    if (ref instanceof NgModuleRef) {\n      if (ref.injector.get(DISABLE_ROOT_VIEW_HANDLING, false)) {\n        return;\n      }\n    } else {\n      if (ref['__disable_root_view_handling']) {\n        return;\n      }\n    }\n    Application.getRootView()?._closeAllModalViewsInternal(); // cleanup old rootview\n    // TODO: check for leaks when root view isn't properly destroyed\n    if (ref instanceof View) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.bootstrapLog(`Setting RootView to ${ref}`);\n      }\n      Application.resetRootView({\n        create: () => ref,\n      });\n      return;\n    }\n    const view = ref.injector.get(APP_ROOT_VIEW) as AppHostView | View;\n    const newRoot = view instanceof AppHostView ? view.content : view;\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.bootstrapLog(`Setting RootView to ${newRoot}`);\n    }\n    Application.resetRootView({\n      create: () => newRoot,\n    });\n  };\n  const showErrorUI = (error: Error) => {\n    const message = error.message + '\\n\\n' + error.stack;\n    const errorTextBox = new TextView();\n    errorTextBox.text = message;\n    errorTextBox.color = new Color('red');\n    setRootView(errorTextBox);\n  };\n  const bootstrapRoot = (reason: NgModuleReason) => {\n    bootstrapId = Date.now();\n    const currentBootstrapId = bootstrapId;\n    let bootstrapped = false;\n    let onMainBootstrap = () => {\n      setRootView(mainModuleRef);\n    };\n    options.appModuleBootstrap(reason).then(\n      (ref) => {\n        if (currentBootstrapId !== bootstrapId) {\n          // this module is old and not needed anymore\n          // this may happen when developer uses async app initializer and the user exits the app before this bootstraps\n          ref.destroy();\n          return;\n        }\n        mainModuleRef = ref;\n        ref.onDestroy(() => (mainModuleRef = mainModuleRef === ref ? null : mainModuleRef));\n        updatePlatformRef(ref, reason);\n        const styleTag = ref.injector.get(NATIVESCRIPT_ROOT_MODULE_ID);\n        ref.onDestroy(() => {\n          removeTaggedAdditionalCSS(styleTag);\n        });\n        bootstrapped = true;\n        // delay bootstrap callback until all rendering is good to go\n        Utils.queueMacrotask(() => onMainBootstrap());\n        // onMainBootstrap();\n        emitModuleBootstrapEvent(ref, 'main', reason);\n        // bootstrapped component: (ref as any)._bootstrapComponents[0];\n      },\n      (err) => {\n        bootstrapped = true;\n        NativeScriptDebug.bootstrapLogError(`Error bootstrapping app module:\\n${err.message}\\n\\n${err.stack}`);\n        showErrorUI(err);\n        throw err;\n      }\n    );\n    Utils.queueMacrotask(() => {\n      if (currentBootstrapId !== bootstrapId) {\n        return;\n      }\n      if (!bootstrapped) {\n        if (options.loadingModule) {\n          options.loadingModule(reason).then(\n            (loadingRef) => {\n              if (currentBootstrapId !== bootstrapId) {\n                // this module is old and not needed anymore\n                // this may happen when developer uses async app initializer and the user exits the app before this bootstraps\n                loadingRef.destroy();\n                return;\n              }\n              loadingModuleRef = loadingRef;\n              loadingModuleRef.onDestroy(() => (loadingModuleRef = loadingModuleRef === loadingRef ? null : loadingModuleRef));\n              updatePlatformRef(loadingRef, reason);\n              const styleTag = loadingModuleRef.injector.get(NATIVESCRIPT_ROOT_MODULE_ID);\n              loadingRef.onDestroy(() => {\n                removeTaggedAdditionalCSS(styleTag);\n              });\n              setRootView(loadingRef);\n              onMainBootstrap = () => {\n                const loadingService = loadingModuleRef.injector.get(NativeScriptLoadingService);\n                loadingModuleRef.injector.get(NgZone).run(() => {\n                  loadingService._notifyMainModuleReady();\n                });\n                loadingService.readyToDestroy$\n                  .pipe(\n                    filter((ready) => ready),\n                    take(1)\n                  )\n                  .subscribe(() => {\n                    destroyRef(loadingModuleRef, 'loading', reason);\n                    loadingModuleRef = null;\n                    setRootView(mainModuleRef);\n                  });\n              };\n              emitModuleBootstrapEvent(loadingModuleRef, 'loading', reason);\n            },\n            (err) => {\n              NativeScriptDebug.bootstrapLogError(`Error bootstrapping loading module:\\n${err.message}\\n\\n${err.stack}`);\n              showErrorUI(err);\n              throw err;\n            }\n          );\n        } else if (options.launchView) {\n          let launchView = options.launchView(reason);\n          setRootView(launchView);\n          if (launchView.startAnimation) {\n            setTimeout(() => {\n              // ensure launch animation is executed after launchView added to view stack\n              launchView.startAnimation();\n            });\n          }\n          onMainBootstrap = () => {\n            if (launchView.cleanup) {\n              launchView\n                .cleanup()\n                .catch()\n                .then(() => {\n                  launchView = null;\n                  setRootView(mainModuleRef);\n                });\n            }\n          };\n        } else {\n          console.warn('App is bootstrapping asynchronously (likely APP_INITIALIZER) but did not provide a launchView or LoadingModule.');\n        }\n      }\n    });\n  };\n  const disposePlatform = (reason: NgModuleReason) => {\n    destroyRef(platformRef, reason);\n    platformRef = null;\n  };\n  const disposeLastModules = (reason: NgModuleReason) => {\n    // reset bootstrap ID to make sure any modules bootstrapped after this are discarded\n    bootstrapId = -1;\n    destroyRef(loadingModuleRef, 'loading', reason);\n    loadingModuleRef = null;\n    destroyRef(mainModuleRef, 'main', reason);\n    mainModuleRef = null;\n  };\n  const launchCallback = profile('@nativescript/angular/platform-common.launchCallback', (args: LaunchEventData) => {\n    args.root = null;\n    bootstrapRoot('applaunch');\n  });\n  const exitCallback = profile('@nativescript/angular/platform-common.exitCallback', (args: ApplicationEventData) => {\n    disposeLastModules('appexit');\n  });\n\n  Application.on(Application.launchEvent, launchCallback);\n  Application.on(Application.exitEvent, exitCallback);\n  if (module['hot']) {\n    // handle HMR Application.run\n    global['__dispose_app_ng_platform__'] = () => {\n      disposePlatform('hotreload');\n    };\n    global['__dispose_app_ng_modules__'] = () => {\n      disposeLastModules('hotreload');\n    };\n    global['__bootstrap_app_ng_modules__'] = () => {\n      bootstrapRoot('hotreload');\n    };\n    global['__cleanup_ng_hot__'] = () => {\n      Application.off(Application.launchEvent, launchCallback);\n      Application.off(Application.exitEvent, exitCallback);\n      disposeLastModules('hotreload');\n      disposePlatform('hotreload');\n    };\n    global['__reboot_ng_modules__'] = (shouldDisposePlatform: boolean = false) => {\n      disposeLastModules('hotreload');\n      if (shouldDisposePlatform) {\n        disposePlatform('hotreload');\n      }\n      bootstrapRoot('hotreload');\n    };\n\n    if (!Application.hasLaunched()) {\n      Application.run();\n      return;\n    }\n    bootstrapRoot('hotreload');\n    return;\n  }\n\n  Application.run();\n}\n","import { CompilerOptions, Injector, NgModuleRef, NgZone, PlatformRef, Type } from '@angular/core';\nimport { ɵNgModuleFactory as NgModuleFactory } from '@angular/core';\nimport { AppLaunchView, AppRunOptions, runNativeScriptAngularApp } from './application';\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone | 'zone.js' | 'noop';\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can colesce such kind of events to only trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling a animation frame. So in the case above,\n   * the change detection will only be triggered once.\n   */\n  ngZoneEventCoalescing?: boolean;\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loop trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  ngZoneRunCoalescing?: boolean;\n}\n\nexport class NativeScriptPlatformRefProxy extends PlatformRef {\n  options: AppRunOptions<any, any>;\n  constructor(private platform: PlatformRef, private launchView?: AppLaunchView) {\n    super();\n  }\n\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    this.options = {\n      appModuleBootstrap: () => this.platform.bootstrapModuleFactory(moduleFactory),\n      launchView: () => this.launchView,\n    };\n\n    runNativeScriptAngularApp(this.options);\n\n    return null;\n  }\n  bootstrapModule<M>(moduleType: Type<M>, compilerOptions?: (CompilerOptions & BootstrapOptions) | Array<CompilerOptions & BootstrapOptions>): Promise<NgModuleRef<M>> {\n    this.options = {\n      appModuleBootstrap: () => this.platform.bootstrapModule(moduleType, compilerOptions),\n    };\n\n    runNativeScriptAngularApp(this.options);\n\n    return null;\n  }\n\n  onDestroy(callback: () => void): void {\n    this.platform.onDestroy(callback);\n  }\n\n  get injector(): Injector {\n    return this.platform.injector;\n  }\n\n  destroy(): void {\n    this.platform.destroy();\n  }\n\n  get destroyed(): boolean {\n    return this.platform.destroyed;\n  }\n}\n","import { Type, Injector, CompilerOptions, PlatformRef, NgModuleFactory, NgModuleRef, EventEmitter, Sanitizer, InjectionToken, StaticProvider, createPlatformFactory, platformCore } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NativeScriptPlatformRefProxy } from './platform-ref';\nimport { AppHostView } from './app-host-view';\nimport { Color, GridLayout } from '@nativescript/core';\nimport { defaultPageFactory, PAGE_FACTORY } from './tokens';\nimport { AppLaunchView } from './application';\n\nexport const defaultPageFactoryProvider = { provide: PAGE_FACTORY, useValue: defaultPageFactory };\nexport class NativeScriptSanitizer extends Sanitizer {\n  sanitize(_context: any, value: string): string {\n    return value;\n  }\n}\n// TODO: when angular finally exports their scheduler token for ivy CD, provide our own with queueMacroTask\n// export function schedulerFactory() {\n//   return (fn: any) => {\n//     console.log('SCHEDULER');\n//     setTimeout(fn, 0);\n//   };\n// }\n\nexport class NativeScriptDocument {\n  // Required by the AnimationDriver\n  public body: any = {\n    isOverride: true,\n  };\n\n  createElement(tag: string) {\n    throw new Error('NativeScriptDocument is not DOM Document. There is no createElement() method.');\n  }\n}\n\nexport const COMMON_PROVIDERS = [defaultPageFactoryProvider, { provide: Sanitizer, useClass: NativeScriptSanitizer, deps: [] }, { provide: DOCUMENT, useClass: NativeScriptDocument, deps: [] }];\n\nexport const platformNativeScript = createPlatformFactory(platformCore, 'nativescriptDynamic', COMMON_PROVIDERS);\n\nexport interface HmrOptions {\n  /**\n   * A factory function that returns either Module type or NgModuleFactory type.\n   * This needs to be a factory function as the types will change when modules are replaced.\n   */\n  moduleTypeFactory?: () => Type<any> | NgModuleFactory<any>;\n\n  /**\n   * A livesync callback that will be called instead of the original livesync.\n   * It gives the HMR a hook to apply the module replacement.\n   * @param bootstrapPlatform - A bootstrap callback to be called after HMR is done. It will bootstrap a new angular app within the exisiting platform, using the moduleTypeFactory to get the Module or NgModuleFactory to be used.\n   */\n  livesyncCallback: (bootstrapPlatform: () => void) => void;\n}\n\nexport interface AppOptions {\n  cssFile?: string;\n  startPageActionBarHidden?: boolean;\n  hmrOptions?: HmrOptions;\n  /**\n   * Background color of the root view\n   */\n  backgroundColor?: string;\n  /**\n   * Use animated launch view (async by default)\n   */\n  launchView?: AppLaunchView;\n  /**\n   * When using Async APP_INITIALIZER, set this to `true`.\n   * (Not needed when using launchView)\n   */\n  async?: boolean;\n}\n\n/**\n * @deprecated use runNativeScriptAngularApp instead\n */\nexport const platformNativeScriptDynamic = function (options?: AppOptions, extraProviders?: StaticProvider[]) {\n  console.log('platformNativeScriptDynamic is deprecated, use runNativeScriptAngularApp instead');\n  options = options || {};\n  extraProviders = extraProviders || [];\n\n  const ngRootView = new AppHostView(new Color(options.backgroundColor || 'white'));\n  let launchView = options.launchView;\n  if (!launchView && options.async) {\n    launchView = new GridLayout();\n    launchView.backgroundColor = options.backgroundColor || 'white';\n  }\n  return new NativeScriptPlatformRefProxy(platformNativeScript([...extraProviders]), launchView);\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nexport function throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nexport function throwPortalOutletAlreadyDisposedError() {\n  throw Error('This PortalOutlet has already been disposed');\n}\n\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nexport function throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' + 'a ComponentPortal or a TemplatePortal.');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nexport function throwNullPortalOutletError() {\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nexport function throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { TemplateRef, ViewContainerRef, ElementRef, ComponentRef, EmbeddedViewRef, Injector, ComponentFactoryResolver } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { throwNullPortalOutletError, throwPortalAlreadyAttachedError, throwNoPortalAttachedError, throwNullPortalError, throwPortalOutletAlreadyDisposedError, throwUnknownPortalTypeError } from './portal-errors';\nimport type { ComponentType } from '../../utils/general';\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nexport abstract class Portal<T> {\n  private _attachedHost: PortalOutlet | null;\n\n  /** Attach this portal to a host. */\n  attach(host: PortalOutlet): T {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (host == null) {\n        throwNullPortalOutletError();\n      }\n\n      if (host.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n    }\n\n    this._attachedHost = host;\n    return <T>host.attach(this);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    let host = this._attachedHost;\n\n    if (host != null) {\n      this._attachedHost = null;\n      host.detach();\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwNoPortalAttachedError();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host: PortalOutlet | null) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalOutlet.\n   * The origin is necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef?: ViewContainerRef | null;\n\n  /** [Optional] Injector used for the instantiation of the component. */\n  injector?: Injector | null;\n\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * Defaults to using the resolver from the outlet that the portal is attached to.\n   */\n  componentFactoryResolver?: ComponentFactoryResolver | null;\n\n  constructor(component: ComponentType<T>, viewContainerRef?: ViewContainerRef | null, injector?: Injector | null, componentFactoryResolver?: ComponentFactoryResolver | null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.componentFactoryResolver = componentFactoryResolver;\n  }\n}\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal<C = any> extends Portal<EmbeddedViewRef<C>> {\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef: TemplateRef<C>;\n\n  /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef: ViewContainerRef;\n\n  /** Contextual data to be passed in to the embedded view. */\n  context: C | undefined;\n\n  constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n    this.context = context;\n  }\n\n  get origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n\n  /**\n   * Attach the portal to the provided `PortalOutlet`.\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\n   * instance.\n   */\n  attach(host: PortalOutlet, context: C | undefined = this.context): EmbeddedViewRef<C> {\n    this.context = context;\n    return super.attach(host);\n  }\n\n  detach(): void {\n    this.context = undefined;\n    return super.detach();\n  }\n}\n\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nexport class DomPortal<T = View> extends Portal<T> {\n  /** DOM node hosting the portal's content. */\n  readonly element: T;\n\n  constructor(element: T | ElementRef<T>) {\n    super();\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n\n/** A `PortalOutlet` is an space that can contain a single `Portal`. */\nexport interface PortalOutlet {\n  /** Attaches a portal to this outlet. */\n  attach(portal: Portal<any>): any;\n\n  /** Detaches the currently attached portal from this outlet. */\n  detach(): any;\n\n  /** Performs cleanup before the outlet is destroyed. */\n  dispose(): void;\n\n  /** Whether there is currently a portal attached to this outlet. */\n  hasAttached(): boolean;\n}\n\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nexport abstract class BasePortalOutlet implements PortalOutlet {\n  /** The portal currently attached to the host. */\n  protected _attachedPortal: Portal<any> | null;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn: (() => void) | null;\n\n  /** Whether this host has already been permanently disposed. */\n  private _isDisposed: boolean = false;\n\n  /** Whether this host has an attached portal. */\n  hasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /** Attaches a portal. */\n  attach(portal: Portal<any>): any {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!portal) {\n        throwNullPortalError();\n      }\n\n      if (this.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n\n      if (this._isDisposed) {\n        throwPortalOutletAlreadyDisposedError();\n      }\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n      // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n    } else if (this.attachDomPortal && portal instanceof DomPortal) {\n      this._attachedPortal = portal;\n      return this.attachDomPortal(portal);\n    }\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwUnknownPortalTypeError();\n    }\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n\n  abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n\n  // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n  readonly attachDomPortal: null | ((portal: DomPortal) => any) = null;\n\n  /** Detaches a previously attached portal. */\n  detach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n\n  /** Permanently dispose of this portal host. */\n  dispose(): void {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n\n  /** @docs-private */\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n\n  private _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ComponentFactoryResolver, ComponentRef, Directive, EmbeddedViewRef, EventEmitter, NgModule, OnDestroy, OnInit, Output, TemplateRef, ViewContainerRef, Inject, Renderer2 } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { DOCUMENT } from '@angular/common';\nimport { BasePortalOutlet, ComponentPortal, Portal, TemplatePortal, DomPortal } from './common';\nimport { CommentNode } from '../../views/invisible-nodes';\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\n@Directive({\n  selector: '[cdkPortal]',\n  exportAs: 'cdkPortal',\n})\nexport class CdkPortal extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n/**\n * Possible attached references to the CdkPortalOutlet.\n */\nexport type CdkPortalOutletAttachedRef = ComponentRef<any> | EmbeddedViewRef<any> | null;\n\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\n@Directive({\n  selector: '[cdkPortalOutlet]',\n  exportAs: 'cdkPortalOutlet',\n  inputs: ['portal: cdkPortalOutlet'],\n})\nexport class CdkPortalOutlet extends BasePortalOutlet implements OnInit, OnDestroy {\n  /** Whether the portal component is initialized. */\n  private _isInitialized = false;\n\n  /** Reference to the currently-attached component/view ref. */\n  private _attachedRef: CdkPortalOutletAttachedRef;\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver, private _viewContainerRef: ViewContainerRef, private renderer: Renderer2) {\n    super();\n  }\n\n  /** Portal associated with the Portal outlet. */\n  get portal(): Portal<any> | null {\n    return this._attachedPortal;\n  }\n\n  set portal(portal: Portal<any> | null) {\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\n    if (this.hasAttached() && !portal && !this._isInitialized) {\n      return;\n    }\n\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._attachedPortal = portal;\n  }\n\n  /** Emits when a portal is attached to the outlet. */\n  @Output() attached: EventEmitter<CdkPortalOutletAttachedRef> = new EventEmitter<CdkPortalOutletAttachedRef>();\n\n  /** Component or view reference that is attached to the portal. */\n  get attachedRef(): CdkPortalOutletAttachedRef {\n    return this._attachedRef;\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    super.dispose();\n    this._attachedPortal = null;\n    this._attachedRef = null;\n  }\n\n  /**\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal outlet.\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalOutlet.\n    const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory<T>(portal.component);\n    const ref = viewContainerRef.createComponent<T>(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n\n    // If we're using a view container that's different from the injected one (e.g. when the portal\n    // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n    // inside of the alternate view container.\n    if (viewContainerRef !== this._viewContainerRef) {\n      this.renderer.appendChild(this._getRootNode(), (ref.hostView as EmbeddedViewRef<any>).rootNodes[0]);\n    }\n\n    super.setDisposeFn(() => ref.destroy());\n    this._attachedPortal = portal;\n    this._attachedRef = ref;\n    this.attached.emit(ref);\n\n    return ref;\n  }\n\n  /**\n   * Attach the given TemplatePortal to this PortalHost as an embedded View.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    portal.setAttachedHost(this);\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._attachedPortal = portal;\n    this._attachedRef = viewRef;\n    this.attached.emit(viewRef);\n\n    return viewRef;\n  }\n\n  /**\n   * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode: CommentNode = this.renderer.createComment('dom-portal');\n\n    portal.setAttachedHost(this);\n    this.renderer.insertBefore(element.parentNode, anchorNode, element);\n    this.renderer.appendChild(this._getRootNode(), element);\n\n    super.setDisposeFn(() => {\n      if (anchorNode.parentNode) {\n        this.renderer.insertBefore(anchorNode.parentNode, element, anchorNode);\n        this.renderer.removeChild(anchorNode.parentNode, anchorNode);\n        // anchorNode.parentNode!.replaceChild(element, anchorNode);\n      }\n    });\n  };\n\n  /** Gets the root node of the portal outlet. */\n  private _getRootNode(): View {\n    const nativeElement: View = this._viewContainerRef.element.nativeElement;\n\n    // The directive could be set on a template which will result in a comment\n    // node being the root. Use the comment's parent node if that is the case.\n    return (!(nativeElement instanceof CommentNode) ? nativeElement : nativeElement.parentNode!) as View;\n  }\n\n  static ngAcceptInputType_portal: Portal<any> | null | undefined | '';\n}\n\n@NgModule({\n  exports: [CdkPortal, CdkPortalOutlet],\n  declarations: [CdkPortal, CdkPortalOutlet],\n})\nexport class PortalModule {}\n","import { Frame, Page } from '@nativescript/core';\nimport { NgView, ViewClassMeta } from '../views/view-types';\nimport { isInvisibleNode } from '../views/utils';\n\nexport const frameMeta: ViewClassMeta = {\n  insertChild: (parent: Frame, child: NgView) => {\n    // Page cannot be added to Frame with _addChildFromBuilder (thwos \"use defaultPage\" error)\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (child instanceof Page) {\n      parent.navigate({ create: () => child });\n    } else {\n      throw new Error('Only a Page can be a child of Frame');\n    }\n  },\n};\n","import { LayoutBase, View } from '@nativescript/core';\nimport { InvisibleNode } from '../views/invisible-nodes';\nimport { ViewClassMeta } from '../views/view-types';\n\nexport type ViewResolver = () => any;\n\nexport const elementMap = new Map<string, { resolver: ViewResolver; meta?: ViewClassMeta }>();\nconst camelCaseSplit = /([a-z0-9])([A-Z])/g;\nconst defaultViewMeta: ViewClassMeta = { skipAddToDom: false };\n\nexport function registerElement(elementName: string, resolver: ViewResolver, meta?: ViewClassMeta): void {\n  const entry = { resolver, meta };\n  elementMap.set(elementName, entry);\n  elementMap.set(elementName.toLowerCase(), entry);\n  elementMap.set(elementName.replace(camelCaseSplit, '$1-$2').toLowerCase(), entry);\n}\n\nexport function getViewClass(elementName: string): any {\n  const entry = elementMap.get(elementName) || elementMap.get(elementName.toLowerCase());\n  if (!entry) {\n    throw new TypeError(`No known component for element ${elementName}.`);\n  }\n\n  try {\n    return entry.resolver();\n  } catch (e) {\n    throw new TypeError(`Could not load view for: ${elementName}.${e}`);\n  }\n}\n\nexport function getViewMeta(nodeName: string): ViewClassMeta {\n  const entry = elementMap.get(nodeName) || elementMap.get(nodeName.toLowerCase());\n  return (entry && entry.meta) || defaultViewMeta;\n}\n\nexport function isKnownView(elementName: string): boolean {\n  return elementMap.has(elementName) || elementMap.has(elementName.toLowerCase());\n}\n\nexport function extractSingleViewRecursive(nodes: Array<any>, nestLevel: number): View {\n  const actualNodes = nodes.filter((node) => !(node instanceof InvisibleNode));\n\n  if (actualNodes.length === 0) {\n    throw new Error(`No suitable views found in list template! ` + `Nesting level: ${nestLevel}`);\n  } else if (actualNodes.length > 1) {\n    throw new Error(`More than one view found in list template!` + `Nesting level: ${nestLevel}`);\n  }\n\n  const rootLayout = actualNodes[0];\n  if (!rootLayout) {\n    return extractSingleViewRecursive(rootLayout.children, nestLevel + 1);\n  }\n\n  const parentLayout = rootLayout.parent;\n  if (parentLayout instanceof LayoutBase) {\n    const node = rootLayout.parentNode;\n    parentLayout.removeChild(rootLayout);\n    rootLayout.parentNode = node;\n  }\n\n  return rootLayout;\n}\n\n/**\n * @deprecated getSingleViewRecursive is deprecated, use extractSingleViewRecursive\n */\nexport function getSingleViewRecursive(nodes: Array<any>, nestLevel: number): View {\n  return extractSingleViewRecursive(nodes, nestLevel);\n}\n","import { AbsoluteLayout, ActivityIndicator, Button, ContentView, DatePicker, DockLayout, FlexboxLayout, FormattedString, Frame, GridLayout, HtmlView, Image, Label, ListPicker, ListView, Page, Placeholder, Progress, ProxyViewContainer, Repeater, RootLayout, ScrollView, SearchBar, SegmentedBar, SegmentedBarItem, Slider, Span, StackLayout, Switch, TabView, TextField, TextView, TimePicker, WebView, WrapLayout } from '@nativescript/core';\nimport { frameMeta } from './metas';\nimport { registerElement } from './registry';\n\n// Register default NativeScript components\n// Note: ActionBar related components are registerd together with action-bar directives.\nexport function registerNativeScriptViewComponents() {\n  if (!(<any>global).__ngRegisteredViews) {\n    (<any>global).__ngRegisteredViews = true;\n    registerElement('AbsoluteLayout', () => AbsoluteLayout);\n    registerElement('ActivityIndicator', () => ActivityIndicator);\n    registerElement('Button', () => Button);\n    registerElement('ContentView', () => ContentView);\n    registerElement('DatePicker', () => DatePicker);\n    registerElement('DockLayout', () => DockLayout);\n    registerElement('Frame', () => Frame, frameMeta);\n    registerElement('GridLayout', () => GridLayout);\n    registerElement('HtmlView', () => HtmlView);\n    registerElement('Image', () => Image);\n    // Parse5 changes <Image> tags to <img>. WTF!\n    registerElement('img', () => Image);\n    registerElement('Label', () => Label);\n    registerElement('ListPicker', () => ListPicker);\n    registerElement('ListView', () => ListView);\n    registerElement('Page', () => Page);\n    registerElement('Placeholder', () => Placeholder);\n    registerElement('Progress', () => Progress);\n    registerElement('ProxyViewContainer', () => ProxyViewContainer);\n    registerElement('Repeater', () => Repeater);\n    registerElement('RootLayout', () => RootLayout);\n    registerElement('ScrollView', () => ScrollView);\n    registerElement('SearchBar', () => SearchBar);\n    registerElement('SegmentedBar', () => SegmentedBar);\n    registerElement('SegmentedBarItem', () => SegmentedBarItem);\n    registerElement('Slider', () => Slider);\n    registerElement('StackLayout', () => StackLayout);\n    registerElement('FlexboxLayout', () => FlexboxLayout);\n    registerElement('Switch', () => Switch);\n    registerElement('TabView', () => TabView);\n    registerElement('TextField', () => TextField);\n    registerElement('TextView', () => TextView);\n    registerElement('TimePicker', () => TimePicker);\n    registerElement('WebView', () => WebView);\n    registerElement('WrapLayout', () => WrapLayout);\n    registerElement('FormattedString', () => FormattedString);\n    registerElement('Span', () => Span);\n  }\n}\n","import { View, unsetValue, Placeholder, ContentView, LayoutBase, ProxyViewContainer } from '@nativescript/core';\nimport { getViewClass, getViewMeta, isKnownView } from './element-registry';\nimport { CommentNode, NgView, TextNode, ViewExtensions, isDetachedElement, isInvisibleNode, isView, isContentView, isLayout } from './views';\nimport { NamespaceFilter } from './property-filter';\n\nimport { NativeScriptDebug } from './trace';\nimport { NgLayoutBase } from './views/view-types';\n\nconst ELEMENT_NODE_TYPE = 1;\nconst XML_ATTRIBUTES = Object.freeze(['style', 'rows', 'columns', 'fontAttributes']);\nconst whiteSpaceSplitter = /\\s+/;\n\nexport type BeforeAttachAction = (view: View) => void;\n\nfunction printNgTree(view: NgView) {\n  let parent = view;\n  while (parent.parent && (parent.parent as NgView).firstChild) {\n    parent = parent.parent as NgView;\n  }\n  printChildrenRecurse(parent);\n}\nfunction printChildrenRecurse(parent: NgView) {\n  const children = parent.firstChild ? [parent.firstChild, ...getChildrenSiblings(parent.firstChild).nextSiblings] : [];\n  console.log(`parent: ${parent}, firstChild: ${parent.firstChild}, lastChild: ${parent.lastChild} children: ${children}`);\n  if (parent.firstChild) {\n    console.log(`----- start ${parent}`);\n  }\n  children.forEach((c) => printChildrenRecurse(c));\n  if (parent.firstChild) {\n    console.log(`----- end ${parent}`);\n  }\n}\n\nfunction getChildrenSiblings(view: NgView) {\n  const nextSiblings = [];\n  const previousSiblings = [];\n  let sibling = view.nextSibling;\n  while (sibling) {\n    nextSiblings.push(sibling);\n    sibling = sibling.nextSibling;\n  }\n  sibling = view.previousSibling;\n  while (sibling) {\n    previousSiblings.push(sibling);\n    sibling = sibling.previousSibling;\n  }\n  return {\n    previousSiblings,\n    nextSiblings,\n  };\n}\n\nfunction printSiblingsTree(view: NgView) {\n  const { previousSiblings, nextSiblings } = getChildrenSiblings(view);\n  console.log(`${view} previousSiblings: ${previousSiblings} nextSiblings: ${nextSiblings}`);\n}\n\nconst propertyMaps: Map<Function, Map<string, string>> = new Map<Function, Map<string, string>>();\n\nexport class ViewUtil {\n  constructor(private namespaceFilters?: NamespaceFilter[], private reuseViews?: boolean) {}\n  /**\n   * Inserts a child into a parrent, preferably before next.\n   * @param parent parent view\n   * @param child child view to be added\n   * @param previous previous element. If present, insert after this.\n   * @param next next element. If present, insert before this (previous is ignored).\n   */\n  private insertChild(parent: View, child: View, previous?: NgView, next?: NgView) {\n    if (!parent) {\n      return;\n    }\n\n    const extendedParent = this.ensureNgViewExtensions(parent);\n    const extendedChild = this.ensureNgViewExtensions(child);\n\n    // if there's a next child, previous is the previousSibling of it\n    if (next) {\n      previous = next.previousSibling;\n    } else if (previous) {\n      // if there's a previous, next is the nextSibling of it\n      next = previous.nextSibling;\n    } else {\n      // no previous or next, append to the parent\n      previous = extendedParent.lastChild; // this can still be undefined if the parent has no children!\n    }\n    this.insertInList(extendedParent, extendedChild, previous, next);\n\n    if (isInvisibleNode(child)) {\n      extendedChild.parentNode = extendedParent;\n    }\n\n    if (!isDetachedElement(child)) {\n      const nextVisual = this.findNextVisual(next);\n      this.addToVisualTree(extendedParent, extendedChild, nextVisual);\n    }\n    // printNgTree(extendedChild);\n  }\n\n  public insertBefore(parent: View, child: View, refChild?: View | NgView) {\n    const extendedRef = refChild ? this.ensureNgViewExtensions(refChild) : undefined;\n    this.insertChild(parent, child, undefined, extendedRef);\n  }\n  public insertAfter(parent: View, child: View, refChild?: View | NgView) {\n    const extendedRef = refChild ? this.ensureNgViewExtensions(refChild) : undefined;\n    this.insertChild(parent, child, extendedRef);\n  }\n\n  public appendChild(parent: View, child: View) {\n    this.insertChild(parent, child);\n  }\n\n  /**\n   * Inserts a view into the parent/sibling linked list\n   * !WARNING: this method makes no checks to validate the integrity of previous/next children\n   * @param parent parent view\n   * @param child child view\n   * @param previous previous element. null/undefined for first element\n   * @param next next element. null/undefined for last element\n   */\n  private insertInList(parent: NgView, child: NgView, previous: NgView, next: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.insertInList parent: ${parent}, view: ${child}, ` + `previous: ${previous}, next: ${next}`);\n    }\n\n    if (previous) {\n      previous.nextSibling = child;\n      child.previousSibling = previous;\n    } else {\n      parent.firstChild = child;\n    }\n\n    if (next) {\n      child.nextSibling = next;\n      next.previousSibling = child;\n    } else {\n      parent.lastChild = child;\n    }\n  }\n\n  private addToVisualTree(parent: NgView, child: NgView, next: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.addToVisualTree parent: ${parent}, view: ${child}, next: ${next}`);\n    }\n\n    if (parent.meta && parent.meta.insertChild) {\n      parent.meta.insertChild(parent, child, next);\n    } else if (isLayout(parent)) {\n      this.insertToLayout(parent, child, next);\n    } else if (isContentView(parent)) {\n      parent.content = child;\n    } else if (parent && (<any>parent)._addChildFromBuilder) {\n      (<any>parent)._addChildFromBuilder(child.nodeName, child);\n    }\n  }\n\n  private insertToLayout(parent: NgLayoutBase, child: NgView, next: NgView): void {\n    if (child.parent === parent) {\n      this.removeLayoutChild(parent, child);\n    }\n\n    const nextVisual = this.findNextVisual(next);\n    if (nextVisual) {\n      const index = parent.getChildIndex(nextVisual);\n      parent.insertChild(child, index);\n    } else {\n      parent.addChild(child);\n    }\n    // parent.eachChild((c) => {console.log(c); return true});\n  }\n\n  private findNextVisual(view: NgView): NgView {\n    let next = view;\n    while (next && isDetachedElement(next)) {\n      next = next.nextSibling;\n    }\n\n    return next;\n  }\n\n  public removeChild(parent: View, child: View) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeChild parent: ${parent} child: ${child}`);\n    }\n\n    if (!parent) {\n      return;\n    }\n\n    const extendedParent = this.ensureNgViewExtensions(parent);\n    const extendedChild = this.ensureNgViewExtensions(child);\n\n    this.removeFromList(extendedParent, extendedChild);\n    if (!isDetachedElement(extendedChild)) {\n      this.removeFromVisualTree(extendedParent, extendedChild);\n    }\n  }\n\n  private removeFromList(parent: NgView, child: NgView) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeFromList parent: ${parent} child: ${child}`);\n    }\n\n    if (parent.firstChild === child && parent.lastChild === child) {\n      parent.firstChild = null;\n      parent.lastChild = null;\n      child.nextSibling = null;\n      child.previousSibling = null;\n      return;\n    }\n\n    if (parent.firstChild === child) {\n      parent.firstChild = child.nextSibling;\n    }\n\n    const previous = child.previousSibling;\n    if (parent.lastChild === child) {\n      parent.lastChild = previous;\n    }\n\n    if (previous) {\n      previous.nextSibling = child.nextSibling;\n      if (child.nextSibling) {\n        child.nextSibling.previousSibling = previous;\n      }\n    }\n\n    child.nextSibling = null;\n    child.previousSibling = null;\n  }\n\n  // NOTE: This one is O(n) - use carefully\n  private findPreviousElement(parent: NgView, child: NgView): NgView {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.findPreviousElement parent: ${parent} child: ${child}`);\n    }\n\n    let previousVisual;\n    if (isLayout(parent)) {\n      previousVisual = this.getPreviousVisualElement(parent, child);\n    }\n\n    let previous = previousVisual || parent.firstChild;\n\n    // since detached elements are not added to the visual tree,\n    // we need to find the actual previous sibling of the view,\n    // which may as well be an invisible node\n    while (previous && previous !== child && previous.nextSibling !== child) {\n      previous = previous.nextSibling;\n    }\n\n    return previous;\n  }\n\n  private getPreviousVisualElement(parent: NgLayoutBase, child: NgView): NgView {\n    const elementIndex = parent.getChildIndex(child);\n\n    if (elementIndex > 0) {\n      return parent.getChildAt(elementIndex - 1) as NgView;\n    }\n  }\n\n  // NOTE: This one is O(n) - use carefully\n  public getChildIndex(parent: any, child: NgView) {\n    if (isLayout(parent)) {\n      return parent.getChildIndex(child);\n    } else if (isContentView(parent)) {\n      return child === parent.content ? 0 : -1;\n    }\n  }\n\n  private removeFromVisualTree(parent: NgView, child: NgView) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeFromVisualTree parent: ${parent} child: ${child}`);\n    }\n\n    if (parent.meta && parent.meta.removeChild) {\n      parent.meta.removeChild(parent, child);\n    } else if (isLayout(parent)) {\n      this.removeLayoutChild(parent, child);\n    } else if (isContentView(parent) && parent.content === child) {\n      parent.content = null;\n    } else if (isView(parent)) {\n      parent._removeView(child);\n    }\n  }\n\n  private removeLayoutChild(parent: NgLayoutBase, child: NgView): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`ViewUtil.removeLayoutChild parent: ${parent} child: ${child}`);\n    }\n\n    const index = parent.getChildIndex(child);\n\n    if (index !== -1) {\n      parent.removeChild(child);\n    }\n  }\n\n  public createComment(value: string): CommentNode {\n    return new CommentNode(value);\n  }\n\n  public createText(value: string): TextNode {\n    return new TextNode(value);\n  }\n\n  public createView(name: string): NgView {\n    const originalName = name;\n    if (!isKnownView(name)) {\n      name = 'ProxyViewContainer';\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Creating view: ${originalName} ${name}`);\n    }\n\n    const viewClass = getViewClass(name);\n    const view = <NgView>new viewClass();\n    const ngView = this.setNgViewExtensions(view, name);\n    ngView.reusable = !!this.reuseViews;\n\n    return ngView;\n  }\n\n  private ensureNgViewExtensions(view: View): NgView {\n    if (view.hasOwnProperty('meta')) {\n      return view as NgView;\n    } else {\n      const name = view.cssType;\n      const ngView = this.setNgViewExtensions(view, name);\n\n      return ngView;\n    }\n  }\n\n  private setNgViewExtensions(view: View, name: string): NgView {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Make into a NgView view: ${view} name: \"${name}\"`);\n    }\n\n    const ngView = view as NgView;\n    ngView.nodeName = name;\n    ngView.meta = getViewMeta(name);\n\n    // we're setting the node type of the view\n    // to 'element' because of checks done in the\n    // dom animation engine\n    ngView.nodeType = ELEMENT_NODE_TYPE;\n\n    return ngView;\n  }\n\n  public setProperty(view: NgView, attributeName: string, value: any, namespace?: string): void {\n    if (!view || (namespace && !this.runsIn(namespace))) {\n      return;\n    }\n\n    if (attributeName.indexOf('.') !== -1) {\n      // Handle nested properties\n      const properties = attributeName.split('.');\n      attributeName = properties[properties.length - 1];\n\n      let propMap = this.getProperties(view);\n      let i = 0;\n      while (i < properties.length - 1 && typeof view !== 'undefined') {\n        let prop = properties[i];\n        if (propMap.has(prop)) {\n          prop = propMap.get(prop);\n        }\n\n        view = view[prop];\n        propMap = this.getProperties(view);\n        i++;\n      }\n    }\n\n    if (typeof view !== 'undefined') {\n      this.setPropertyInternal(view, attributeName, value);\n    }\n  }\n\n  private runsIn(platform: string): boolean {\n    let runs = true;\n    const last = () => true;\n    if (this.namespaceFilters) {\n      let chain = (p: string) => true;\n      for (let i = this.namespaceFilters.length - 1; i >= 0; i--) {\n        const currentChain = chain;\n        chain = (p) => this.namespaceFilters[i].runsIn(p, currentChain);\n      }\n      runs = chain(platform);\n      runs = runs !== false ? true : false; // undefined means true\n      // this.namespaceFilters.some((filter) => {\n      // \tconst runsInFilter = filter.runsIn(platform);\n      // \tif (runsInFilter !== undefined) {\n      // \t\truns = runsInFilter;\n      // \t\treturn true;\n      // \t}\n      // });\n    }\n    return runs;\n  }\n\n  private setPropertyInternal(view: NgView, attributeName: string, value: any): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.viewUtilLog(`Setting attribute: ${attributeName}=${value} to ${view}`);\n    }\n\n    if (attributeName === 'class') {\n      this.setClasses(view, value);\n      return;\n    }\n\n    if (XML_ATTRIBUTES.indexOf(attributeName) !== -1) {\n      view[attributeName] = value;\n      return;\n    }\n\n    const propMap = this.getProperties(view);\n    const propertyName = propMap.get(attributeName);\n\n    // Ensure the children of a collection currently have no parent set.\n    if (Array.isArray(value)) {\n      this.removeParentReferencesFromItems(value);\n    }\n\n    if (propertyName) {\n      // We have a lower-upper case mapped property.\n      view[propertyName] = value;\n      return;\n    }\n\n    // Unknown attribute value -- just set it to our object as is.\n    view[attributeName] = value;\n  }\n\n  private removeParentReferencesFromItems(items: any[]): void {\n    for (const item of items) {\n      if (item.parent && item.parentNode) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.viewUtilLog(`Unassigning parent ${item.parentNode} on value: ${item}`);\n        }\n        item.parent = undefined;\n        item.parentNode = undefined;\n      }\n    }\n  }\n\n  private getProperties(instance: any): Map<string, string> {\n    const type = instance && instance.constructor;\n    if (!type) {\n      return new Map<string, string>();\n    }\n\n    if (!propertyMaps.has(type)) {\n      let propMap = new Map<string, string>();\n      for (let propName in instance) {\n        // tslint:disable:forin\n        propMap.set(propName.toLowerCase(), propName);\n      }\n      propertyMaps.set(type, propMap);\n    }\n\n    return propertyMaps.get(type);\n  }\n\n  private cssClasses(view: NgView) {\n    if (!view.ngCssClasses) {\n      view.ngCssClasses = new Map<string, boolean>();\n    }\n    return view.ngCssClasses;\n  }\n\n  public addClass(view: View | NgView, className: string): void {\n    const extendedView = this.ensureNgViewExtensions(view);\n    this.cssClasses(extendedView).set(className, true);\n    this.syncClasses(extendedView);\n  }\n\n  public removeClass(view: View, className: string): void {\n    const extendedView = this.ensureNgViewExtensions(view);\n    this.cssClasses(extendedView).delete(className);\n    this.syncClasses(extendedView);\n  }\n\n  private setClasses(view: NgView, classesValue: string): void {\n    let classes = classesValue.split(whiteSpaceSplitter);\n    this.cssClasses(view).clear();\n    classes.forEach((className) => this.cssClasses(view).set(className, true));\n    this.syncClasses(view);\n  }\n\n  private syncClasses(view: NgView): void {\n    let classValue = (<any>Array).from(this.cssClasses(view).keys()).join(' ');\n    view.className = classValue;\n  }\n\n  public setStyle(view: View, styleName: string, value: any) {\n    view.style[styleName] = value;\n  }\n\n  public removeStyle(view: View, styleName: string) {\n    view.style[styleName] = unsetValue;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ApplicationRef, Injector, Renderer2, Optional } from '@angular/core';\nimport { View } from '@nativescript/core';\nimport { CommentNode } from '../../views/invisible-nodes';\nimport { ViewUtil } from '../../view-util';\nimport { BasePortalOutlet, ComponentPortal, TemplatePortal, DomPortal } from './common';\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nexport class NativeScriptDomPortalOutlet extends BasePortalOutlet {\n  private _viewUtil: ViewUtil;\n  constructor(\n    /** Element into which the content is projected. */\n    public outletElement: View,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _defaultInjector: Injector,\n    @Optional() viewUtil?: ViewUtil\n  ) {\n    super();\n    this._viewUtil = viewUtil || this._defaultInjector.get(ViewUtil);\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    const rootNode = this._getComponentRootNode(componentRef);\n    if (rootNode.parent) {\n      this._viewUtil.removeChild(rootNode.parent as View, rootNode);\n    }\n    this._viewUtil.appendChild(this.outletElement, this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach((rootNode) => {\n      if (rootNode.parent) {\n        this._viewUtil.removeChild(rootNode.parent as View, rootNode);\n      }\n      this._viewUtil.appendChild(this.outletElement, rootNode);\n    });\n\n    // Note that we want to detect changes after the nodes have been moved so that\n    // any directives inside the portal that are looking at the DOM inside a lifecycle\n    // hook won't be invoked too early.\n    viewRef.detectChanges();\n\n    this.setDisposeFn(() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    });\n\n    // TODO(jelbourn): Return locals from view.\n    return viewRef;\n  }\n\n  /**\n   * Attaches a DOM portal by transferring its content into the outlet.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode: CommentNode = this._viewUtil.createComment('dom-portal');\n\n    this._viewUtil.insertBefore(element.parentNode as View, anchorNode, element);\n    this._viewUtil.appendChild(this.outletElement, element);\n\n    super.setDisposeFn(() => {\n      // We can't use `replaceWith` here because IE doesn't support it.\n      if (anchorNode.parentNode) {\n        this._viewUtil.insertBefore(anchorNode.parentNode, element, anchorNode);\n        this._viewUtil.removeChild(anchorNode.parentNode, anchorNode);\n        //anchorNode.parentNode.replaceChild(element, anchorNode);\n      }\n    });\n  };\n\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose(): void {\n    super.dispose();\n    if (this.outletElement.parentNode != null) {\n      this._viewUtil.removeChild(this.outletElement.parentNode as View, this.outletElement);\n    }\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): View {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as View;\n  }\n}\n","import { ComponentRef, ComponentFactory, ViewContainerRef, Component, Type, ComponentFactoryResolver, ChangeDetectorRef, ApplicationRef, OnDestroy, TemplateRef, ViewChild, Injector } from '@angular/core';\nimport { ProxyViewContainer, Trace } from '@nativescript/core';\nimport { ComponentPortal, TemplatePortal } from './portal';\nimport type { ComponentType } from '../utils/general';\nimport { registerElement } from '../element-registry';\n\nregisterElement('DetachedContainer', () => ProxyViewContainer, {\n  skipAddToDom: true,\n});\n\n/**\n * Wrapper component used for loading components when navigating\n * It uses DetachedContainer as selector so that it is containerRef is not attached to\n * the visual tree.\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'DetachedContainer',\n  template: `<Placeholder #loader></Placeholder><ng-container #vc></ng-container><ng-content></ng-content>`,\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class DetachedLoader implements OnDestroy {\n  @ViewChild('vc', { read: ViewContainerRef, static: true }) vc: ViewContainerRef;\n  private disposeFunctions: Array<() => void> = [];\n  // tslint:disable-line:component-class-suffix\n  constructor(private resolver: ComponentFactoryResolver, private changeDetector: ChangeDetectorRef, private containerRef: ViewContainerRef, private appRef: ApplicationRef) {}\n\n  public createComponentPortal<T>(componentType: ComponentType<T>, customInjector?: Injector) {\n    return new ComponentPortal(componentType, this.vc, customInjector || this.vc.injector);\n  }\n\n  public createTemplatePortal<T>(templateRef: TemplateRef<T>, context?: T) {\n    return new TemplatePortal(templateRef, this.vc, context);\n  }\n\n  private loadInLocation(componentType: Type<any>): ComponentRef<any> {\n    const factory = this.resolver.resolveComponentFactory(componentType);\n    const componentRef = factory.create(this.containerRef.injector);\n    this.appRef.attachView(componentRef.hostView);\n\n    this.disposeFunctions.push(() => {\n      this.appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // Component is created, built may not be checked if we are loading\n    // inside component with OnPush CD strategy. Mark us for check to be sure CD will reach us.\n    // We are inside a promise here so no need for setTimeout - CD should trigger\n    // after the promise.\n    Trace.write('DetachedLoader.loadInLocation component loaded -> markForCheck', 'detached-loader');\n\n    return componentRef;\n  }\n\n  public ngOnDestroy() {\n    this.disposeFunctions.forEach((fn) => fn());\n  }\n\n  public detectChanges() {\n    this.changeDetector.markForCheck();\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadComponent(componentType: Type<any>): Promise<ComponentRef<any>> {\n    Trace.write('DetachedLoader.loadComponent', 'detached-loader');\n    return Promise.resolve(this.loadInLocation(componentType));\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadComponentSync(componentType: Type<any>): ComponentRef<any> {\n    Trace.write('DetachedLoader.loadComponent', 'detached-loader');\n    return this.loadInLocation(componentType);\n  }\n\n  /**\n   * @deprecated use Portals\n   */\n  public loadWithFactory<T>(factory: ComponentFactory<T>): ComponentRef<T> {\n    const componentRef = factory.create(this.containerRef.injector);\n    this.appRef.attachView(componentRef.hostView);\n\n    this.disposeFunctions.push(() => {\n      this.appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    return componentRef;\n  }\n}\n","import { XhrFactory } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NativescriptXhrFactory extends XhrFactory {\n  build() {\n    return new XMLHttpRequest();\n  }\n}\n","import { Inject, Injectable, NgZone, Optional, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation } from '@angular/core';\nimport { addTaggedAdditionalCSS, Application, ContentView, Device, getViewById, Observable, profile, Utils, View } from '@nativescript/core';\nimport { getViewClass, isKnownView } from './element-registry';\nimport { getFirstNativeLikeView, NgView } from './views';\n\nimport { NamespaceFilter, NAMESPACE_FILTERS } from './property-filter';\nimport { APP_ROOT_VIEW, ENABLE_REUSABE_VIEWS, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { NativeScriptDebug } from './trace';\nimport { ViewUtil } from './view-util';\n\nconst addStyleToCss = profile('\"renderer\".addStyleToCss', function addStyleToCss(style: string, tag?: string | number): void {\n  if (tag) {\n    addTaggedAdditionalCSS(style, tag);\n  } else {\n    Application.addCss(style);\n  }\n});\n\nexport class NativeScriptRendererFactory implements RendererFactory2 {\n  private componentRenderers = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n  // backwards compatibility with RadListView\n  private viewUtil = new ViewUtil(this.namespaceFilters, this.reuseViews);\n\n  constructor(@Inject(APP_ROOT_VIEW) private rootView: View, @Inject(NAMESPACE_FILTERS) private namespaceFilters: NamespaceFilter[], @Inject(NATIVESCRIPT_ROOT_MODULE_ID) private rootModuleID: string | number, @Optional() @Inject(ENABLE_REUSABE_VIEWS) private reuseViews) {\n    if (typeof this.reuseViews !== 'boolean') {\n      this.reuseViews = false; // default to false\n    }\n    this.defaultRenderer = new NativeScriptRenderer(rootView, namespaceFilters, this.reuseViews);\n  }\n  createRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRendererFactory.createRenderer ${hostElement}. type.id: ${type.id} type.encapsulation: ${type.encapsulation}`);\n    }\n    if (!hostElement || !type) {\n      return this.defaultRenderer;\n    }\n\n    let renderer = this.componentRenderers.get(type.id);\n    /**\n     *! WARNING\n     *! We're reusing the renderer for the components\n     *! this might cause unexpected behavior as the \"rootView\" is an arbitrary hostElement\n     *! also, the renderer has it's .destroy() called!\n     *! might be useful to create a BaseEmulatedRender and a ProxyEmulatedRender\n     *! every component type gets a BaseEmulatedRender (singleton) which is passed to ProxyEmulatedRender\n     *! ProxyEmulatedRenderer registers with BaseEmulatedRender so we can clean up things like CSS when it's not needed\n     *! this might be useful if we find a way to HMR component styling without a full rebootstrap\n     */\n    if (renderer) {\n      if (renderer instanceof EmulatedRenderer) {\n        renderer.applyToHost(hostElement);\n      }\n\n      return renderer;\n    }\n\n    if (type.encapsulation === ViewEncapsulation.None) {\n      type.styles.map((s) => s.toString()).forEach((v) => addStyleToCss(v, this.rootModuleID));\n      renderer = this.defaultRenderer;\n    } else {\n      renderer = new EmulatedRenderer(type, hostElement, this.namespaceFilters, this.rootModuleID, this.reuseViews);\n      (<EmulatedRenderer>renderer).applyToHost(hostElement);\n    }\n\n    this.componentRenderers.set(type.id, renderer);\n    return renderer;\n  }\n  // begin?(): void {\n  //     throw new Error(\"Method not implemented.\");\n  // }\n  // end?(): void {\n  //     throw new Error(\"Method not implemented.\");\n  // }\n  whenRenderingDone(): Promise<any> {\n    if (!this.rootView) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      let interval: any = 0;\n      function scheduleResolve() {\n        // iOS really hates synchronous things...\n        // Utils.queueMacrotask(resolve);\n        setTimeout(resolve, 15);\n      }\n      function fireWhenLoaded() {\n        const view = rootFactory();\n        if (view.isLoaded) {\n          scheduleResolve();\n        } else {\n          view.once('loaded', scheduleResolve);\n        }\n      }\n      const rootFactory = () => (this.rootView instanceof ContentView ? this.rootView.content : this.rootView);\n      if (!rootFactory()) {\n        interval = setInterval(() => {\n          if (rootFactory()) {\n            clearInterval(interval);\n            fireWhenLoaded();\n          }\n        }, 10);\n      } else {\n        fireWhenLoaded();\n      }\n    });\n    // throw new Error(\"Method not implemented.\");\n  }\n}\n\nclass NativeScriptRenderer implements Renderer2 {\n  private viewUtil = new ViewUtil(this.namespaceFilters, this.reuseViews);\n\n  constructor(private rootView: View, private namespaceFilters?: NamespaceFilter[], private reuseViews?: boolean) {}\n  get data(): { [key: string]: any } {\n    throw new Error('Method not implemented.');\n  }\n  destroy(): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog('NativeScriptRenderer.destroy');\n    }\n  }\n  createElement(name: string, namespace?: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createElement: ${name}`);\n    }\n    let oldName;\n    if (!isKnownView(name)) {\n      oldName = name;\n      name = 'ProxyViewContainer';\n    }\n    const view = this.viewUtil.createView(name);\n    if (oldName) {\n      (view as any).customCSSName = oldName;\n    }\n    return view;\n  }\n  createComment(value: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createComment ${value}`);\n    }\n    return this.viewUtil.createComment(value);\n  }\n  createText(value: string) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.createText ${value}`);\n    }\n    return this.viewUtil.createText(value);\n  }\n  destroyNode: (node: any) => void = (node: View) => {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.destroyNode node: ${node}`);\n    }\n    if (node?.destroyNode) {\n      node?.destroyNode();\n    }\n  };\n  appendChild(parent: View, newChild: View): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.appendChild child: ${newChild} parent: ${parent}`);\n    }\n    this.viewUtil.appendChild(parent, newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.insertBefore child: ${newChild} ` + `parent: ${parent} refChild: ${refChild}`);\n    }\n    this.viewUtil.insertBefore(parent, newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any, isHostElement?: boolean): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeChild child: ${oldChild} parent: ${parent}`);\n    }\n    this.viewUtil.removeChild(parent, oldChild);\n  }\n  selectRootElement(selectorOrNode: any, preserveContent?: boolean) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.selectRootElement: ${selectorOrNode}`);\n    }\n    if (selectorOrNode instanceof View) {\n      return selectorOrNode;\n    }\n    if (selectorOrNode && selectorOrNode[0] === '#') {\n      const result = getViewById(this.rootView, selectorOrNode.slice(1));\n      return (result || this.rootView) as View;\n    }\n    if (typeof selectorOrNode === 'string') {\n      const view = this.viewUtil.createView(selectorOrNode);\n      if (getFirstNativeLikeView(view) === view) {\n        // view is nativelike!\n        this.appendChild(this.rootView, view);\n        return view;\n      }\n    }\n    return this.rootView;\n  }\n  parentNode(node: NgView) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.parentNode for node: ${node} is ${node.parentNode}`);\n    }\n    return node.parentNode;\n  }\n  nextSibling(node: NgView) {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.nextSibling of ${node} is ${node.nextSibling}`);\n    }\n    return node.nextSibling;\n  }\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setAttribute ${namespace ? namespace + ':' : ''}${el}.${name} = ${value}`);\n    }\n    this.viewUtil.setProperty(el, name, value, namespace);\n  }\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeAttribute ${namespace ? namespace + ':' : ''}${el}.${name}`);\n    }\n  }\n  addClass(el: any, name: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.addClass ${name}`);\n    }\n    this.viewUtil.addClass(el, name);\n  }\n  removeClass(el: any, name: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.removeClass ${name}`);\n    }\n    this.viewUtil.removeClass(el, name);\n  }\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setStyle: ${el}, ${style} = ${value}`);\n    }\n    this.viewUtil.setStyle(el, style, value);\n  }\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog('NativeScriptRenderer.removeStyle: ${styleName}');\n    }\n    this.viewUtil.removeStyle(el, style);\n  }\n  setProperty(el: any, name: string, value: any): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setProperty ${el}.${name} = ${value}`);\n    }\n    this.viewUtil.setProperty(el, name, value);\n  }\n  setValue(node: any, value: string): void {\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.setValue renderNode: ${node}, value: ${value}`);\n    }\n    // throw new Error(\"Method not implemented.\");\n  }\n  listen(target: View, eventName: string, callback: (event: any) => boolean | void): () => void {\n    // throw new Error(\"Method not implemented.\");\n    if (NativeScriptDebug.enabled) {\n      NativeScriptDebug.rendererLog(`NativeScriptRenderer.listen: ${eventName}`);\n    }\n    target.on(eventName, callback);\n    if (eventName === View.loadedEvent && target.isLoaded) {\n      // we must create a new obervable here to ensure that the event goes through whatever zone patches are applied\n      const obs = new Observable();\n      obs.once(eventName, callback);\n      obs.notify({\n        eventName,\n        object: target,\n      });\n    }\n    return () => target.off(eventName, callback);\n  }\n}\n\n// CONTENT_ATTR not exported from nativescript-renderer - we need it for styles application.\nconst COMPONENT_REGEX = /%COMP%/g;\nconst ATTR_SANITIZER = /-/g;\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nconst replaceNgAttribute = function (input: string, componentId: string): string {\n  return input.replace(COMPONENT_REGEX, componentId);\n};\n\nconst addScopedStyleToCss = profile(`\"renderer\".addScopedStyleToCss`, function addScopedStyleToCss(style: string, tag?: number | string): void {\n  if (tag) {\n    addTaggedAdditionalCSS(style, tag);\n  } else {\n    Application.addCss(style);\n  }\n});\n\n@Injectable()\nexport class EmulatedRenderer extends NativeScriptRenderer {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(component: RendererType2, rootView: View, namespaceFilters: NamespaceFilter[], private rootModuleId: string | number, reuseViews: boolean) {\n    super(rootView, namespaceFilters, reuseViews);\n\n    const componentId = component.id.replace(ATTR_SANITIZER, '_');\n    this.contentAttr = replaceNgAttribute(CONTENT_ATTR, componentId);\n    this.hostAttr = replaceNgAttribute(HOST_ATTR, componentId);\n    this.addStyles(component.styles, componentId);\n  }\n\n  applyToHost(view: NgView) {\n    super.setAttribute(view, this.hostAttr, '');\n  }\n\n  appendChild(parent: any, newChild: NgView): void {\n    super.appendChild(parent, newChild);\n  }\n\n  createElement(parent: any, name: string): NgView {\n    const view = super.createElement(parent, name);\n\n    // Set an attribute to the view to scope component-specific css.\n    // The property name is pre-generated by Angular.\n    super.setAttribute(view, this.contentAttr, '');\n\n    return view;\n  }\n\n  @profile\n  private addStyles(styles: (string | any[])[], componentId: string) {\n    styles\n      .map((s) => s.toString())\n      .map((s) => replaceNgAttribute(s, componentId))\n      .forEach((s) => addScopedStyleToCss(s, this.rootModuleId));\n  }\n}\n","import { ElementRef, Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { NavigatedData, Page, View, ViewBase } from '@nativescript/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable()\nexport class PageService implements OnDestroy {\n  page: Page;\n  private _inPage$: BehaviorSubject<boolean>;\n  private _pageEvents$ = new Subject<NavigatedData>();\n\n  get inPage(): boolean {\n    return this._inPage$.value;\n  }\n  get inPage$(): Observable<boolean> {\n    return this._inPage$.pipe(distinctUntilChanged());\n  }\n  get pageEvents$(): Observable<NavigatedData> {\n    return this._pageEvents$.asObservable();\n  }\n  constructor(@Optional() page?: Page, @Optional() elRef?: ElementRef<ViewBase>, @Optional() view?: ViewBase) {\n    if (page) {\n      this.page = page;\n    } else {\n      view = view || elRef.nativeElement;\n      while (view) {\n        if (view instanceof Page) {\n          this.page = view;\n          break;\n        }\n        view = view.parent;\n      }\n    }\n    this._inPage$ = new BehaviorSubject<boolean>(!!this.page?.isLoaded);\n    if (this.page) {\n      this.page.on('navigatedFrom', this.pageEvent, this);\n      this.page.on('navigatedTo', this.pageEvent, this);\n      this.page.on('navigatingFrom', this.pageEvent, this);\n      this.page.on('navigatingTo', this.pageEvent, this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.page) {\n      this.page.off('navigatedFrom', this.pageEvent, this);\n      this.page.off('navigatedTo', this.pageEvent, this);\n      this.page.off('navigatingFrom', this.pageEvent, this);\n      this.page.off('navigatingTo', this.pageEvent, this);\n    }\n    this._inPage$.complete();\n    this._pageEvents$.complete();\n  }\n\n  private pageEvent(evt: NavigatedData) {\n    this._pageEvents$.next(evt);\n    switch (evt.eventName) {\n      case 'navigatedTo':\n        this._inPage$.next(true);\n        break;\n      case 'navigatedFrom':\n        this._inPage$.next(false);\n        break;\n      default:\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\nimport { Frame, Page, View } from '@nativescript/core';\nimport { frameMeta, registerElement } from '../../element-registry';\nimport { PageService } from './page.service';\n\nexport function customFrameComponentFactory(v: FramePageComponent) {\n  return v.element.nativeElement;\n}\n\nexport function customPageFactoryFromFrame(v: FramePageComponent) {\n  return v.page;\n}\n\nregisterElement('FramePage', () => Frame, {\n  insertChild: (parent: Frame, child: View) => {\n    if (child instanceof Page) {\n      frameMeta.insertChild(parent, child);\n      return;\n    }\n    parent['__ng_page__'].content = child;\n  },\n});\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'FramePage',\n  template: `<ng-content></ng-content>`,\n  providers: [\n    {\n      provide: Frame,\n      useFactory: customFrameComponentFactory,\n      deps: [FramePageComponent],\n    },\n    {\n      provide: Page,\n      useFactory: customPageFactoryFromFrame,\n      deps: [FramePageComponent],\n    },\n    PageService,\n  ],\n})\nexport class FramePageComponent implements AfterViewInit, OnChanges {\n  page: Page;\n\n  @Input() actionBarHidden = false;\n\n  constructor(public element: ElementRef<Frame>, renderer: Renderer2) {\n    this.page = renderer.createElement('Page') as Page;\n    element.nativeElement['__ng_page__'] = this.page;\n    renderer.appendChild(element.nativeElement, this.page);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.actionBarHidden && changes.actionBarHidden.previousValue !== changes.actionBarHidden.currentValue) {\n      if (this.page) {\n        this.page.actionBarHidden = !!this.actionBarHidden;\n      }\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.page) {\n      this.page.actionBarHidden = !!this.actionBarHidden;\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { Frame } from '@nativescript/core';\n\nexport function customFrameDirectiveFactory(v: FrameDirective) {\n  return v.element.nativeElement;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'Frame',\n  providers: [\n    {\n      provide: Frame,\n      useFactory: customFrameDirectiveFactory,\n      deps: [FrameDirective],\n    },\n  ],\n})\nexport class FrameDirective {\n  constructor(public element: ElementRef<Frame>) {}\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { Page } from '@nativescript/core';\nimport { PageService } from './page.service';\n\nexport function customPageFactory(v: PageDirective) {\n  return v.element.nativeElement;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'Page',\n  providers: [\n    {\n      provide: Page,\n      useFactory: customPageFactory,\n      deps: [PageDirective],\n    },\n    PageService,\n  ],\n})\nexport class PageDirective {\n  constructor(public element: ElementRef<Page>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { FramePageComponent } from './frame-page.component';\nimport { FrameDirective } from './frame.directive';\nimport { PageDirective } from './page.directive';\n\n@NgModule({\n  declarations: [FrameDirective, PageDirective, FramePageComponent],\n  exports: [FrameDirective, PageDirective, FramePageComponent],\n})\nexport class FramePageModule {}\n","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n","import { Directive, Component, ElementRef, Optional, OnDestroy } from '@angular/core';\nimport { ActionBar, ActionItem, ActionItems, NavigationButton, Page } from '@nativescript/core';\n\nimport { isBlank } from '../../utils/lang-facade';\nimport { NgView, ViewClassMeta, ViewExtensions } from '../../views/view-types';\nimport { isInvisibleNode, isView } from '../../views/utils';\nimport { registerElement } from '../../element-registry';\n\nexport function isActionItem(view: any): view is ActionItem {\n  return view instanceof ActionItem;\n}\n\nexport function isNavigationButton(view: any): view is NavigationButton {\n  return view instanceof NavigationButton;\n}\n\ntype NgActionBar = ActionBar & ViewExtensions;\n\nexport const actionBarMeta: ViewClassMeta = {\n  skipAddToDom: true,\n  insertChild: (parent: NgActionBar, child: NgView, next: any) => {\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (isNavigationButton(child)) {\n      parent.navigationButton = child;\n      child.parentNode = parent;\n    } else if (isActionItem(child)) {\n      addActionItem(parent, child, next);\n      child.parentNode = parent;\n    } else if (isView(child)) {\n      parent.titleView = child;\n    }\n  },\n  removeChild: (parent: NgActionBar, child: NgView) => {\n    if (isInvisibleNode(child)) {\n      return;\n    } else if (isNavigationButton(child)) {\n      if (parent.navigationButton === child) {\n        parent.navigationButton = null;\n      }\n\n      child.parentNode = null;\n    } else if (isActionItem(child)) {\n      parent.actionItems.removeItem(child);\n      child.parentNode = null;\n    } else if (isView(child) && parent.titleView && parent.titleView === child) {\n      parent.titleView = null;\n    }\n  },\n};\n\nregisterElement('ActionBar', () => ActionBar, actionBarMeta);\nregisterElement('ActionItem', () => <any>ActionItem);\nregisterElement('NavigationButton', () => <any>NavigationButton);\n\nconst addActionItem = (bar: NgActionBar, item: ActionItem, next: ActionItem) => {\n  if (next) {\n    insertActionItemBefore(bar, item, next);\n  } else {\n    appendActionItem(bar, item);\n  }\n};\n\nconst insertActionItemBefore = (bar: NgActionBar, item: ActionItem, next: ActionItem) => {\n  const actionItems: ActionItems = bar.actionItems;\n  const actionItemsCollection: ActionItem[] = actionItems.getItems();\n\n  const indexToInsert = actionItemsCollection.indexOf(next);\n  actionItemsCollection.splice(indexToInsert, 0, item);\n\n  (<any>actionItems).setItems(actionItemsCollection);\n};\n\nconst appendActionItem = (bar: NgActionBar, item: ActionItem) => {\n  bar.actionItems.addItem(item);\n};\n\n@Component({\n  selector: 'ActionBar',\n  template: '<ng-content></ng-content>',\n})\nexport class ActionBarComponent {\n  constructor(public element: ElementRef, private page: Page) {\n    if (!this.page) {\n      throw new Error('Inside ActionBarComponent but no Page found in DI.');\n    }\n\n    if (isBlank(this.page.actionBarHidden)) {\n      this.page.actionBarHidden = false;\n    }\n    this.page.actionBar = this.element.nativeElement;\n    this.page.actionBar.update();\n  }\n}\n\n@Component({\n  selector: 'ActionBarExtension',\n  template: '',\n})\nexport class ActionBarScope {\n  // tslint:disable-line:component-class-suffix\n  constructor(private page: Page) {\n    if (!this.page) {\n      throw new Error('Inside ActionBarScope but no Page found in DI.');\n    }\n  }\n\n  public onNavButtonInit(navBtn: NavigationButtonDirective) {\n    this.page.actionBar.navigationButton = navBtn.element.nativeElement;\n  }\n\n  public onNavButtonDestroy(navBtn: NavigationButtonDirective) {\n    const nav = <NavigationButton>navBtn.element.nativeElement;\n    if (nav && this.page.actionBar.navigationButton === nav) {\n      this.page.actionBar.navigationButton = null;\n    }\n  }\n\n  public onActionInit(item: ActionItemDirective) {\n    this.page.actionBar.actionItems.addItem(item.element.nativeElement);\n  }\n\n  public onActionDestroy(item: ActionItemDirective) {\n    if (item.element.nativeElement.actionBar) {\n      this.page.actionBar.actionItems.removeItem(item.element.nativeElement);\n    }\n  }\n}\n\n@Directive({\n  selector: 'ActionItem', // tslint:disable-line:directive-selector\n})\nexport class ActionItemDirective implements OnDestroy {\n  constructor(public element: ElementRef, @Optional() private ownerScope: ActionBarScope) {\n    if (this.ownerScope) {\n      this.ownerScope.onActionInit(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ownerScope) {\n      this.ownerScope.onActionDestroy(this);\n    }\n  }\n}\n\n@Directive({\n  selector: 'NavigationButton', // tslint:disable-line:directive-selector\n})\nexport class NavigationButtonDirective implements OnDestroy {\n  constructor(public element: ElementRef, @Optional() private ownerScope: ActionBarScope) {\n    if (this.ownerScope) {\n      this.ownerScope.onNavButtonInit(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ownerScope) {\n      this.ownerScope.onNavButtonDestroy(this);\n    }\n  }\n}\n","import { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, Directive, DoCheck, ElementRef, EmbeddedViewRef, EventEmitter, forwardRef, Host, HostListener, Inject, InjectionToken, Input, IterableDiffer, IterableDiffers, NgZone, OnDestroy, Output, TemplateRef, ViewChild, ViewContainerRef, ɵisListLikeIterable as isListLikeIterable, ɵmarkDirty } from '@angular/core';\nimport { ItemEventData, KeyedTemplate, LayoutBase, ListView, ObservableArray, profile, View } from '@nativescript/core';\n\nimport { extractSingleViewRecursive } from '../../element-registry/registry';\nimport { NativeScriptDebug } from '../../trace';\nimport { NgViewTemplate } from '../../view-refs';\n\nconst NG_VIEW = '_ngViewRef';\n\nexport interface TemplatedItemsHost<T = any> {\n  registerTemplate(key: string, template: TemplateRef<T>);\n}\n\nexport const TEMPLATED_ITEMS_COMPONENT = new InjectionToken<TemplatedItemsHost>('TemplatedItemsComponent');\n\nexport class ItemContext<T> {\n  constructor(public $implicit?: T, public item?: T, public index?: number, public even?: boolean, public odd?: boolean) {}\n}\n\nexport class NsTemplatedItem<T> implements NgViewTemplate<{ index: number; data: T }> {\n  constructor(private template: TemplateRef<ItemContext<T>>, public location: ViewContainerRef, private onCreate?: (view: View) => void) {}\n  create(context?: { index: number; data: T }): View {\n    const viewRef = this.location.createEmbeddedView(this.template, context ? this.setupItemContext(context) : new ItemContext());\n    viewRef.detach(); // create detached, just beware this doesn't always work and the view might run the first CD anyway.\n    const resultView = getItemViewRoot(viewRef);\n    resultView[NG_VIEW] = viewRef;\n    if (this.onCreate) {\n      this.onCreate(resultView);\n    }\n    return resultView;\n  }\n  update(view: View, context?: { index: number; data: T }): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    this.setupItemContext(context, viewRef);\n    viewRef?.detectChanges();\n  }\n  attach(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.reattach();\n    viewRef?.detectChanges();\n  }\n  detach(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.detach();\n  }\n  dispose(view: View): void {\n    const viewRef = this.getEmbeddedViewRef(view);\n    viewRef?.destroy();\n  }\n\n  getEmbeddedViewRef(view: View): EmbeddedViewRef<ItemContext<T>> | undefined {\n    let viewRef = view[NG_VIEW];\n\n    // Getting angular view from original element (in cases when ProxyViewContainer\n    // is used NativeScript internally wraps it in a StackLayout)\n    if (!viewRef && view instanceof LayoutBase && view.getChildrenCount() > 0) {\n      viewRef = view.getChildAt(0)[NG_VIEW];\n    }\n    return viewRef;\n  }\n\n  isValid(view: View) {\n    return !!this.getEmbeddedViewRef(view);\n  }\n\n  private setupItemContext({ index, data }: { index: number; data: T }, oldView?: EmbeddedViewRef<ItemContext<T>>): ItemContext<T> {\n    const context: ItemContext<T> = oldView ? oldView.context : new ItemContext<T>();\n    context.$implicit = data;\n    context.item = data;\n    context.index = index;\n    context.even = index % 2 === 0;\n    context.odd = !context.even;\n    return context;\n  }\n}\n\nexport interface SetupItemViewArgs<T> {\n  view: EmbeddedViewRef<ItemContext<T>>;\n  nativeElement: View;\n  data: T;\n  index: number;\n  context: ItemContext<T>;\n}\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'ListView',\n  template: `<DetachedContainer>\n    <ng-container #loader></ng-container>\n  </DetachedContainer>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: TEMPLATED_ITEMS_COMPONENT, useExisting: forwardRef(() => ListViewComponent) }],\n})\nexport class ListViewComponent<T = any> implements DoCheck, OnDestroy, AfterContentInit, TemplatedItemsHost {\n  public get nativeElement(): ListView {\n    return this.templatedItemsView;\n  }\n\n  protected templatedItemsView: ListView;\n  protected _items: T[] | ObservableArray<T>;\n  protected _differ: IterableDiffer<T>;\n  protected _templateMap: Map<string, NsTemplatedItem<T>>;\n  protected _viewToTemplate: WeakMap<View, string> = new WeakMap<View, string>();\n\n  @ViewChild('loader', { read: ViewContainerRef, static: true }) loader: ViewContainerRef;\n\n  @Output() public setupItemView = new EventEmitter<SetupItemViewArgs<T>>();\n\n  @ContentChild(TemplateRef, { read: TemplateRef, static: false }) itemTemplateQuery: TemplateRef<ItemContext<T>>;\n\n  fallbackItemTemplate: TemplateRef<ItemContext<T>>;\n\n  @Input()\n  get items() {\n    return this._items;\n  }\n\n  set items(value: T[] | ObservableArray<T>) {\n    this._items = value;\n    let needDiffer = true;\n    if (value instanceof ObservableArray) {\n      needDiffer = false;\n    }\n    if (needDiffer && !this._differ && isListLikeIterable(value)) {\n      this._differ = this._iterableDiffers.find(this._items).create((_index, item) => {\n        return item;\n      });\n    }\n\n    this.templatedItemsView.items = this._items;\n  }\n\n  constructor(_elementRef: ElementRef, private _iterableDiffers: IterableDiffers, private zone: NgZone) {\n    this.templatedItemsView = _elementRef.nativeElement;\n  }\n\n  ngAfterContentInit() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.listViewLog('TemplatedItemsView.ngAfterContentInit()');\n    }\n\n    this.setItemTemplates();\n  }\n\n  ngOnDestroy() {\n    this.templatedItemsView = null;\n\n    if (this._templateMap) {\n      this._templateMap.clear();\n    }\n  }\n\n  private setItemTemplates() {\n    // The itemTemplateQuery may be changed after list items are added that contain <template> inside,\n    // so cache and use only the original template to avoid errors.\n    this.fallbackItemTemplate = this.itemTemplateQuery;\n    if (this.fallbackItemTemplate && !this._templateMap?.has('default')) {\n      // apparently you can create a Core ListView without a template...\n      // we also add a fallback default for when the user sets multiple templates but no templateSelector\n      this.registerTemplate('default', this.fallbackItemTemplate);\n    }\n\n    if (this._templateMap) {\n      // sometimes templates are registered before loader is ready, so we update here\n      this._templateMap.forEach((t) => (t.location = this.loader));\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog('Setting templates');\n      }\n\n      const templates: KeyedTemplate[] = [];\n      this._templateMap.forEach((value, key) => {\n        templates.push({\n          createView: () => null, // we'll handle creation later, otherwise core will create an invalid template\n          key,\n        });\n      });\n      this.templatedItemsView.itemTemplates = templates;\n    }\n  }\n\n  public registerTemplate(key: string, template: TemplateRef<ItemContext<T>>) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.listViewLog(`registerTemplate for key: ${key}, ${this.loader}`);\n    }\n\n    if (!this._templateMap) {\n      this._templateMap = new Map<string, NsTemplatedItem<T>>();\n    }\n\n    this._templateMap.set(\n      key,\n      new NsTemplatedItem<T>(template, this.loader, (v) => this._viewToTemplate.set(v, key))\n    );\n  }\n\n  @HostListener('itemLoading', ['$event'])\n  @profile\n  public onItemLoading(args: ItemEventData) {\n    if (!this._templateMap) {\n      return;\n    }\n\n    const index = args.index;\n    const lview: ListView = <ListView>args.object;\n    const items = lview.items;\n    const currentItem = 'getItem' in items && typeof items.getItem === 'function' ? items.getItem(index) : items[index];\n\n    let template: NsTemplatedItem<T>;\n\n    if (args.view) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog(`onItemLoading: ${index} - Reusing existing view`);\n      }\n\n      let templateKey = this._viewToTemplate.get(args.view);\n      if (!templateKey && args.view instanceof LayoutBase && args.view.getChildrenCount() > 0) {\n        templateKey = this._viewToTemplate.get(args.view.getChildAt(0));\n      }\n      if (!templateKey) {\n        // this template was not created by us\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewError(`ViewReference not found for item ${index}. View recycling is not working`);\n        }\n        return;\n      }\n      template = this._templateMap.get(templateKey);\n      template.update(args.view, { index, data: currentItem });\n    } else {\n      // this should never enter if it creates the view\n      const templateKey = typeof lview.itemTemplateSelector === 'function' ? lview.itemTemplateSelector(currentItem, index, items) : 'default';\n      template = this._templateMap.get(templateKey);\n      if (!template) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewError(`Template for key '${templateKey}' not found.`);\n        }\n        return;\n      }\n      args.view = template.create({ index, data: currentItem });\n    }\n    this.setupViewRef(template.getEmbeddedViewRef(args.view), currentItem, index, args.view);\n\n    template.attach(args.view);\n    ɵmarkDirty(this);\n  }\n\n  public setupViewRef(viewRef: EmbeddedViewRef<ItemContext<T>>, data: T, index: number, nativeElement: View): void {\n    const context = viewRef.context;\n    this.setupItemView.next({ view: viewRef, nativeElement, data: data, index: index, context: context });\n  }\n\n  ngDoCheck() {\n    if (this._differ) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.listViewLog('ngDoCheck() - execute differ');\n      }\n\n      const changes = this._differ.diff(this._items as T[]);\n      if (changes) {\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.listViewLog('ngDoCheck() - refresh');\n        }\n\n        this.templatedItemsView.refresh();\n      }\n    }\n  }\n}\n\nexport type RootLocator = (nodes: Array<unknown>, nestLevel: number) => View;\n\nexport function getItemViewRoot(viewRef: EmbeddedViewRef<unknown>, rootLocator: RootLocator = extractSingleViewRecursive): View {\n  const rootView = rootLocator(viewRef.rootNodes, 0);\n  return rootView;\n}\n\n// eslint-disable-next-line @angular-eslint/directive-selector\n@Directive({ selector: '[nsTemplateKey],[nsTemplateKeys]' })\nexport class TemplateKeyDirective<T> {\n  constructor(private templateRef: TemplateRef<T>, @Host() @Inject(TEMPLATED_ITEMS_COMPONENT) private comp: TemplatedItemsHost<T>) {}\n\n  @Input()\n  set nsTemplateKey(value: string) {\n    if (this.comp && this.templateRef) {\n      this.comp.registerTemplate(value, this.templateRef);\n    }\n  }\n  @Input()\n  set nsTemplateKeys(values: string[]) {\n    // single template with multiple keys\n    if (this.comp && this.templateRef && values) {\n      values.forEach((value) => this.comp.registerTemplate(value, this.templateRef));\n    }\n  }\n}\n","/**\n * Utility method to ensure a NgModule is only imported once in a codebase, otherwise will throw to help prevent accidental double importing\n * @param parentModule Parent module name\n * @param moduleName The module name\n */\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import ${moduleName} in the AppModule only.`);\n  }\n}\n\n/**\n * Utility method which will only fire the callback once ever\n * @param fn callback to call only once\n */\nexport function once(fn: Function) {\n  let wasCalled = false;\n\n  return function wrapper() {\n    if (wasCalled) {\n      return;\n    }\n\n    wasCalled = true;\n    fn.apply(null, arguments);\n  };\n}\n\n/** Interface that can be used to generically type a class. */\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n","import { Injectable } from '@angular/core';\nimport { Frame } from '@nativescript/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FrameService {\n  // TODO: Add any methods that are needed to handle frame/page navigation\n  getFrame(): Frame {\n    return Frame.topmost();\n  }\n}\n","import { Frame, NavigationTransition } from '@nativescript/core';\nimport { DefaultUrlSerializer, UrlSegmentGroup, UrlTree, ActivatedRouteSnapshot, Params } from '@angular/router';\n\nexport interface LocationState {\n  queryParams: Params;\n  segmentGroup: UrlSegmentGroup;\n  isRootSegmentGroup: boolean;\n  isPageNavigation: boolean;\n  frame?: Frame;\n}\n\nexport interface NavigationOptions {\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: NavigationTransition;\n}\n\nexport class Outlet {\n  showingModal: boolean;\n  modalNavigationDepth: number;\n  parent: Outlet;\n  isPageNavigationBack: boolean;\n\n  // More than one key available when using NSEmptyOutletComponent component\n  // in module that lazy loads children (loadChildren) and has outlet name.\n  outletKeys: Array<string>;\n\n  // More than one frame available when using NSEmptyOutletComponent component\n  // in module that lazy loads children (loadChildren) and has outlet name.\n  frames: Array<Frame> = [];\n  // The url path to the Outlet.\n  // E.G: the path to Outlet3 that is nested Outlet1(home)->Outlet2(nested1)->Outlet3(nested2)\n  // will be 'home/nested1'\n  path: string;\n  pathByOutlets: string;\n  states: Array<LocationState> = [];\n  isNSEmptyOutlet: boolean;\n\n  // Used in reuse-strategy by its children to determine if they should be detached too.\n  shouldDetach: boolean = true;\n  constructor(outletKey: string, path: string, pathByOutlets: string, modalNavigationDepth?: number) {\n    this.outletKeys = [outletKey];\n    this.isPageNavigationBack = false;\n    this.showingModal = false;\n    this.modalNavigationDepth = modalNavigationDepth || 0;\n    this.pathByOutlets = pathByOutlets;\n    this.path = path;\n  }\n\n  containsFrame(frame: Frame): boolean {\n    return this.frames.indexOf(frame) > -1;\n  }\n\n  peekState(): LocationState {\n    if (this.states.length > 0) {\n      return this.states[this.states.length - 1];\n    }\n    return null;\n  }\n\n  containsTopState(stateUrl: string): boolean {\n    const lastState = this.peekState();\n    return lastState && lastState.segmentGroup.toString() === stateUrl;\n  }\n\n  // Search for frame that can go back.\n  // Nested 'primary' outlets could result in Outlet with multiple navigatable frames.\n  getFrameToBack(): Frame {\n    let frame = this.frames[this.frames.length - 1];\n\n    if (!this.isNSEmptyOutlet) {\n      for (let index = this.frames.length - 1; index >= 0; index--) {\n        const currentFrame = this.frames[index];\n        if (currentFrame.canGoBack()) {\n          frame = currentFrame;\n          break;\n        }\n      }\n    }\n\n    return frame;\n  }\n}\n\nexport const defaultNavOptions: NavigationOptions = {\n  clearHistory: false,\n  animated: true,\n};\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { DefaultUrlSerializer, UrlSegmentGroup, UrlTree, ActivatedRouteSnapshot, Params } from '@angular/router';\nimport { Frame } from '@nativescript/core';\nimport { NativeScriptDebug } from '../../trace';\nimport { isPresent } from '../../utils/lang-facade';\nimport { FrameService } from '../frame.service';\nimport { Outlet, NavigationOptions, LocationState, defaultNavOptions } from './ns-location-utils';\nimport { START_PATH } from '../../tokens';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NSLocationStrategy extends LocationStrategy {\n  private outlets: Array<Outlet> = [];\n  private currentOutlet: Outlet;\n\n  private popStateCallbacks = new Array<(_: any) => any>();\n  private _currentNavigationOptions: NavigationOptions;\n  private currentUrlTree: UrlTree;\n\n  public _modalNavigationDepth = 0;\n\n  constructor(private frameService: FrameService, @Inject(START_PATH) @Optional() private startPath?: string) {\n    super();\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.constructor()');\n    }\n  }\n\n  path(): string {\n    if (!this.currentUrlTree) {\n      return this.startPath || '/';\n    }\n\n    const state = this.currentOutlet && this.currentOutlet.peekState();\n    if (!state) {\n      return '/';\n    }\n\n    let tree = this.currentUrlTree;\n    let changedOutlet = this.getSegmentGroupByOutlet(this.currentOutlet);\n\n    // Handle case where the user declares a component at path \"/\".\n    // The url serializer doesn't parse this url as having a primary outlet.\n    if (state.isRootSegmentGroup) {\n      tree.root = state.segmentGroup;\n    } else if (changedOutlet) {\n      this.updateSegmentGroup(tree.root, changedOutlet, state.segmentGroup);\n    }\n\n    const urlSerializer = new DefaultUrlSerializer();\n    tree.queryParams = state.queryParams;\n    const url = urlSerializer.serialize(tree);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.path(): ' + url);\n    }\n    return url;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.prepareExternalUrl() internal: ' + internal);\n    }\n    return internal;\n  }\n\n  pushState(state: any, title: string, url: string, queryParams: string): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.pushState state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n    }\n    this.pushStateInternal(state, title, url, queryParams);\n  }\n\n  pushStateInternal(state: any, title: string, url: string, queryParams: string): void {\n    const urlSerializer = new DefaultUrlSerializer();\n    this.currentUrlTree = urlSerializer.parse(url);\n    const urlTreeRoot = this.currentUrlTree.root;\n\n    // Handle case where the user declares a component at path \"/\".\n    // The url serializer doesn't parse this url as having a primary outlet.\n    if (!Object.keys(urlTreeRoot.children).length) {\n      const segmentGroup = this.currentUrlTree && this.currentUrlTree.root;\n      const outletKey = this.getOutletKey(this.getSegmentGroupFullPath(segmentGroup), 'primary');\n      const outlet = this.findOutlet(outletKey);\n\n      if (outlet && this.updateStates(outlet, segmentGroup, this.currentUrlTree.queryParams)) {\n        this.currentOutlet = outlet; // If states updated\n      } else if (!outlet) {\n        // tslint:disable-next-line:max-line-length\n        const rootOutlet = this.createOutlet('primary', null, segmentGroup, null, null, this.currentUrlTree.queryParams);\n        this.currentOutlet = rootOutlet;\n      }\n\n      this.currentOutlet.peekState().isRootSegmentGroup = true;\n      return;\n    }\n\n    const queue = [];\n    let currentTree = <any>urlTreeRoot;\n\n    while (currentTree) {\n      Object.keys(currentTree.children).forEach((outletName) => {\n        const currentSegmentGroup = currentTree.children[outletName];\n        currentSegmentGroup.outlet = outletName;\n        currentSegmentGroup.root = urlTreeRoot;\n\n        const outletPath = this.getSegmentGroupFullPath(currentTree);\n        let outletKey = this.getOutletKey(outletPath, outletName);\n        let outlet = this.findOutlet(outletKey);\n\n        const parentOutletName = currentTree.outlet || '';\n        const parentOutletPath = this.getSegmentGroupFullPath(currentTree.parent);\n        const parentOutletKey = this.getOutletKey(parentOutletPath, parentOutletName);\n        const parentOutlet = this.findOutlet(parentOutletKey);\n\n        const containsLastState = outlet && outlet.containsTopState(currentSegmentGroup.toString());\n        if (!outlet) {\n          // tslint:disable-next-line:max-line-length\n          outlet = this.createOutlet(outletKey, outletPath, currentSegmentGroup, parentOutlet, this._modalNavigationDepth, this.currentUrlTree.queryParams);\n          this.currentOutlet = outlet;\n        } else if (this._modalNavigationDepth > 0 && outlet.showingModal && !containsLastState) {\n          // Navigation inside modal view.\n          this.upsertModalOutlet(outlet, currentSegmentGroup, this.currentUrlTree.queryParams);\n        } else {\n          outlet.parent = parentOutlet;\n\n          if (this.updateStates(outlet, currentSegmentGroup, this.currentUrlTree.queryParams)) {\n            this.currentOutlet = outlet; // If states updated\n          }\n        }\n\n        queue.push(currentSegmentGroup);\n      });\n\n      currentTree = queue.shift();\n    }\n  }\n\n  replaceState(state: any, title: string, url: string, queryParams: string): void {\n    const states = this.currentOutlet && this.currentOutlet.states;\n\n    if (states && states.length > 0) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy.replaceState changing existing state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n      }\n    } else {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy.replaceState pushing new state: ' + `${state}, title: ${title}, url: ${url}, queryParams: ${queryParams}`);\n      }\n      this.pushStateInternal(state, title, url, queryParams);\n    }\n  }\n\n  forward(): void {\n    throw new Error('NSLocationStrategy.forward() - not implemented');\n  }\n\n  back(outlet?: Outlet, frame?: Frame): void {\n    this.currentOutlet = outlet || this.currentOutlet;\n\n    if (this.currentOutlet.isPageNavigationBack) {\n      const states = this.currentOutlet.states;\n      // We are navigating to the previous page\n      // clear the stack until we get to a page navigation state\n      let state = states.pop();\n      let count = 1;\n\n      if (frame) {\n        while (state.frame && state.frame !== frame) {\n          state = states.pop();\n          count++;\n        }\n      }\n\n      while (!state.isPageNavigation) {\n        state = states.pop();\n        count++;\n      }\n\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog(`NSLocationStrategy.back() while navigating back. States popped: ${count}`);\n      }\n      this.callPopState(state, true);\n    } else {\n      let state = this.currentOutlet.peekState();\n      if (state && state.isPageNavigation) {\n        // This was a page navigation - so navigate through frame.\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('NSLocationStrategy.back() while not navigating back but top' + ' state is page - will call frame.goBack()');\n        }\n\n        if (!outlet) {\n          const topmostFrame = this.frameService.getFrame();\n          this.currentOutlet = this.getOutletByFrame(topmostFrame) || this.currentOutlet;\n        }\n\n        const frameToBack: Frame = this.currentOutlet.getFrameToBack();\n        if (frameToBack) {\n          frameToBack.goBack();\n        }\n      } else {\n        // Nested navigation - just pop the state\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('NSLocationStrategy.back() while not navigating back but top' + ' state is not page - just pop');\n        }\n\n        this.callPopState(this.currentOutlet.states.pop(), true);\n      }\n    }\n  }\n\n  canGoBack(outlet?: Outlet) {\n    outlet = outlet || this.currentOutlet;\n    return outlet.states.length > 1;\n  }\n\n  onPopState(fn: (_: any) => any): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.onPopState');\n    }\n    this.popStateCallbacks.push(fn);\n  }\n\n  getBaseHref(): string {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.getBaseHref()');\n    }\n    return '';\n  }\n\n  private callPopState(state: LocationState, pop: boolean = true, outlet?: Outlet) {\n    outlet = outlet || this.currentOutlet;\n    const urlSerializer = new DefaultUrlSerializer();\n    let changedOutlet = this.getSegmentGroupByOutlet(outlet);\n\n    if (state && changedOutlet) {\n      this.updateSegmentGroup(this.currentUrlTree.root, changedOutlet, state.segmentGroup);\n    } else if (changedOutlet) {\n      // when closing modal view there are scenarios (e.g. root viewContainerRef) when we need\n      // to clean up the named page router outlet to make sure we will open the modal properly again if needed.\n      this.updateSegmentGroup(this.currentUrlTree.root, changedOutlet, null);\n    }\n\n    const url = urlSerializer.serialize(this.currentUrlTree);\n    const change = { url: url, pop: pop };\n    for (let fn of this.popStateCallbacks) {\n      fn(change);\n    }\n  }\n\n  public toString() {\n    let result = [];\n\n    this.outlets.forEach((outlet) => {\n      const outletStates = outlet.states;\n      const outletLog = outletStates\n        // tslint:disable-next-line:max-line-length\n        .map((v, i) => `${outlet.outletKeys}.${i}.[${v.isPageNavigation ? 'PAGE' : 'INTERNAL'}].[${outlet.modalNavigationDepth ? 'MODAL' : 'BASE'}] \"${v.segmentGroup.toString()}\"`)\n        .reverse();\n\n      result = result.concat(outletLog);\n    });\n\n    return result.join('\\n');\n  }\n\n  // Methods for syncing with page navigation in PageRouterOutlet\n  public _beginBackPageNavigation(frame: Frame) {\n    const outlet: Outlet = this.getOutletByFrame(frame);\n\n    if (!outlet || outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('Attempted to call startGoBack while going back.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.startGoBack()');\n    }\n    outlet.isPageNavigationBack = true;\n\n    this.currentOutlet = outlet;\n  }\n\n  public _finishBackPageNavigation(frame: Frame) {\n    const outlet: Outlet = this.getOutletByFrame(frame);\n\n    if (!outlet || !outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('Attempted to call endGoBack while not going back.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.finishBackPageNavigation()');\n    }\n    outlet.isPageNavigationBack = false;\n  }\n\n  public _beginModalNavigation(frame: Frame): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._beginModalNavigation()');\n    }\n\n    this.currentOutlet = this.getOutletByFrame(frame) || this.currentOutlet;\n\n    // It is possible to have frame, but not corresponding Outlet, if\n    // showing modal dialog on app.component.ts ngOnInit() e.g. In that case\n    // the modal is treated as none modal navigation.\n    if (this.currentOutlet) {\n      this.currentOutlet.showingModal = true;\n      this._modalNavigationDepth++;\n    }\n  }\n\n  public _closeModalNavigation() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.closeModalNavigation()');\n    }\n\n    const isShowingModal = this._modalNavigationDepth > 0;\n\n    if (isShowingModal) {\n      this._modalNavigationDepth--;\n    }\n\n    // currentOutlet should be the one that corresponds to the topmost frame\n    const topmostOutlet = this.getOutletByFrame(this.frameService.getFrame());\n    const outlet = this.findOutletByModal(this._modalNavigationDepth, isShowingModal) || topmostOutlet;\n\n    if (outlet) {\n      this.currentOutlet = outlet;\n      this.currentOutlet.showingModal = false;\n      this.callPopState(this.currentOutlet.peekState(), false);\n    }\n  }\n\n  public _beginPageNavigation(frame: Frame): NavigationOptions {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._beginPageNavigation()');\n    }\n\n    this.currentOutlet = this.getOutletByFrame(frame) || this.currentOutlet;\n    const lastState = this.currentOutlet.peekState();\n\n    if (lastState) {\n      lastState.isPageNavigation = true;\n    }\n\n    const navOptions = this._currentNavigationOptions || defaultNavOptions;\n    if (navOptions.clearHistory) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('NSLocationStrategy._beginPageNavigation clearing states history');\n      }\n      this.currentOutlet.states = [lastState];\n    }\n\n    this._currentNavigationOptions = undefined;\n    return navOptions;\n  }\n\n  public _setNavigationOptions(options: NavigationOptions) {\n    this._currentNavigationOptions = {\n      clearHistory: isPresent(options.clearHistory) ? options.clearHistory : false,\n      animated: isPresent(options.animated) ? options.animated : true,\n      transition: options.transition,\n    };\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy._setNavigationOptions(' + `${JSON.stringify(this._currentNavigationOptions)})`);\n    }\n  }\n\n  public _getOutlets(): Array<Outlet> {\n    return this.outlets;\n  }\n\n  updateOutletFrame(outlet: Outlet, frame: Frame, isEmptyOutletFrame: boolean) {\n    const lastState = outlet.peekState();\n\n    if (lastState && !lastState.frame && !isEmptyOutletFrame) {\n      lastState.frame = frame;\n    }\n\n    if (!outlet.containsFrame(frame)) {\n      outlet.frames.push(frame);\n    }\n    this.currentOutlet = outlet;\n  }\n\n  clearOutlet(frame: Frame) {\n    this.outlets = this.outlets.filter((currentOutlet) => {\n      let isEqualToCurrent;\n\n      if (this.currentOutlet) {\n        isEqualToCurrent = currentOutlet.pathByOutlets === this.currentOutlet.pathByOutlets;\n      }\n\n      // Remove outlet from the url tree.\n      if (currentOutlet.containsFrame(frame) && !isEqualToCurrent) {\n        this.callPopState(null, true, currentOutlet);\n      }\n\n      // Skip frames filtering since currentOutlet is <router-outlet> when no frames available.\n      if (currentOutlet.frames.length && !currentOutlet.isNSEmptyOutlet) {\n        currentOutlet.frames = currentOutlet.frames.filter((currentFrame) => currentFrame !== frame);\n        return currentOutlet.frames.length;\n      }\n\n      return !currentOutlet.containsFrame(frame);\n    });\n  }\n\n  getSegmentGroupFullPath(segmentGroup: UrlSegmentGroup): string {\n    let fullPath = '';\n\n    while (segmentGroup) {\n      const url = segmentGroup.toString();\n\n      if (fullPath) {\n        fullPath = (url ? url + '/' : '') + fullPath;\n      } else {\n        fullPath = url;\n      }\n\n      segmentGroup = segmentGroup.parent;\n    }\n\n    return fullPath;\n  }\n\n  getRouteFullPath(currentRoute: any): string {\n    const outletName = currentRoute.outlet;\n    let fullPath;\n\n    currentRoute = currentRoute.parent;\n    while (currentRoute) {\n      const urls = currentRoute.url.value || currentRoute.url;\n      let url = urls;\n\n      if (Array.isArray(urls)) {\n        url = url.join('/');\n      }\n\n      fullPath = fullPath ? (url ? url + '/' : url) + fullPath : url;\n      currentRoute = currentRoute.parent;\n    }\n\n    return fullPath ? fullPath + '-' + outletName : outletName;\n  }\n\n  getPathByOutlets(urlSegmentGroup: any): string {\n    if (!urlSegmentGroup) {\n      return '';\n    }\n\n    let pathToOutlet;\n    let lastPath = urlSegmentGroup.outlet || 'primary';\n    let parent = urlSegmentGroup.parent;\n\n    while (parent && urlSegmentGroup.root !== parent) {\n      if (parent && parent.outlet !== lastPath) {\n        if (lastPath === 'primary') {\n          lastPath = parent.outlet;\n        } else {\n          lastPath = parent.outlet;\n          pathToOutlet = lastPath + '-' + (pathToOutlet || urlSegmentGroup.outlet);\n        }\n      }\n\n      parent = parent.parent;\n    }\n\n    return pathToOutlet || lastPath;\n  }\n\n  findOutlet(outletKey: string, activatedRouteSnapshot?: ActivatedRouteSnapshot): Outlet {\n    let outlet: Outlet = this.outlets.find((currentOutlet) => {\n      let equalModalDepth = currentOutlet.modalNavigationDepth === this._modalNavigationDepth;\n      return equalModalDepth && currentOutlet.outletKeys.indexOf(outletKey) > -1;\n    });\n\n    // No Outlet with the given outletKey could happen when using nested unnamed p-r-o\n    // primary -> primary -> prymary\n    if (!outlet && activatedRouteSnapshot) {\n      const pathByOutlets = this.getPathByOutlets(activatedRouteSnapshot);\n      outlet = this.outlets.find((currentOutlet) => {\n        let equalModalDepth = currentOutlet.modalNavigationDepth === this._modalNavigationDepth;\n        return equalModalDepth && currentOutlet.pathByOutlets === pathByOutlets;\n      });\n    }\n\n    return outlet;\n  }\n\n  private findOutletByModal(modalNavigation: number, isShowingModal?: boolean): Outlet {\n    return this.outlets.find((outlet) => {\n      let equalModalDepth = outlet.modalNavigationDepth === modalNavigation;\n      return isShowingModal ? equalModalDepth && outlet.showingModal : equalModalDepth;\n    });\n  }\n\n  private getOutletByFrame(frame: Frame): Outlet {\n    let outlet;\n\n    for (let index = 0; index < this.outlets.length; index++) {\n      const currentOutlet = this.outlets[index];\n\n      if (currentOutlet.containsFrame(frame)) {\n        outlet = currentOutlet;\n        break;\n      }\n    }\n\n    return outlet;\n  }\n\n  private updateStates(outlet: Outlet, currentSegmentGroup: UrlSegmentGroup, queryParams: Params): boolean {\n    const isNewPage = outlet.states.length === 0;\n    const lastState = outlet.states[outlet.states.length - 1];\n    const equalStateUrls = outlet.containsTopState(currentSegmentGroup.toString());\n\n    const locationState: LocationState = {\n      segmentGroup: currentSegmentGroup,\n      isRootSegmentGroup: false,\n      isPageNavigation: isNewPage,\n      queryParams: { ...queryParams },\n    };\n\n    if (!lastState || !equalStateUrls) {\n      outlet.states.push(locationState);\n\n      // Update last state segmentGroup of parent Outlet.\n      if (this._modalNavigationDepth === 0 && !outlet.showingModal) {\n        this.updateParentsStates(outlet, currentSegmentGroup.parent);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private updateParentsStates(outlet: Outlet, newSegmentGroup: UrlSegmentGroup) {\n    let parentOutlet = outlet.parent;\n\n    // Update parents lastState segmentGroups\n    while (parentOutlet && newSegmentGroup) {\n      const state = parentOutlet.peekState();\n\n      if (state) {\n        state.segmentGroup = newSegmentGroup;\n        newSegmentGroup = newSegmentGroup.parent;\n        parentOutlet = parentOutlet.parent;\n      }\n    }\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private createOutlet(outletKey: string, path: string, segmentGroup: any, parent: Outlet, modalNavigation?: number, queryParams: Params = {}): Outlet {\n    const pathByOutlets = this.getPathByOutlets(segmentGroup);\n    const newOutlet = new Outlet(outletKey, path, pathByOutlets, modalNavigation);\n\n    const locationState: LocationState = {\n      segmentGroup: segmentGroup,\n      isRootSegmentGroup: false,\n      isPageNavigation: true, // It is a new OutletNode.\n      queryParams: { ...queryParams },\n    };\n\n    newOutlet.states = [locationState];\n    newOutlet.parent = parent;\n    this.outlets.push(newOutlet);\n\n    // Update last state segmentGroup of parent Outlet.\n    if (this._modalNavigationDepth === 0 && !newOutlet.showingModal) {\n      this.updateParentsStates(newOutlet, segmentGroup.parent);\n    }\n\n    return newOutlet;\n  }\n\n  private getSegmentGroupByOutlet(outlet: Outlet): UrlSegmentGroup {\n    const pathList = outlet.pathByOutlets.split('-');\n    let segmentGroup = this.currentUrlTree.root;\n    let pathToOutlet;\n\n    for (let index = 0; index < pathList.length; index++) {\n      const currentPath = pathList[index];\n      const childrenCount = Object.keys(segmentGroup.children).length;\n\n      if (childrenCount && segmentGroup.children[currentPath]) {\n        const url = segmentGroup.toString();\n        pathToOutlet = pathToOutlet ? pathToOutlet + '/' + url : url;\n        segmentGroup = segmentGroup.children[currentPath];\n      } else {\n        // If no child outlet found with the given name - forget about all previously found outlets.\n        // example: seaching for 'primary-second-primary' shouldn't return 'primary-second'\n        // if no 'primary' child available on 'second'.\n        segmentGroup = null;\n        break;\n      }\n    }\n\n    // Paths should also match since there could be another Outlet\n    // with the same pathByOutlets but different url path.\n    if (segmentGroup && outlet.path && pathToOutlet && outlet.path !== pathToOutlet) {\n      segmentGroup = null;\n    }\n\n    return segmentGroup;\n  }\n\n  // Traversal and replacement of segmentGroup.\n  private updateSegmentGroup(rootNode: any, oldSegmentGroup: UrlSegmentGroup, newSegmentGroup: UrlSegmentGroup) {\n    const queue = [];\n    let currentTree = rootNode;\n\n    while (currentTree) {\n      Object.keys(currentTree.children).forEach((outletName) => {\n        if (currentTree.children[outletName] === oldSegmentGroup) {\n          if (newSegmentGroup) {\n            currentTree.children[outletName] = newSegmentGroup;\n          } else {\n            delete currentTree.children[outletName];\n          }\n        }\n        queue.push(currentTree.children[outletName]);\n      });\n\n      currentTree = queue.shift();\n    }\n  }\n\n  private upsertModalOutlet(parentOutlet: Outlet, segmentedGroup: UrlSegmentGroup, queryParams: Params) {\n    let currentModalOutlet = this.findOutletByModal(this._modalNavigationDepth);\n\n    // We want to treat every p-r-o as a standalone Outlet.\n    if (!currentModalOutlet) {\n      if (this._modalNavigationDepth > 1) {\n        // The parent of the current Outlet should be the previous opened modal (if any).\n        parentOutlet = this.findOutletByModal(this._modalNavigationDepth - 1);\n      }\n\n      // No currentModalOutlet available when opening 'primary' p-r-o.\n      const outletName = 'primary';\n      const outletPath = parentOutlet.peekState().segmentGroup.toString();\n      const outletKey = this.getOutletKey(outletPath, outletName);\n      // tslint:disable-next-line:max-line-length\n      currentModalOutlet = this.createOutlet(outletKey, outletPath, segmentedGroup, parentOutlet, this._modalNavigationDepth, queryParams);\n      this.currentOutlet = currentModalOutlet;\n    } else if (this.updateStates(currentModalOutlet, segmentedGroup, queryParams)) {\n      this.currentOutlet = currentModalOutlet; // If states updated\n    }\n  }\n\n  private getOutletKey(path: string, outletName: string): string {\n    return path ? path + '-' + outletName : outletName;\n  }\n\n  ngOnDestroy() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NSLocationStrategy.ngOnDestroy()');\n    }\n\n    this.outlets = [];\n    this.currentOutlet = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Injectable, Injector, NgModuleRef, NgZone, Type, ViewContainerRef, ɵmarkDirty } from '@angular/core';\nimport { Application, ContentView, Frame, ShowModalOptions, View, ViewBase } from '@nativescript/core';\nimport { AppHostAsyncView, AppHostView } from '../../app-host-view';\nimport { DetachedLoader } from '../../cdk/detached-loader';\nimport { ComponentPortal } from '../../cdk/portal/common';\nimport { NativeScriptDomPortalOutlet } from '../../cdk/portal/nsdom-portal-outlet';\nimport { once } from '../../utils/general';\nimport { NgViewRef } from '../../view-refs';\nimport { NSLocationStrategy } from '../router/ns-location-strategy';\n\nexport type BaseShowModalOptions = Pick<ShowModalOptions, Exclude<keyof ShowModalOptions, 'closeCallback' | 'context'>>;\n\nexport interface ModalDialogOptions extends BaseShowModalOptions {\n  context?: any;\n  viewContainerRef?: ViewContainerRef;\n  moduleRef?: NgModuleRef<any>;\n  target?: View;\n}\n\nexport interface ShowDialogOptions extends BaseShowModalOptions {\n  containerRef?: ViewContainerRef;\n  /**\n   * which container to attach the change detection\n   * if not specified, attaches to the ApplicationRef (recommended)\n   */\n  attachToContainerRef?: ViewContainerRef;\n  injector: Injector;\n  context: any;\n  doneCallback;\n  pageFactory?: any;\n  parentView: ViewBase;\n  resolver: ComponentFactoryResolver;\n  type: Type<any>;\n}\n\nexport class ModalDialogParams {\n  constructor(public context: any = {}, public closeCallback: (...args) => any) {}\n}\n\n@Injectable()\nexport class ModalDialogService {\n  constructor(private location: NSLocationStrategy, private zone: NgZone, private appRef: ApplicationRef, private defaultInjector: Injector) {}\n\n  public showModal(type: Type<any>, options: ModalDialogOptions = {}): Promise<any> {\n    // if (!options.viewContainerRef) {\n    //   throw new Error('No viewContainerRef: ' + 'Make sure you pass viewContainerRef in ModalDialogOptions.');\n    // }\n\n    let parentView = options.viewContainerRef?.element.nativeElement || Application.getRootView();\n    if (options.target) {\n      parentView = options.target;\n    }\n\n    if ((parentView instanceof AppHostView || parentView instanceof AppHostAsyncView) && parentView.ngAppRoot) {\n      parentView = parentView.ngAppRoot;\n    }\n\n    // _ngDialogRoot is the first child of the previously detached proxy.\n    // It should have 'viewController' (iOS) or '_dialogFragment' (Android) available for\n    // presenting future modal views.\n    if (parentView._ngDialogRoot) {\n      parentView = parentView._ngDialogRoot;\n    }\n\n    // resolve from particular module (moduleRef)\n    // or from same module as parentView (viewContainerRef)\n    const componentInjector = options.moduleRef?.injector || options.viewContainerRef?.injector || this.defaultInjector;\n    const resolver = componentInjector.get(ComponentFactoryResolver);\n\n    let frame = parentView;\n    if (!(parentView instanceof Frame)) {\n      frame = (parentView.page && parentView.page.frame) || Frame.topmost();\n    }\n\n    this.location?._beginModalNavigation(frame);\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          this._showDialog({\n            ...options,\n            containerRef: options.viewContainerRef,\n            injector: componentInjector,\n            context: options.context,\n            doneCallback: resolve,\n            parentView,\n            resolver,\n            type,\n          });\n        } catch (err) {\n          reject(err);\n        }\n      }, 10);\n    });\n  }\n\n  private _showDialog(options: ShowDialogOptions): void {\n    let componentViewRef: NgViewRef<unknown>;\n    let detachedLoaderRef: ComponentRef<DetachedLoader>;\n    let portalOutlet: NativeScriptDomPortalOutlet;\n\n    const closeCallback = once((...args) => {\n      options.doneCallback.apply(undefined, args);\n      if (componentViewRef) {\n        componentViewRef.firstNativeLikeView.closeModal();\n        this.location._closeModalNavigation();\n        if (detachedLoaderRef || portalOutlet) {\n          this.zone.run(() => {\n            portalOutlet?.dispose();\n            detachedLoaderRef?.instance.detectChanges();\n            detachedLoaderRef?.destroy();\n          });\n        }\n      }\n    });\n\n    const modalParams = new ModalDialogParams(options.context, closeCallback);\n\n    const childInjector = Injector.create({\n      providers: [{ provide: ModalDialogParams, useValue: modalParams }],\n      parent: options.injector,\n    });\n    this.zone.run(() => {\n      // if we ever support templates in the old API\n      // if(options.templateRef) {\n      //     const detachedFactory = options.resolver.resolveComponentFactory(DetachedLoader);\n      //     if(options.attachToContainerRef) {\n      //         detachedLoaderRef = options.attachToContainerRef.createComponent(detachedFactory, 0, childInjector, null);\n      //     } else {\n      //         detachedLoaderRef = detachedFactory.create(childInjector); // this DetachedLoader is **completely** detached\n      //         this.appRef.attachView(detachedLoaderRef.hostView); // we attach it to the applicationRef, so it becomes a \"root\" view in angular's hierarchy\n      //     }\n      //     detachedLoaderRef.changeDetectorRef.detectChanges(); // force a change detection\n      //     detachedLoaderRef.instance.createTemplatePortal(options.templateRef);\n      // }\n      const targetView = new ContentView();\n      const portal = new ComponentPortal(options.type);\n      portalOutlet = new NativeScriptDomPortalOutlet(targetView, options.resolver, this.appRef, childInjector);\n      const componentRef = portalOutlet.attach(portal);\n      ɵmarkDirty(componentRef.instance);\n      componentViewRef = new NgViewRef(componentRef);\n      if (componentViewRef !== componentRef.location.nativeElement) {\n        componentRef.location.nativeElement._ngDialogRoot = componentViewRef.firstNativeLikeView;\n      }\n      // if we don't detach the view from its parent, ios gets mad\n      componentViewRef.detachNativeLikeView();\n      options.parentView.showModal(componentViewRef.firstNativeLikeView, { ...options, closeCallback });\n    });\n  }\n}\n","/**\n * This decorator delays a potentially unsafe event (like loaded/unloaded that will sometimes be called before ngOnInit) to be handled safely by ensuring it's called after a lifecycle hook.\n * @param runAfterEvent event/function call to wait until the event can be fired ('ngOnInit', 'ngAfterViewInit', ...)\n * @param options Optional event handling params\n * @returns decorator\n */\nexport function NativeScriptNgSafeEvent(\n  runAfterEvent: string,\n  options: {\n    onlyLast?: boolean;\n    onlyFirst?: boolean;\n    alwaysRunBefore?: string;\n  } = {}\n) {\n  const event = runAfterEvent;\n  return function (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n    type NgSafeType = {\n      events: {\n        [key: string]: {\n          done: boolean;\n          originalDelegate: (...args: unknown[]) => unknown;\n          buffer: Array<{\n            key: string;\n            fn: (...args: unknown[]) => unknown;\n          }>;\n        };\n      };\n      runBefore: {\n        [propertyKey: string]: (...args: unknown[]) => unknown;\n      };\n    };\n    function getNgSafe(): NgSafeType {\n      return target['__ng_safe__'];\n    }\n    if (!target['__ng_safe__']) {\n      const defaultNgSafe: NgSafeType = {\n        events: {},\n        runBefore: {},\n      };\n      target['__ng_safe__'] = defaultNgSafe;\n    }\n    if (!getNgSafe().events[event]) {\n      getNgSafe().events[event] = {\n        done: false,\n        buffer: [],\n        originalDelegate: target[event],\n      };\n      target[event] = function (...args) {\n        try {\n          if (getNgSafe().events[event].originalDelegate) {\n            return getNgSafe().events[event].originalDelegate.apply(this, args);\n          }\n        } finally {\n          getNgSafe().events[event].done = true;\n          getNgSafe().events[event].buffer.forEach((fn) => fn.fn());\n          getNgSafe().events[event].buffer = [];\n        }\n      };\n    }\n\n    if (options.alwaysRunBefore) {\n      getNgSafe().runBefore[propertyKey] = target[options.alwaysRunBefore];\n\n      target[`${options.alwaysRunBefore}`] = function (...args) {\n        getNgSafe()\n          .events[event].buffer.filter((v) => v.key === propertyKey)\n          .forEach((fn) => fn.fn());\n        getNgSafe().events[event].buffer = getNgSafe().events[event].buffer.filter((v) => v.key !== propertyKey);\n        getNgSafe().runBefore[propertyKey];\n        if (getNgSafe().runBefore[propertyKey]) {\n          return getNgSafe().runBefore[propertyKey].apply(this, args);\n        }\n      };\n    }\n\n    const oldFn = descriptor.value;\n    descriptor.value = function (...args) {\n      if (getNgSafe().events[event].done) {\n        return oldFn.apply(this, args);\n      }\n      let shouldPush = true;\n      if (options.onlyFirst || options.onlyLast) {\n        for (let i = 0; i < getNgSafe().events[event].buffer.length; i++) {\n          if (getNgSafe().events[event].buffer[i].key === propertyKey) {\n            if (options.onlyFirst) {\n              shouldPush = false;\n              break;\n            }\n            if (options.onlyLast) {\n              getNgSafe().events[event].buffer.splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n      if (shouldPush) {\n        getNgSafe().events[event].buffer.push({\n          key: propertyKey,\n          fn: oldFn.bind(this, args),\n        });\n      }\n    };\n  };\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TabView, TabViewItem } from '@nativescript/core';\n\nimport { InvisibleNode } from '../../views';\nimport { NativeScriptDebug } from '../../trace';\nimport { isBlank } from '../../utils';\n\ntype TextTransform = 'initial' | 'none' | 'capitalize' | 'uppercase' | 'lowercase';\nexport interface TabViewItemDef {\n  title?: string;\n  iconSource?: string;\n  textTransform?: TextTransform;\n}\n\n@Directive({\n  selector: 'TabView', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TabViewDirective implements AfterViewInit {\n  public tabView: TabView;\n  private _selectedIndex: number;\n  private viewInitialized: boolean;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._selectedIndex = value;\n    if (this.viewInitialized) {\n      this.tabView.selectedIndex = this._selectedIndex;\n    }\n  }\n\n  constructor(element: ElementRef) {\n    this.tabView = element.nativeElement;\n  }\n\n  ngAfterViewInit() {\n    this.viewInitialized = true;\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.rendererLog('this._selectedIndex: ' + this._selectedIndex);\n    }\n    if (!isBlank(this._selectedIndex)) {\n      this.tabView.selectedIndex = this._selectedIndex;\n    }\n  }\n}\n\n@Directive({\n  selector: '[tabItem]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TabViewItemDirective implements OnInit {\n  private item: TabViewItem;\n  private _config: TabViewItemDef;\n\n  constructor(private owner: TabViewDirective, private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef) {}\n\n  @Input('tabItem')\n  set config(config: TabViewItemDef) {\n    if (!this._config || this._config.iconSource !== config.iconSource || this._config.title !== config.title || this._config.textTransform !== config.textTransform) {\n      this._config = config;\n      this.applyConfig();\n    }\n  }\n\n  get config(): TabViewItemDef {\n    // tslint:disable-line:no-input-rename\n    return this._config || {};\n  }\n\n  @Input()\n  set title(title: string) {\n    this.config = Object.assign(this.config, { title });\n  }\n\n  get title() {\n    return this.config.title;\n  }\n\n  @Input()\n  set iconSource(iconSource: string) {\n    this.config = Object.assign(this.config, { iconSource });\n  }\n\n  get iconSource() {\n    return this.config.iconSource;\n  }\n\n  @Input()\n  set textTransform(textTransform: TextTransform) {\n    this.config = Object.assign(this.config, { textTransform });\n  }\n\n  get textTransform() {\n    return this.config.textTransform;\n  }\n\n  private ensureItem() {\n    if (!this.item) {\n      this.item = new TabViewItem();\n    }\n  }\n\n  private applyConfig() {\n    this.ensureItem();\n\n    if (this.config.title) {\n      this.item.title = this.config.title;\n    }\n\n    if (this.config.iconSource) {\n      this.item.iconSource = this.config.iconSource;\n    }\n\n    //  TabViewItem textTransform has a default value for Android that kick in\n    // only if no value (even a null value) is set.\n    if (this.config.textTransform) {\n      this.item.textTransform = this.config.textTransform;\n    }\n  }\n\n  ngOnInit() {\n    this.applyConfig();\n\n    const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n    // Filter out text nodes and comments\n    const realViews = viewRef.rootNodes.filter((node) => !(node instanceof InvisibleNode));\n\n    if (realViews.length > 0) {\n      this.item.view = realViews[0];\n\n      const newItems = (this.owner.tabView.items || []).concat([this.item]);\n      this.owner.tabView.items = newItems;\n    }\n  }\n}\n","/* eslint-disable @angular-eslint/component-selector */\nimport { Component, Inject } from '@angular/core';\nimport { platformNames, IDevice } from '@nativescript/core';\nimport { DEVICE } from '../../tokens';\n\n@Component({\n  selector: 'android',\n  template: `<ng-content *ngIf=\"show\"></ng-content>`,\n})\nexport class AndroidFilterComponent {\n  public show: boolean;\n\n  constructor(@Inject(DEVICE) device: IDevice) {\n    this.show = device.os === platformNames.android;\n  }\n}\n","/* eslint-disable @angular-eslint/component-selector */\nimport { Component, Inject } from '@angular/core';\nimport { platformNames, IDevice } from '@nativescript/core';\nimport { DEVICE } from '../../tokens';\n\n@Component({\n  selector: 'ios',\n  template: `<ng-content *ngIf=\"show\"></ng-content>`,\n})\nexport class IOSFilterComponent {\n  public show: boolean;\n  constructor(@Inject(DEVICE) device: IDevice) {\n    this.show = device.os === platformNames.ios;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { FramePageModule } from './cdk/frame-page/frame-page.module';\nimport { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './cdk/action-bar';\nimport { ListViewComponent, TemplateKeyDirective } from './cdk/list-view/list-view.component';\nimport { registerNativeScriptViewComponents } from './element-registry';\nimport { ModalDialogService } from './legacy/directives/dialogs';\nimport { TabViewDirective, TabViewItemDirective } from './cdk/tab-view';\nimport { AndroidFilterComponent } from './cdk/platform-filters/android-filter.component';\nimport { IOSFilterComponent } from './cdk/platform-filters/ios-filter.component';\n\nconst CDK_COMPONENTS = [ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective, ListViewComponent, TemplateKeyDirective, TabViewDirective, TabViewItemDirective, AndroidFilterComponent, IOSFilterComponent];\n\nregisterNativeScriptViewComponents();\n\n@NgModule({\n  imports: [CommonModule, FramePageModule],\n  declarations: [...CDK_COMPONENTS],\n  exports: [CommonModule, FramePageModule, ...CDK_COMPONENTS],\n  providers: [ModalDialogService],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptCommonModule {}\n","import { ViewportScroller, XhrFactory, ɵNullViewportScroller as NullViewportScroller } from '@angular/common';\nimport { ApplicationModule, ErrorHandler, Inject, NgModule, NO_ERRORS_SCHEMA, Optional, Provider, RendererFactory2, SkipSelf, StaticProvider, ɵINJECTOR_SCOPE as INJECTOR_SCOPE } from '@angular/core';\nimport { Color, Device, View } from '@nativescript/core';\nimport { AppHostView } from './app-host-view';\nimport { NativescriptXhrFactory } from './nativescript-xhr-factory';\nimport { NativeScriptRendererFactory } from './nativescript-renderer';\nimport { PlatformNamespaceFilter, NAMESPACE_FILTERS } from './property-filter';\nimport { APP_ROOT_VIEW, DEVICE, ENABLE_REUSABE_VIEWS, NATIVESCRIPT_ROOT_MODULE_ID } from './tokens';\nimport { ViewUtil } from './view-util';\nimport { DetachedLoader } from './cdk/detached-loader';\nimport { NativeScriptCommonModule } from './nativescript-common.module';\n\nexport function generateFallbackRootView(parentRootView?: View) {\n  if (parentRootView) {\n    return parentRootView;\n  }\n  return new AppHostView(new Color('white'));\n}\n\nexport function errorHandler() {\n  return new ErrorHandler();\n}\nexport function generateRandomId() {\n  return `${Date.now()}` + '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport const NATIVESCRIPT_MODULE_STATIC_PROVIDERS: StaticProvider[] = [\n  { provide: APP_ROOT_VIEW, useFactory: generateFallbackRootView, deps: [[new Optional(), new SkipSelf(), APP_ROOT_VIEW]] },\n  { provide: INJECTOR_SCOPE, useValue: 'root' },\n  { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n  { provide: ViewUtil, useClass: ViewUtil, deps: [NAMESPACE_FILTERS, [new Optional(), ENABLE_REUSABE_VIEWS]] },\n  {\n    provide: NativeScriptRendererFactory,\n    useClass: NativeScriptRendererFactory,\n    deps: [APP_ROOT_VIEW, NAMESPACE_FILTERS, NATIVESCRIPT_ROOT_MODULE_ID, [new Optional(), ENABLE_REUSABE_VIEWS]],\n  },\n  { provide: NATIVESCRIPT_ROOT_MODULE_ID, useFactory: generateRandomId },\n  { provide: RendererFactory2, useExisting: NativeScriptRendererFactory },\n  { provide: NAMESPACE_FILTERS, useClass: PlatformNamespaceFilter, deps: [DEVICE], multi: true },\n  { provide: DEVICE, useValue: Device },\n  { provide: XhrFactory, useClass: NativescriptXhrFactory, deps: [] },\n];\nexport const NATIVESCRIPT_MODULE_PROVIDERS: Provider[] = [{ provide: ViewportScroller, useClass: NullViewportScroller }];\n\n@NgModule({\n  imports: [ApplicationModule, NativeScriptCommonModule],\n  declarations: [DetachedLoader],\n  providers: [...NATIVESCRIPT_MODULE_STATIC_PROVIDERS, ...NATIVESCRIPT_MODULE_PROVIDERS],\n  exports: [ApplicationModule, DetachedLoader, NativeScriptCommonModule],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptModule {\n  constructor(@Optional() @SkipSelf() @Inject(NativeScriptModule) parentModule: NativeScriptModule | null) {\n    if (parentModule) {\n      throw new Error(`NativeScriptModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Application, ContentView, RootLayout, View } from '@nativescript/core';\nimport { APP_ROOT_VIEW, DISABLE_ROOT_VIEW_HANDLING } from './tokens';\n\nexport class RootViewProxy extends ContentView {\n  constructor(private parentRootLayout: RootLayout) {\n    super();\n  }\n\n  _addView(view: View, atIndex?: number) {\n    super._addView(view, atIndex);\n    if (this.parentRootLayout.getChildIndex(this) < 0) {\n      this.parentRootLayout.insertChild(this, 0);\n    }\n  }\n\n  _removeView(view: View) {\n    super._removeView(view);\n    this.parentRootLayout.removeChild(this);\n  }\n}\n\n/**\n * This generates a RootLayout and returns a RootViewProxy.\n * Setting RootViewProxy.content will add the view to the bottom of the RootLayout\n * Setting RootViewProxy.content = null will remove the view from the RootLayout\n * @returns RootViewProxy that will insert content into the start of the RootLayout\n */\nexport function generateRootLayoutAndProxy() {\n  let rootView = Application.getRootView();\n  if (!rootView || !(rootView instanceof RootLayout)) {\n    rootView = new RootLayout();\n    Application.resetRootView({ create: () => rootView });\n  }\n  const viewProxy = new RootViewProxy(rootView as RootLayout);\n  // (rootView as RootLayout).insertChild(viewProxy, 0);\n  return viewProxy;\n}\n\n@NgModule({\n  providers: [\n    { provide: DISABLE_ROOT_VIEW_HANDLING, useValue: true },\n    { provide: APP_ROOT_VIEW, useFactory: generateRootLayoutAndProxy },\n  ],\n})\nexport class RootCompositeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { ShowModalOptions } from '@nativescript/core';\n\nexport type NativeShowModalOptions = Partial<Omit<ShowModalOptions, 'cancelable' | 'closeCallback'>>;\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class NativeDialogConfig<D = any> {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  /** Alternate `ComponentFactoryResolver` to use when resolving the associated component. */\n  componentFactoryResolver?: ComponentFactoryResolver;\n\n  nativeOptions?: NativeShowModalOptions = {};\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","import { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { NativeModalRef } from './native-modal-ref';\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/** Possible states of the lifecycle of a dialog. */\nexport const enum NativeDialogState {\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\nexport class NativeDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined; //= this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  private _closeFallbackTimeout: any;\n\n  /** Current state of the dialog. */\n  private _state = NativeDialogState.OPEN;\n\n  constructor(private _nativeModalRef: NativeModalRef, readonly id: string = `native-dialog-${uniqueId++}`) {\n    // Pass the id along to the container.\n    _nativeModalRef._id = id;\n\n    // Emit when opening animation completes\n    _nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'opened'),\n        take(1)\n      )\n      .subscribe(() => {\n        this._afterOpened.next();\n        this._afterOpened.complete();\n      });\n\n    // Dispose overlay when closing animation is complete\n    _nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'closed'),\n        take(1)\n      )\n      .subscribe(() => {\n        clearTimeout(this._closeFallbackTimeout);\n        this._finishDialogClose();\n      });\n\n    _nativeModalRef.onDismiss.subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      _nativeModalRef.dispose();\n    });\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._nativeModalRef.stateChanged\n      .pipe(\n        filter((event) => event.state === 'closing'),\n        take(1)\n      )\n      .subscribe((event) => {\n        this._beforeClosed.next(dialogResult);\n        this._beforeClosed.complete();\n        this._nativeModalRef.dispose();\n        // this._overlayRef.detachBackdrop();\n\n        // The logic that disposes of the overlay depends on the exit animation completing, however\n        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n        // timeout which will clean everything up if the animation hasn't fired within the specified\n        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n        // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n        this._closeFallbackTimeout = setTimeout(\n          () => this._finishDialogClose(),\n          //event.totalTime + 100);\n          100\n        );\n      });\n\n    this._state = NativeDialogState.CLOSING;\n    this._nativeModalRef._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed;\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    throw new Error('Method not implemented');\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    // this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    // this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): NativeDialogState {\n    return this._state;\n  }\n\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  private _finishDialogClose() {\n    this._state = NativeDialogState.CLOSED;\n    this._nativeModalRef.dispose();\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, Optional, ViewContainerRef, ɵmarkDirty } from '@angular/core';\nimport { ContentView, View, Application, Frame } from '@nativescript/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AppHostAsyncView, AppHostView } from '../../app-host-view';\nimport { NSLocationStrategy } from '../../legacy/router/ns-location-strategy';\nimport { once } from '../../utils/general';\nimport { DetachedLoader } from '../detached-loader';\nimport { ComponentPortal, TemplatePortal } from '../portal/common';\nimport { NativeScriptDomPortalOutlet } from '../portal/nsdom-portal-outlet';\nimport { NativeDialogConfig } from './dialog-config';\nimport { NgViewRef } from '../../view-refs';\n\nexport class NativeModalRef {\n  _id: string;\n  stateChanged = new Subject<{ state: 'opened' | 'closed' | 'closing' }>();\n  onDismiss = new Subject<void>();\n\n  parentView: View;\n  portalOutlet: NativeScriptDomPortalOutlet;\n  detachedLoaderRef: ComponentRef<DetachedLoader>;\n  modalViewRef: NgViewRef<any>;\n\n  private _closeCallback: () => void;\n\n  constructor(private _config: NativeDialogConfig, private _injector: Injector, @Optional() private location?: NSLocationStrategy) {\n    let parentView = this._config.viewContainerRef?.element.nativeElement || Application.getRootView();\n\n    if ((parentView instanceof AppHostView || parentView instanceof AppHostAsyncView) && parentView.ngAppRoot) {\n      parentView = parentView.ngAppRoot;\n    }\n\n    // _ngDialogRoot is the first child of the previously detached proxy.\n    // It should have 'viewController' (iOS) or '_dialogFragment' (Android) available for\n    // presenting future modal views.\n    if (parentView._ngDialogRoot) {\n      parentView = parentView._ngDialogRoot;\n    }\n    this.parentView = parentView;\n\n    this._closeCallback = once(() => {\n      this.stateChanged.next({ state: 'closing' });\n      this.modalViewRef.firstNativeLikeView?.closeModal();\n      this.location?._closeModalNavigation();\n      // this.detachedLoaderRef?.destroy();\n      if (this.modalViewRef?.firstNativeLikeView.isLoaded) {\n        fromEvent(this.modalViewRef.firstNativeLikeView, 'unloaded')\n          .pipe(take(1))\n          .subscribe(() => this.stateChanged.next({ state: 'closed' }));\n      } else {\n        this.stateChanged.next({ state: 'closed' });\n      }\n    });\n  }\n\n  _generateDetachedContainer(vcRef?: ViewContainerRef) {\n    const detachedFactory = (this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver)).resolveComponentFactory(DetachedLoader);\n    if (vcRef) {\n      this.detachedLoaderRef = vcRef.createComponent(detachedFactory);\n    } else {\n      this.detachedLoaderRef = detachedFactory.create(this._config.viewContainerRef?.injector || this._injector);\n      this._injector.get(ApplicationRef).attachView(this.detachedLoaderRef.hostView);\n    }\n    this.detachedLoaderRef.changeDetectorRef.detectChanges();\n  }\n\n  attachTemplatePortal<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T> {\n    this.startModalNavigation();\n    const vcRef = portal.viewContainerRef || this._config.viewContainerRef;\n    this._generateDetachedContainer(vcRef);\n    portal.viewContainerRef = this.detachedLoaderRef.instance.vc;\n    const targetView = new ContentView();\n    this.portalOutlet = new NativeScriptDomPortalOutlet(targetView, this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver), this._injector.get(ApplicationRef), this._injector);\n    const templateRef = this.portalOutlet.attach(portal);\n    this.modalViewRef = new NgViewRef(templateRef);\n    this.modalViewRef.firstNativeLikeView['__ng_modal_id__'] = this._id;\n    // if we don't detach the view from its parent, ios gets mad\n    this.modalViewRef.detachNativeLikeView();\n\n    const userOptions = this._config.nativeOptions || {};\n    this.parentView.showModal(this.modalViewRef.firstNativeLikeView, {\n      context: null,\n      ...userOptions,\n      closeCallback: () => {\n        this.location?._closeModalNavigation();\n        this.onDismiss.next();\n        this.onDismiss.complete();\n      },\n      cancelable: !this._config.disableClose,\n    });\n    //   if (this.modalView !== templateRef.rootNodes[0]) {\n    //     componentRef.location.nativeElement._ngDialogRoot = this.modalView;\n    //   }\n    return templateRef;\n  }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this.startModalNavigation();\n\n    const targetView = new ContentView();\n    this.portalOutlet = new NativeScriptDomPortalOutlet(targetView, this._config.componentFactoryResolver || this._injector.get(ComponentFactoryResolver), this._injector.get(ApplicationRef), this._injector);\n    const componentRef = this.portalOutlet.attach(portal);\n    ɵmarkDirty(componentRef.instance);\n    this.modalViewRef = new NgViewRef(componentRef);\n    if (this.modalViewRef.firstNativeLikeView !== this.modalViewRef.view) {\n      (<any>this.modalViewRef.view)._ngDialogRoot = this.modalViewRef.firstNativeLikeView;\n    }\n    this.modalViewRef.firstNativeLikeView['__ng_modal_id__'] = this._id;\n    // if we don't detach the view from its parent, ios gets mad\n    this.modalViewRef.detachNativeLikeView();\n\n    const userOptions = this._config.nativeOptions || {};\n    this.parentView.showModal(this.modalViewRef.firstNativeLikeView, {\n      context: null,\n      ...userOptions,\n      closeCallback: () => {\n        this.location?._closeModalNavigation();\n        this.onDismiss.next();\n        this.onDismiss.complete();\n      },\n      cancelable: !this._config.disableClose,\n    });\n    return componentRef;\n  }\n\n  _startExitAnimation() {\n    this._closeCallback();\n  }\n\n  dispose() {\n    this.portalOutlet.dispose();\n  }\n  private startModalNavigation() {\n    const frame = this.parentView instanceof Frame ? this.parentView : this.parentView?.page?.frame || Frame.topmost();\n\n    this.location?._beginModalNavigation(frame);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive, Inject, Injectable, InjectionToken, Injector, OnDestroy, Optional, SkipSelf, StaticProvider, TemplateRef, Type } from '@angular/core';\nimport { defer, Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { NSLocationStrategy } from '../../legacy/router/ns-location-strategy';\nimport { ComponentType } from '../../utils/general';\nimport { ComponentPortal, TemplatePortal } from '../portal/common';\nimport { NativeDialogConfig } from './dialog-config';\nimport { NativeDialogRef } from './dialog-ref';\nimport { NativeModalRef } from './native-modal-ref';\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const NATIVE_DIALOG_DATA = new InjectionToken<any>('NativeDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const NATIVE_DIALOG_DEFAULT_OPTIONS = new InjectionToken<NativeDialogConfig>('native-dialog-default-options');\n\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\n@Directive()\nexport abstract class _NativeDialogBase<C extends NativeModalRef> implements OnDestroy {\n  private _openDialogsAtThisLevel: NativeDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<NativeDialogRef<any>>();\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => (this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith<any, any>(undefined)))) as Observable<any>;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): NativeDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<NativeDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  _getAfterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n\n  constructor(private _injector: Injector, private _defaultOptions: NativeDialogConfig | undefined, private _parentDialog: _NativeDialogBase<C> | undefined, private _dialogRefConstructor: Type<NativeDialogRef<any>>, private _nativeModalType: Type<C>, private _dialogDataToken: InjectionToken<any>, private locationStrategy: NSLocationStrategy) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(component: ComponentType<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  /**\n   * Opens a modal dialog containing the given template.\n   * @param template TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(template: TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  open<T, D = any, R = any>(template: ComponentType<T> | TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R>;\n\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: NativeDialogConfig<D>): NativeDialogRef<T, R> {\n    config = _applyConfigDefaults(config, this._defaultOptions || new NativeDialogConfig());\n\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef, config);\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    // Notify the dialog container that the content has been attached.\n    // dialogContainer._initializeWithAttachedContent();\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): NativeDialogRef<any> | undefined {\n    return this.openDialogs.find((dialog) => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping dialog container.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config: NativeDialogConfig): NativeDialogRef<T, R> {\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const nativeModalRef = new this._nativeModalType(config, this._injector, this.locationStrategy);\n    const dialogRef = new this._dialogRefConstructor(nativeModalRef, config.id);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      //     const detachedFactory = options.resolver.resolveComponentFactory(DetachedLoader);\n      //     if(options.attachToContainerRef) {\n      //         detachedLoaderRef = options.attachToContainerRef.createComponent(detachedFactory, 0, childInjector, null);\n      //     } else {\n      //         detachedLoaderRef = detachedFactory.create(childInjector); // this DetachedLoader is **completely** detached\n      //         this.appRef.attachView(detachedLoaderRef.hostView); // we attach it to the applicationRef, so it becomes a \"root\" view in angular's hierarchy\n      //     }\n      //     detachedLoaderRef.changeDetectorRef.detectChanges(); // force a change detection\n      //     detachedLoaderRef.instance.createTemplatePortal(options.templateRef);\n      nativeModalRef.attachTemplatePortal(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        new TemplatePortal<T>(componentOrTemplateRef, null!, <any>{ $implicit: config.data, dialogRef })\n      );\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef);\n      const contentRef = nativeModalRef.attachComponentPortal<T>(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param dialogContainer Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(config: NativeDialogConfig, dialogRef: NativeDialogRef<T>): Injector {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers: StaticProvider[] = [\n      { provide: this._dialogDataToken, useValue: config.data },\n      { provide: this._dialogRefConstructor, useValue: dialogRef },\n    ];\n\n    return Injector.create({ parent: userInjector || this._injector, providers });\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: NativeDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._getAfterAllClosed().next();\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: NativeDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n}\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class NativeDialogService extends _NativeDialogBase<NativeModalRef> {\n  constructor(injector: Injector, @Optional() @Inject(NATIVE_DIALOG_DEFAULT_OPTIONS) defaultOptions: NativeDialogConfig, @Optional() @SkipSelf() parentDialog: NativeDialogService, @Optional() location: NSLocationStrategy) {\n    super(injector, defaultOptions, parentDialog, NativeDialogRef, NativeModalRef, NATIVE_DIALOG_DATA, location);\n  }\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config?: NativeDialogConfig, defaultOptions?: NativeDialogConfig): NativeDialogConfig {\n  return { ...defaultOptions, ...config };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive, Input, OnChanges, OnInit, Optional, SimpleChanges, ElementRef, HostListener } from '@angular/core';\nimport { View, ViewBase } from '@nativescript/core';\nimport { NativeDialogService } from './dialog-services';\nimport { NativeDialogRef } from './dialog-ref';\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[native-dialog-close], [nativeDialogClose]',\n  exportAs: 'nativeDialogClose',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class NativeDialogCloseDirective implements OnInit, OnChanges {\n  /** Dialog close input. */\n  @Input('native-dialog-close') dialogResult: any;\n\n  @Input('nativeDialogClose') _matDialogClose: any;\n\n  constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Optional() public dialogRef: NativeDialogRef<any>,\n    private _elementRef: ElementRef<View>,\n    private _dialog: NativeDialogService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n\n  @HostListener('tap')\n  _onButtonClick() {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    this.dialogRef.close(this.dialogResult);\n  }\n}\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<View>, openDialogs: NativeDialogRef<any>[]) {\n  let view: ViewBase | null = element.nativeElement.parent;\n\n  while (view && !Object.hasOwnProperty.call(view, '__ng_modal_id__')) {\n    view = view.parent;\n  }\n\n  return view ? openDialogs.find((dialog) => dialog.id === view['__ng_modal_id__']) : null;\n}\n","import { NgModule } from '@angular/core';\nimport { NativeDialogCloseDirective } from './dialog-content-directives';\nimport { NativeDialogService } from './dialog-services';\n\n@NgModule({\n  declarations: [NativeDialogCloseDirective],\n  exports: [NativeDialogCloseDirective],\n  providers: [NativeDialogService],\n})\nexport class NativeDialogModule {}\n","import { Injectable } from '@angular/core';\nimport { knownFolders, Folder, File } from '@nativescript/core';\n\n// Allows greater flexibility with `file-system` and Angular\n// Also provides a way for `file-system` to be mocked for testing\n\n@Injectable()\nexport class NSFileSystem {\n  public currentApp(): Folder {\n    return knownFolders.currentApp();\n  }\n\n  public fileFromPath(path: string): File {\n    return File.fromPath(path);\n  }\n\n  public fileExists(path: string): boolean {\n    return File.exists(path);\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { ContentView } from '@nativescript/core';\nimport { DetachedLoader } from './cdk/detached-loader';\nimport { ComponentPortal, NativeScriptDomPortalOutlet, TemplatePortal } from './cdk/portal';\nimport { NgViewRef } from './view-refs';\n\n/**\n * creates a DetachedLoader either linked to the ViewContainerRef or the ApplicationRef if ViewContainerRef is not defined\n * @param resolver component factory resolver\n * @param injector default injector, unused if viewContainerRef is set\n * @param viewContainerRef where the view should live in the angular tree\n * @returns reference to the DetachedLoader\n */\nexport function generateDetachedLoader(resolver: ComponentFactoryResolver, injector: Injector, viewContainerRef?: ViewContainerRef) {\n  injector = viewContainerRef?.injector || injector;\n  const detachedFactory = resolver.resolveComponentFactory(DetachedLoader);\n  const detachedLoaderRef = viewContainerRef?.createComponent(detachedFactory) || detachedFactory.create(injector);\n  if (!viewContainerRef) {\n    injector.get(ApplicationRef).attachView(detachedLoaderRef.hostView);\n  }\n  detachedLoaderRef.changeDetectorRef.detectChanges();\n  return detachedLoaderRef;\n}\n\n/**\n * Generates a NgViewRef from a component or template. @see NgViewRef\n * Pass keepNativeViewAttached as `true` if you don't want the first native view to be detached from its parent.\n * For opening modals and others, the firstNativeLikeView should be detached.\n * @param typeOrTemplate ComponentType or TemplateRef that should be instanced\n * @param options options for creating the view\n * @returns NgViewRef\n */\nexport function generateNativeScriptView<T>(\n  typeOrTemplate: Type<T> | TemplateRef<T>,\n  options: {\n    resolver?: ComponentFactoryResolver;\n    viewContainerRef?: ViewContainerRef;\n    injector: Injector;\n    keepNativeViewAttached?: boolean;\n    /**\n     * reuse a detachedLoaderRef. This will override viewContainerRef\n     */\n    detachedLoaderRef?: ComponentRef<DetachedLoader>;\n  }\n) {\n  let detachedLoaderRef: ComponentRef<DetachedLoader> = options.detachedLoaderRef;\n  const reusingDetachedLoader = !!detachedLoaderRef;\n  if (reusingDetachedLoader) {\n    options.viewContainerRef = detachedLoaderRef.instance.vc;\n  }\n  const injector = options.viewContainerRef?.injector || options.injector;\n  const resolver = options.resolver || injector.get(ComponentFactoryResolver);\n  if (!detachedLoaderRef && (options.viewContainerRef || typeOrTemplate instanceof TemplateRef)) {\n    detachedLoaderRef = generateDetachedLoader(resolver, injector, options.viewContainerRef);\n  }\n  let portal: ComponentPortal<T> | TemplatePortal<T>;\n  if (typeOrTemplate instanceof TemplateRef) {\n    portal = new TemplatePortal(typeOrTemplate, detachedLoaderRef.instance.vc);\n  } else {\n    portal = new ComponentPortal(typeOrTemplate, detachedLoaderRef?.instance.vc);\n  }\n  const parentView = new ContentView();\n  const portalOutlet = new NativeScriptDomPortalOutlet(parentView, resolver, injector.get(ApplicationRef), injector);\n  const componentOrTemplateRef: ComponentRef<T> | EmbeddedViewRef<T> = portalOutlet.attach(portal);\n  componentOrTemplateRef.onDestroy(() => {\n    portalOutlet.dispose();\n  });\n  if (detachedLoaderRef && !reusingDetachedLoader) {\n    componentOrTemplateRef.onDestroy(() => {\n      detachedLoaderRef.destroy();\n    });\n  }\n  const viewRef = new NgViewRef(componentOrTemplateRef);\n  (viewRef as any).detachedLoaderRef = detachedLoaderRef;\n  if (!options.keepNativeViewAttached) {\n    viewRef.detachNativeLikeView();\n  }\n  return viewRef;\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { View, unsetValue } from '@nativescript/core';\n\nimport { isBlank } from '../../utils/lang-facade';\n\nexport class BaseValueAccessor<TView extends View> implements ControlValueAccessor {\n  private pendingChangeNotification: any = 0;\n  onChange = (_) => {};\n  onTouched = () => {};\n\n  constructor(public view: TView) {}\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = (arg) => {\n      if (this.pendingChangeNotification) {\n        clearTimeout(this.pendingChangeNotification);\n      }\n      this.pendingChangeNotification = setTimeout(() => {\n        this.pendingChangeNotification = 0;\n        fn(arg);\n      }, 20);\n    };\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.view.isEnabled = !isDisabled;\n  }\n\n  writeValue(_: any) {}\n\n  protected normalizeValue(value: any): any {\n    return isBlank(value) ? unsetValue : value;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { View } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst TEXT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TextValueAccessor),\n  multi: true,\n};\n\nexport type TextView = { text: string } & View;\n\n/**\n * The accessor for writing a text and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TextField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'TextField[ngModel],TextField[formControlName],TextField[formControl],' +\n    'textField[ngModel],textField[formControlName],textField[formControl],' +\n    'textfield[ngModel],textfield[formControlName],textfield[formControl],' +\n    'text-field[ngModel],text-field[formControlName],text-field[formControl],' +\n    'TextView[ngModel],TextView[formControlName],TextView[formControl],' +\n    'textView[ngModel],textView[formControlName],textView[formControl],' +\n    'textview[ngModel],textview[formControlName],textview[formControl],' +\n    'text-view[ngModel],text-view[formControlName],text-view[formControl],' +\n    'SearchBar[ngModel],SearchBar[formControlName],SearchBar[formControl],' +\n    'searchBar[ngModel],searchBar[formControlName],searchBar[formControl],' +\n    'searchbar[ngModel],searchbar[formControlName],searchbar[formControl],' +\n    'search-bar[ngModel], search-bar[formControlName],search-bar[formControl]',\n  providers: [TEXT_VALUE_ACCESSOR],\n  host: {\n    '(blur)': 'onTouched()',\n    '(textChange)': 'onChange($event.value)',\n  },\n})\nexport class TextValueAccessor extends BaseValueAccessor<TextView> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value ? `${value}` : value);\n    this.view.text = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Switch } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst CHECKED_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckedValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a checked property and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <Switch [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'Switch[ngModel],Switch[formControlName],Switch[formControl],' + 'switch[ngModel],switch[formControlName],switch[formControl]',\n  providers: [CHECKED_VALUE_ACCESSOR],\n  host: {\n    '(checkedChange)': 'onChange($event.value)',\n  },\n})\nexport class CheckedValueAccessor extends BaseValueAccessor<Switch> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.checked = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePicker } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DateValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePicker [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'DatePicker[ngModel],DatePicker[formControlName],DatePicker[formControl],' + 'datepicker[ngModel],datepicker[formControlName],datepicker[formControl],' + 'datePicker[ngModel],datePicker[formControlName],datePicker[formControl],' + 'date-picker[ngModel],date-picker[formControlName],date-picker[formControl]',\n  providers: [DATE_VALUE_ACCESSOR],\n  host: {\n    '(dateChange)': 'onChange($event.value)',\n  },\n})\nexport class DateValueAccessor extends BaseValueAccessor<DatePicker> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.date = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TimePicker } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst TIME_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimeValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePicker [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'TimePicker[ngModel],TimePicker[formControlName],TimePicker[formControl],' + 'timepicker[ngModel],timepicker[formControlName],timepicker[formControl],' + 'timePicker[ngModel],timePicker[formControlName],timePicker[formControl],' + 'time-picker[ngModel],time-picker[formControlName],time-picker[formControl]',\n  providers: [TIME_VALUE_ACCESSOR],\n  host: {\n    '(timeChange)': 'onChange($event.value)',\n  },\n})\nexport class TimeValueAccessor extends BaseValueAccessor<TimePicker> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.time = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Slider } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true,\n};\n\n/**\n * The accessor for setting a value and listening to changes that is used by the\n * {@link NgModel}\n *\n *  ### Example\n *  ```\n *  <Slider [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector: 'Slider[ngModel],Slider[formControlName],Slider[formControl],' + 'slider[ngModel],slider[formControlName],slider[formControl]',\n  providers: [NUMBER_VALUE_ACCESSOR],\n  host: {\n    '(valueChange)': 'onChange($event.value)',\n  },\n})\nexport class NumberValueAccessor extends BaseValueAccessor<Slider> {\n  // tslint:disable-line:directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.view.value = normalized;\n  }\n}\n","import { Directive, ElementRef, forwardRef, AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { View } from '@nativescript/core';\nimport { BaseValueAccessor } from './base-value-accessor';\n\nconst SELECTED_INDEX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectedIndexValueAccessor),\n  multi: true,\n};\n\nexport type SelectableView = { selectedIndex: number } & View;\n\n/**\n * The accessor for setting a selectedIndex and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <SegmentedBar [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'SegmentedBar[ngModel],SegmentedBar[formControlName],SegmentedBar[formControl],' +\n    'segmentedBar[ngModel],segmentedBar[formControlName],segmentedBar[formControl],' +\n    'segmentedbar[ngModel],segmentedbar[formControlName],segmentedbar[formControl],' +\n    'segmented-bar[ngModel],segmented-bar[formControlName],segmented-bar[formControl],' +\n    'ListPicker[ngModel],ListPicker[formControlName],ListPicker[formControl],' +\n    'listPicker[ngModel],listPicker[formControlName],listPicker[formControl],' +\n    'listpicker[ngModel],listpicker[formControlName],listpicker[formControl],' +\n    'list-picker[ngModel],list-picker[formControlName],list-picker[formControl],' +\n    'TabView[ngModel],TabView[formControlName],TabView[formControl],' +\n    'tabView[ngModel],tabView[formControlName],tabView[formControl],' +\n    'tabview[ngModel],tabview[formControlName],tabview[formControl],' +\n    'tab-view[ngModel],tab-view[formControlName],tab-view[formControl]',\n  providers: [SELECTED_INDEX_VALUE_ACCESSOR],\n  host: {\n    '(selectedIndexChange)': 'onChange($event.value)',\n  },\n})\nexport class SelectedIndexValueAccessor extends BaseValueAccessor<SelectableView> implements AfterViewInit {\n  // tslint:disable-line:max-line-length directive-class-suffix\n  constructor(elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  private value: number;\n  private viewInitialized: boolean;\n\n  writeValue(value: any): void {\n    const normalized = super.normalizeValue(value);\n    this.value = normalized;\n\n    if (this.viewInitialized) {\n      this.view.selectedIndex = this.value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.viewInitialized = true;\n    this.view.selectedIndex = this.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, NumberValueAccessor, SelectedIndexValueAccessor } from './value-accessors';\n\nexport * from './value-accessors';\n\n@NgModule({\n  declarations: [TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],\n  providers: [],\n  imports: [FormsModule],\n  exports: [FormsModule, TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],\n})\nexport class NativeScriptFormsModule {}\n","import { KeyframeAnimation, KeyframeAnimationInfo, KeyframeDeclaration, KeyframeInfo, parseKeyframeDeclarations, animationTimingFunctionConverter } from '@nativescript/core';\n\nexport interface Keyframe {\n  [key: string]: string | number;\n  offset: number;\n}\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n\nexport function createKeyframeAnimation(styles: Keyframe[], duration: number, delay: number, easing: string): KeyframeAnimation {\n  const info = createKeyframeAnimationInfo(styles, duration, delay, easing);\n  return KeyframeAnimation.keyframeAnimationFromInfo(info);\n}\n\nconst createKeyframeAnimationInfo = (styles: Keyframe[], duration: number, delay: number, easing: string): KeyframeAnimationInfo => ({\n  isForwards: true,\n  duration: duration || 0.01,\n  delay,\n  curve: getCurve(easing),\n  keyframes: styles.map(parseAnimationKeyframe),\n});\n\nconst getCurve = (value: string) => animationTimingFunctionConverter(value);\n\nconst parseAnimationKeyframe = (styles: Keyframe): KeyframeInfo => ({\n  duration: getKeyframeDuration(styles),\n  declarations: getDeclarations(styles),\n});\n\nconst getKeyframeDuration = (styles: Keyframe): number => styles.offset;\n\nfunction getDeclarations(styles: Keyframe): KeyframeDeclaration[] {\n  const unparsedDeclarations: KeyframeDeclaration[] = Object.keys(styles).map((property) => ({ property, value: styles[property] }));\n\n  return parseKeyframeDeclarations(unparsedDeclarations);\n}\n","import { AnimationPlayer } from '@angular/animations';\nimport { View, EventData, KeyframeAnimation } from '@nativescript/core';\n\nimport { Keyframe, createKeyframeAnimation } from './utils';\nimport { NgView } from '../views/view-types';\nimport { NativeScriptDebug } from '../trace';\n\nexport class NativeScriptAnimationPlayer implements AnimationPlayer {\n  public parentPlayer: AnimationPlayer = null;\n\n  private _startSubscriptions: Function[] = [];\n  private _doneSubscriptions: Function[] = [];\n  private _finished = false;\n  private _started = false;\n  private animation: KeyframeAnimation;\n\n  constructor(private target: NgView, keyframes: Keyframe[], private duration: number, private delay: number, easing: string) {\n    this.initKeyframeAnimation(keyframes, duration, delay, easing);\n  }\n\n  get totalTime(): number {\n    return this.delay + this.duration;\n  }\n\n  init(): void {}\n\n  hasStarted(): boolean {\n    return this._started;\n  }\n\n  onStart(fn: Function): void {\n    this._startSubscriptions.push(fn);\n  }\n  onDone(fn: Function): void {\n    this._doneSubscriptions.push(fn);\n  }\n  onDestroy(fn: Function): void {\n    this._doneSubscriptions.push(fn);\n  }\n\n  play(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.play`);\n    }\n\n    if (!this.animation) {\n      return;\n    }\n\n    if (!this._started) {\n      this._started = true;\n      this._startSubscriptions.forEach((fn) => fn());\n      this._startSubscriptions = [];\n    }\n\n    // When this issue https://github.com/NativeScript/NativeScript/issues/7984 is fixes in @nativescript/core\n    // we can change this fix and apply the one that is recommended in that issue.\n    if (this.target.isLoaded) {\n      this.playAnimation();\n    } else {\n      this.target.on(View.loadedEvent, this.onTargetLoaded.bind(this));\n    }\n  }\n\n  private onTargetLoaded(args: EventData) {\n    this.target.off(View.loadedEvent, this.onTargetLoaded);\n    this.playAnimation();\n  }\n\n  private playAnimation() {\n    this.animation\n      .play(this.target)\n      .then(() => this.onFinish())\n      .catch((_e) => {});\n  }\n\n  pause(): void {}\n\n  finish(): void {\n    this.onFinish();\n  }\n\n  reset(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.reset`);\n    }\n\n    if (this.animation && this.animation.isPlaying) {\n      this.animation.cancel();\n    }\n  }\n\n  restart(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.restart`);\n    }\n\n    this.reset();\n    this.play();\n  }\n\n  destroy(): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.destroy`);\n    }\n    this.onFinish();\n  }\n\n  setPosition(_p: any): void {\n    throw new Error('AnimationPlayer.setPosition method is not supported!');\n  }\n\n  getPosition(): number {\n    return 0;\n  }\n\n  private initKeyframeAnimation(keyframes: Keyframe[], duration: number, delay: number, easing: string) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.initKeyframeAnimation`);\n    }\n\n    this.animation = createKeyframeAnimation(keyframes, duration, delay, easing);\n  }\n\n  private onFinish() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.animationsLog(`NativeScriptAnimationPlayer.onFinish`);\n    }\n\n    if (this._finished) {\n      return;\n    }\n\n    this._finished = true;\n    this._started = false;\n    this._doneSubscriptions.forEach((fn) => fn());\n    this._doneSubscriptions = [];\n  }\n}\n","import { AnimationPlayer } from '@angular/animations';\nimport { AnimationDriver } from '@angular/animations/browser';\nimport { ProxyViewContainer, eachDescendant, CssAnimationProperty, CSSHelper } from '@nativescript/core';\n\nimport { NativeScriptAnimationPlayer } from './animation-player';\nimport { Keyframe, dashCaseToCamelCase } from './utils';\nimport { InvisibleNode } from '../views/invisible-nodes';\nimport { NgView } from '../views/view-types';\nimport { NativeScriptDebug } from '../trace';\n\ninterface ViewMatchResult {\n  found: boolean;\n}\n\ninterface ViewMatchParams {\n  originalView: NgView;\n}\n\ninterface QueryParams {\n  selector: Selector;\n  multi: boolean;\n}\n\ninterface QueryResult {\n  matches: NgView[];\n}\n\nclass Selector {\n  private nsSelectors: Array<any>;\n  private classSelectors: string[];\n\n  constructor(rawSelector: string) {\n    this.parse(rawSelector);\n  }\n\n  match(element: NgView): boolean {\n    return this.nsSelectorMatch(element) || this.classSelectorsMatch(element);\n  }\n\n  private parse(rawSelector: string) {\n    const selectors = rawSelector.split(',').map((s) => s.trim());\n\n    this.nsSelectors = selectors.map(CSSHelper.createSelector);\n    this.classSelectors = selectors.filter((s) => s.startsWith('.')).map((s) => s.substring(1));\n  }\n\n  private nsSelectorMatch(element: NgView) {\n    return this.nsSelectors.some((s) => s.match(element));\n  }\n\n  private classSelectorsMatch(element: NgView) {\n    return this.classSelectors.some((s) => this.hasClass(element, s));\n  }\n\n  // we're using that instead of match for classes\n  // that are dynamically added by the animation engine\n  // such as .ng-trigger, that's added for every :enter view\n  private hasClass(element: NgView, cls: string) {\n    return element && element['$$classes'] && element['$$classes'][cls];\n  }\n}\n\nexport class NativeScriptAnimationDriver implements AnimationDriver {\n  private static validProperties = [...CssAnimationProperty._getPropertyNames(), 'transform'];\n\n  validateStyleProperty(property: string): boolean {\n    NativeScriptDebug.animationsLog(`CssAnimationProperty.validateStyleProperty: ${property}`);\n    return NativeScriptAnimationDriver.validProperties.indexOf(property) !== -1;\n  }\n\n  matchesElement(element: NgView, rawSelector: string): boolean {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.matchesElement ` + `element: ${element}, selector: ${rawSelector}`);\n\n    const selector = this.makeSelector(rawSelector);\n    return selector.match(element);\n  }\n\n  containsElement(elm1: NgView, elm2: NgView): boolean {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.containsElement ` + `element1: ${elm1}, element2: ${elm2}`);\n\n    // Checking if the parent is our fake body object\n    if (elm1['isOverride']) {\n      return true;\n    }\n\n    const params: ViewMatchParams = { originalView: elm2 };\n    const result: ViewMatchResult = this.visitDescendants(elm1, viewMatches, params);\n\n    return result.found;\n  }\n\n  query(element: NgView, rawSelector: string, multi: boolean): NgView[] {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.query ` + `element: ${element}, selector: ${rawSelector} ` + `multi: ${multi}`);\n\n    const selector = this.makeSelector(rawSelector);\n    const params: QueryParams = { selector, multi };\n    const result: QueryResult = this.visitDescendants(element, queryDescendants, params);\n\n    return result.matches || [];\n  }\n\n  computeStyle(element: NgView, prop: string): string {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.computeStyle ` + `element: ${element}, prop: ${prop}`);\n\n    const camelCaseProp = dashCaseToCamelCase(prop);\n    return element.style[camelCaseProp];\n  }\n\n  animate(element: NgView, keyframes: Keyframe[], duration: number, delay: number, easing: string): AnimationPlayer {\n    NativeScriptDebug.animationsLog(`NativeScriptAnimationDriver.animate ` + `element: ${element}, keyframes: ${keyframes} ` + `duration: ${duration}, delay: ${delay} ` + `easing: ${easing}`);\n\n    return new NativeScriptAnimationPlayer(element, keyframes, duration, delay, easing);\n  }\n\n  private makeSelector(rawSelector: string): Selector {\n    return new Selector(rawSelector);\n  }\n\n  private visitDescendants(element: NgView, cb: (child: NgView, result: any, params: any) => boolean, cbParams: any): any {\n    const result = {};\n    // fill the result obj with the result from the callback function\n    eachDescendant(element, (child: NgView) => cb(child, result, cbParams));\n\n    return result;\n  }\n}\n\nfunction viewMatches(element: NgView, result: ViewMatchResult, params: ViewMatchParams): boolean {\n  if (element === params.originalView) {\n    result.found = true;\n  }\n\n  return !result.found;\n}\n\nfunction queryDescendants(element: NgView, result: QueryResult, params: QueryParams): boolean {\n  if (!result.matches) {\n    result.matches = [];\n  }\n\n  const { selector, multi } = params;\n\n  // skip comment and text nodes\n  // because they are not actual Views\n  // and cannot be animated\n  if (element instanceof InvisibleNode || !selector.match(element)) {\n    return true;\n  }\n\n  if (element instanceof ProxyViewContainer) {\n    element.eachChild((child: NgView) => {\n      result.matches.push(child);\n      return true;\n    });\n  } else {\n    result.matches.push(element);\n  }\n\n  return multi;\n}\n","import { NgModule, Injectable, Inject, NgZone, RendererFactory2, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationBuilder } from '@angular/animations';\n\nimport { AnimationDriver, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵAnimationEngine as AnimationEngine } from '@angular/animations/browser';\n\nimport { ɵAnimationRendererFactory as AnimationRendererFactory, ɵBrowserAnimationBuilder as BrowserAnimationBuilder } from '@angular/platform-browser/animations';\n\n// import { NativeScriptModule } from \"../nativescript.module\";\nimport { NativeScriptRendererFactory } from '../nativescript-renderer';\nimport { NativeScriptAnimationDriver } from './animation-driver';\nimport { throwIfAlreadyLoaded } from '../utils/general';\nimport { NativeScriptCommonModule } from '../nativescript-common.module';\n\n@Injectable()\nexport class InjectableAnimationEngine extends AnimationEngine {\n  constructor(@Inject(DOCUMENT) doc: any, driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(doc.body, driver, normalizer);\n  }\n}\n\nexport function instantiateSupportedAnimationDriver() {\n  return new NativeScriptAnimationDriver();\n}\n\nexport function instantiateRendererFactory(renderer: NativeScriptRendererFactory, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n\n@NgModule({\n  imports: [NativeScriptCommonModule],\n  providers: [\n    {\n      provide: AnimationDriver,\n      useFactory: instantiateSupportedAnimationDriver,\n    },\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    {\n      provide: AnimationStyleNormalizer,\n      useFactory: instantiateDefaultStyleNormalizer,\n    },\n    { provide: AnimationEngine, useClass: InjectableAnimationEngine },\n    {\n      provide: RendererFactory2,\n      useFactory: instantiateRendererFactory,\n      deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],\n    },\n  ],\n})\nexport class NativeScriptAnimationsModule {\n  constructor(@Optional() @SkipSelf() parentModule: NativeScriptAnimationsModule) {\n    // Prevents NativeScriptAnimationsModule from getting imported multiple times\n    throwIfAlreadyLoaded(parentModule, 'NativeScriptAnimationsModule');\n  }\n}\n","import { path } from '@nativescript/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NSFileSystem } from '../file-system/ns-file-system';\n\nexport type httpResponseFactory<T> = (url: string, body: any, status: number) => T;\nexport type httpErrorFactory = (url: string, body: any, status: number) => any;\n\nexport function isLocalRequest(url: string): boolean {\n  return url.indexOf('~') === 0 || url.indexOf('/') === 0;\n}\n\nexport function getAbsolutePath(url: string, nsFileSystem: NSFileSystem): string {\n  url = url.replace('~', '').replace('/', '');\n  url = path.join(nsFileSystem.currentApp().path, url);\n  return url;\n}\n\nexport function processLocalFileRequest<T>(url: string, nsFileSystem: NSFileSystem, successResponse: httpResponseFactory<T>, errorResponse: httpErrorFactory): Observable<T> {\n  url = getAbsolutePath(url, nsFileSystem);\n\n  // request from local app resources\n  return new Observable((observer: Observer<T>) => {\n    if (nsFileSystem.fileExists(url)) {\n      const localFile = nsFileSystem.fileFromPath(url);\n      localFile.readText().then(\n        (data) => {\n          try {\n            const json = JSON.parse(data);\n            observer.next(successResponse(url, json, 200));\n            observer.complete();\n          } catch (error) {\n            // Even though the response status was 2xx, this is still an error.\n            // The parse error contains the text of the body that failed to parse.\n            const errorResult = { error, text: data };\n            observer.error(errorResponse(url, errorResult, 200));\n          }\n        },\n        (err: Object) => {\n          observer.error(errorResponse(url, err, 400));\n        }\n      );\n    } else {\n      observer.error(errorResponse(url, 'Not Found', 404));\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpXhrBackend } from '@angular/common/http';\nimport { XhrFactory } from '@angular/common';\nimport { Observable } from 'rxjs';\n\nimport { NSFileSystem } from '../file-system/ns-file-system';\nimport { isLocalRequest, processLocalFileRequest } from './http-utils';\n\n@Injectable()\nexport class NsHttpBackEnd extends HttpXhrBackend {\n  constructor(xhrFactory: XhrFactory, private nsFileSystem: NSFileSystem) {\n    super(xhrFactory);\n  }\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    let result: Observable<HttpEvent<any>>;\n\n    if (isLocalRequest(req.url)) {\n      result = this.handleLocalFileRequest(req.url);\n    } else {\n      result = super.handle(req);\n    }\n\n    return result;\n  }\n\n  private handleLocalFileRequest(url: string): Observable<HttpEvent<any>> {\n    return processLocalFileRequest(url, this.nsFileSystem, createSuccessResponse, createErrorResponse);\n  }\n}\n\nfunction createSuccessResponse(url: string, body: any, status: number): HttpEvent<any> {\n  return new HttpResponse({\n    url,\n    body,\n    status,\n    statusText: 'OK',\n  });\n}\n\nfunction createErrorResponse(url: string, body: any, status: number): HttpErrorResponse {\n  return new HttpErrorResponse({\n    url,\n    error: body,\n    status,\n    statusText: 'ERROR',\n  });\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpBackend } from '@angular/common/http';\n\nimport { NSFileSystem } from '../file-system/ns-file-system';\nimport { NsHttpBackEnd } from './ns-http-backend';\n\n@NgModule({\n  providers: [NSFileSystem, NsHttpBackEnd, { provide: HttpBackend, useExisting: NsHttpBackEnd }],\n  imports: [HttpClientModule],\n  exports: [HttpClientModule],\n})\nexport class NativeScriptHttpClientModule {}\n","import { ComponentRef } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, ChildrenOutletContexts, PRIMARY_OUTLET } from '@angular/router';\n\n/**\n * There are cases where multiple activatedRoute nodes should be associated/handled by the same PageRouterOutlet.\n * We can gat additional ActivatedRoutes nodes when there is:\n *  - Lazy loading - there is an additional ActivatedRoute node for the RouteConfig with the `loadChildren` setup\n *  - Componentless routes - there is an additional ActivatedRoute node for the componentless RouteConfig\n *\n * Example:\n *   R  <-- root\n *   |\n * feature (lazy module) <-- RouteConfig: { path: \"lazy\", loadChildren: \"./feature/feature.module#FeatureModule\" }\n *   |\n * module (componentless route) <-- RouteConfig: { path: \"module\", children: [...] } // Note: No 'component'\n *   |\n *  home <-- RouteConfig: { path: \"module\", component: MyComponent } - this is what we get as activatedRoute param\n *\n *  In these cases we will mark the top-most node (feature). NSRouteReuseStrategy will detach the tree there and\n *  use this ActivateRoute as a kay for caching.\n */\nexport function findTopActivatedRouteNodeForOutlet(activatedRoute: ActivatedRouteSnapshot): ActivatedRouteSnapshot {\n  let outletActivatedRoute = activatedRoute;\n\n  while (outletActivatedRoute.parent && outletActivatedRoute.parent.routeConfig && !outletActivatedRoute.parent.routeConfig.component) {\n    outletActivatedRoute = outletActivatedRoute.parent;\n  }\n\n  return outletActivatedRoute;\n}\n\nexport const pageRouterActivatedSymbol = Symbol('page-router-activated');\nexport const loaderRefSymbol = Symbol('loader-ref');\n\nexport function destroyComponentRef(componentRef: ComponentRef<any>) {\n  if (componentRef) {\n    const loaderRef = componentRef[loaderRefSymbol];\n    if (loaderRef) {\n      loaderRef.destroy();\n    }\n    componentRef.destroy();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\nimport { NativeScriptDebug } from '../../trace';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { destroyComponentRef, findTopActivatedRouteNodeForOutlet, pageRouterActivatedSymbol } from './page-router-outlet-utils';\n\ninterface CacheItem {\n  key: string;\n  state: DetachedRouteHandle;\n  isModal: boolean;\n}\n\nconst getSnapshotKey = function (snapshot: ActivatedRouteSnapshot): string {\n  return snapshot.pathFromRoot.join('->');\n};\n\n/**\n * Detached state cache\n */\nclass DetachedStateCache {\n  private cache = new Array<CacheItem>();\n\n  public get length(): number {\n    return this.cache.length;\n  }\n\n  public push(cacheItem: CacheItem) {\n    this.cache.push(cacheItem);\n  }\n\n  public pop(): CacheItem {\n    return this.cache.pop();\n  }\n\n  public peek(): CacheItem {\n    return this.cache[this.cache.length - 1];\n  }\n\n  public clear() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`DetachedStateCache.clear() ${this.cache.length} items will be destroyed`);\n    }\n\n    while (this.cache.length > 0) {\n      const state = <any>this.cache.pop().state;\n      if (!state.componentRef) {\n        throw new Error('No componentRed found in DetachedRouteHandle');\n      }\n\n      destroyComponentRef(state.componentRef);\n    }\n  }\n\n  public clearModalCache() {\n    let removedItemsCount = 0;\n    const hasModalPages = this.cache.some((cacheItem) => {\n      return cacheItem.isModal;\n    });\n\n    if (hasModalPages) {\n      let modalCacheCleared = false;\n\n      while (!modalCacheCleared) {\n        let cacheItem = this.peek();\n        const state = <any>cacheItem.state;\n\n        if (!state.componentRef) {\n          throw new Error('No componentRef found in DetachedRouteHandle');\n        }\n\n        destroyComponentRef(state.componentRef);\n        if (cacheItem.isModal) {\n          modalCacheCleared = true;\n        }\n\n        this.pop();\n        removedItemsCount++;\n      }\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`DetachedStateCache.clearModalCache() ${removedItemsCount} items will be destroyed`);\n    }\n  }\n}\n\n/**\n * Detaches subtrees loaded inside PageRouterOutlet in forward navigation\n * and reattaches them on back.\n * Reuses routes as long as their route config is the same.\n */\n@Injectable()\nexport class NSRouteReuseStrategy implements RouteReuseStrategy {\n  private cacheByOutlet: { [key: string]: DetachedStateCache } = {};\n\n  constructor(private location: NSLocationStrategy) {}\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const key = getSnapshotKey(route);\n    const isPageActivated = route[pageRouterActivatedSymbol];\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    let shouldDetach = outlet && !isBack && isPageActivated;\n\n    if (outlet) {\n      if (outlet.parent && !outlet.parent.shouldDetach) {\n        shouldDetach = false;\n      }\n\n      outlet.shouldDetach = shouldDetach;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldDetach isBack: ${isBack} key: ${key} result: ${shouldDetach}`);\n    }\n\n    return shouldDetach;\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const cache = this.cacheByOutlet[outletKey];\n    if (!cache) {\n      return false;\n    }\n\n    const key = getSnapshotKey(route);\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    const shouldAttach = isBack && cache.peek()?.key === key;\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldAttach isBack: ${isBack} key: ${key} result: ${shouldAttach}`);\n    }\n\n    if (outlet) {\n      outlet.shouldDetach = true;\n    }\n\n    return shouldAttach;\n  }\n\n  store(route: ActivatedRouteSnapshot, state: DetachedRouteHandle): void {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const key = getSnapshotKey(route);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`store key: ${key}, state: ${state}`);\n    }\n\n    const outletKey = this.location.getRouteFullPath(route);\n\n    // tslint:disable-next-line:max-line-length\n    const cache = (this.cacheByOutlet[outletKey] = this.cacheByOutlet[outletKey] || new DetachedStateCache());\n\n    if (state) {\n      let isModal = false;\n      if (this.location._modalNavigationDepth > 0) {\n        isModal = true;\n      }\n\n      cache.push({ key, state, isModal });\n    } else {\n      const topItem = cache.peek();\n      if (topItem.key === key) {\n        cache.pop();\n\n        if (!cache.length) {\n          delete this.cacheByOutlet[outletKey];\n        }\n      } else {\n        throw new Error(\"Trying to pop from DetachedStateCache but keys don't match. \" + `expected: ${topItem.key} actual: ${key}`);\n      }\n    }\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    route = findTopActivatedRouteNodeForOutlet(route);\n\n    const outletKey = this.location.getRouteFullPath(route);\n    const outlet = this.location.findOutlet(outletKey, route);\n    const cache = this.cacheByOutlet[outletKey];\n    if (!cache) {\n      return null;\n    }\n\n    const key = getSnapshotKey(route);\n    const isBack = outlet ? outlet.isPageNavigationBack : false;\n    const cachedItem = cache.peek();\n\n    let state = null;\n    if (isBack && cachedItem && cachedItem.key === key) {\n      state = cachedItem.state;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`retrieved isBack: ${isBack} key: ${key} state: ${state}`);\n    }\n\n    return state;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    const shouldReuse = future.routeConfig === curr.routeConfig;\n\n    if (shouldReuse && curr && curr[pageRouterActivatedSymbol]) {\n      // When reusing route - copy the pageRouterActivated to the new snapshot\n      // It's needed in shouldDetach to determine if the route should be detached.\n      future[pageRouterActivatedSymbol] = curr[pageRouterActivatedSymbol];\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routeReuseStrategyLog(`shouldReuseRoute result: ${shouldReuse}`);\n    }\n\n    return shouldReuse;\n  }\n\n  clearCache(outletKey: string) {\n    const cache = this.cacheByOutlet[outletKey];\n\n    if (cache) {\n      cache.clear();\n    }\n  }\n\n  clearModalCache(outletKey: string) {\n    const cache = this.cacheByOutlet[outletKey];\n\n    if (cache) {\n      cache.clearModalCache();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, UrlTree, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { NavigationOptions, Outlet } from './ns-location-utils';\nimport { FrameService } from '../frame.service';\nimport { NativeScriptDebug } from '../../trace';\nimport { findTopActivatedRouteNodeForOutlet } from './page-router-outlet-utils';\n\nexport type ExtendedNavigationExtras = NavigationExtras & NavigationOptions;\n\nexport interface BackNavigationOptions {\n  outlets?: Array<string>;\n  relativeTo?: ActivatedRoute | null;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensions {\n  constructor(public router: Router, public locationStrategy: NSLocationStrategy, public frameService: FrameService) {}\n\n  public navigate(commands: any[], extras?: ExtendedNavigationExtras): Promise<boolean> {\n    if (extras) {\n      this.locationStrategy._setNavigationOptions(extras);\n    }\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: NavigationOptions): Promise<boolean> {\n    if (options) {\n      this.locationStrategy._setNavigationOptions(options);\n    }\n    return this.router.navigateByUrl(url);\n  }\n\n  public back(backNavigationOptions?: BackNavigationOptions) {\n    if (backNavigationOptions) {\n      this.backOutlets(backNavigationOptions);\n    } else {\n      this.locationStrategy.back();\n    }\n  }\n\n  public canGoBack(backNavigationOptions?: BackNavigationOptions) {\n    let canGoBack = true;\n    if (backNavigationOptions) {\n      const { outletsToBack, outlets } = this.findOutletsToBack(backNavigationOptions);\n\n      if (outletsToBack.length !== outlets.length) {\n        NativeScriptDebug.routerError('No outlet found relative to activated route');\n      } else {\n        outletsToBack.forEach((outletToBack) => {\n          if (!this.locationStrategy.canGoBack(outletToBack)) {\n            canGoBack = false;\n          }\n        });\n      }\n    } else {\n      canGoBack = this.locationStrategy.canGoBack();\n    }\n\n    return canGoBack;\n  }\n\n  public backToPreviousPage() {\n    this.frameService.getFrame().goBack();\n  }\n\n  public canGoBackToPreviousPage(): boolean {\n    return this.frameService.getFrame().canGoBack();\n  }\n\n  private backOutlets(options: BackNavigationOptions) {\n    const { outletsToBack, outlets } = this.findOutletsToBack(options);\n\n    if (outletsToBack.length !== outlets.length) {\n      NativeScriptDebug.routerError('No outlet found relative to activated route');\n    } else {\n      outletsToBack.forEach((outletToBack) => {\n        if (outletToBack.isPageNavigationBack) {\n          NativeScriptDebug.routerError('Attempted to call startGoBack while going back:');\n        } else {\n          this.locationStrategy.back(outletToBack);\n        }\n      });\n    }\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private findOutletsToBack(options?: BackNavigationOptions): { outletsToBack: Array<Outlet>; outlets: Array<string> } {\n    const outletsToBack: Array<Outlet> = [];\n    const rootRoute: ActivatedRoute = this.router.routerState.root;\n    let outlets = options.outlets;\n    let relativeRoute = options.relativeTo || rootRoute;\n\n    const relativeRouteOutlet = this.findOutletByRoute(relativeRoute);\n    const isNSEmptyOutlet = relativeRouteOutlet && relativeRouteOutlet.isNSEmptyOutlet;\n\n    // Lazy named outlet has added 'primary' inner NSEmptyOutlet child.\n    // Take parent route when `relativeTo` option points to the outer named outlet.\n    if (isNSEmptyOutlet && relativeRoute.outlet !== 'primary') {\n      relativeRoute = relativeRoute.parent || relativeRoute;\n    }\n\n    const routesToMatch = outlets ? relativeRoute.children : [relativeRoute];\n    outlets = outlets || [relativeRoute.outlet];\n\n    for (let index = 0; index < routesToMatch.length; index++) {\n      const currentRoute = routesToMatch[index];\n      if (outlets.some((currentOutlet) => currentOutlet === currentRoute.outlet)) {\n        const outlet = this.findOutletByRoute(currentRoute);\n\n        if (outlet) {\n          outletsToBack.push(outlet);\n        }\n      }\n    }\n\n    return { outletsToBack: outletsToBack, outlets: outlets };\n  }\n\n  private findOutletByRoute(currentRoute: ActivatedRoute): Outlet {\n    let outlet;\n\n    const currentRouteSnapshop = findTopActivatedRouteNodeForOutlet(currentRoute.snapshot);\n    const outletKey = this.locationStrategy.getRouteFullPath(currentRouteSnapshop);\n    outlet = this.locationStrategy.findOutlet(outletKey, currentRouteSnapshop);\n\n    return outlet;\n  }\n}\n","import { Directive, Input, ElementRef, NgZone, AfterViewInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { ActivatedRoute, Router, UrlTree } from '@angular/router';\nimport { NavigationTransition } from '@nativescript/core';\nimport { NativeScriptDebug } from '../../trace';\nimport { RouterExtensions } from './router-extensions';\nimport { NavigationOptions } from './ns-location-utils';\n\n// Copied from \"@angular/router/src/config\"\nexport type QueryParamsHandling = 'merge' | 'preserve' | '';\n\n/**\n * The nsRouterLink directive lets you link to specific parts of your app.\n *\n * Consider the following route configuration:\n * ```\n * [{ path: \"/user\", component: UserCmp }]\n * ```\n *\n * When linking to this `User` route, you can write:\n *\n * ```\n * <a [nsRouterLink]=\"[\"/user\"]\">link to user component</a>\n * ```\n *\n * NSRouterLink expects the value to be an array of path segments, followed by the params\n * for that level of routing. For instance `[\"/team\", {teamId: 1}, \"user\", {userId: 2}]`\n * means that we want to generate a link to `/team;teamId=1/user;userId=2`.\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * If the segment begins with `/`, the router will look up the route from the root of the app.\n * If the segment begins with `./`, or doesn\"t begin with a slash, the router will\n * instead look in the current component\"s children for the route.\n * And if the segment begins with `../`, the router will go up one level.\n */\n@Directive({ selector: '[nsRouterLink]' })\nexport class NSRouterLink implements AfterViewInit {\n  // tslint:disable-line:directive-class-suffix\n  @Input() target: string;\n  @Input() queryParams: { [k: string]: any };\n  @Input() fragment: string;\n\n  @Input() queryParamsHandling: QueryParamsHandling;\n  @Input() preserveQueryParams: boolean;\n  @Input() preserveFragment: boolean;\n  @Input() skipLocationChange: boolean;\n  @Input() replaceUrl: boolean;\n\n  @Input() clearHistory: boolean;\n  @Input() pageTransition: boolean | string | NavigationTransition = true;\n  @Input() pageTransitionDuration;\n\n  private commands: any[] = [];\n\n  constructor(private ngZone: NgZone, private router: Router, private navigator: RouterExtensions, private route: ActivatedRoute, private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.el.nativeElement.on('tap', () => {\n      this.ngZone.run(() => {\n        this.onTap();\n      });\n    });\n  }\n\n  @Input('nsRouterLink')\n  set params(data: any[] | string) {\n    if (Array.isArray(data)) {\n      this.commands = data;\n    } else {\n      this.commands = [data];\n    }\n  }\n\n  onTap() {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`nsRouterLink.tapped: ${this.commands} ` + `clear: ${this.clearHistory} ` + `transition: ${JSON.stringify(this.pageTransition)} ` + `duration: ${this.pageTransitionDuration}`);\n    }\n\n    const extras = this.getExtras();\n    // this.navigator.navigateByUrl(this.urlTree, extras);\n    this.navigator.navigate(this.commands, {\n      ...extras,\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n\n  private getExtras(): NavigationExtras & NavigationOptions {\n    const transition = this.getTransition();\n    return {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n\n      clearHistory: this.convertClearHistory(this.clearHistory),\n      animated: transition.animated,\n      transition: transition.transition,\n    };\n  }\n\n  get urlTree(): UrlTree {\n    const urlTree = this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`nsRouterLink urlTree created: ${urlTree}`);\n    }\n\n    return urlTree;\n  }\n\n  private convertClearHistory(value: boolean | string): boolean {\n    return value === true || value === 'true';\n  }\n\n  private getTransition(): { animated: boolean; transition?: NavigationTransition } {\n    let transition: NavigationTransition;\n    let animated: boolean;\n\n    if (typeof this.pageTransition === 'boolean') {\n      animated = this.pageTransition;\n    } else if (typeof this.pageTransition === 'string') {\n      if (this.pageTransition === 'none' || this.pageTransition === 'false') {\n        animated = false;\n      } else {\n        animated = true;\n        transition = {\n          name: <string>this.pageTransition,\n        };\n      }\n    } else {\n      animated = true;\n      transition = <NavigationTransition>this.pageTransition;\n    }\n\n    let duration = +this.pageTransitionDuration;\n    if (!isNaN(duration)) {\n      transition = transition || {};\n      transition.duration = duration;\n    }\n\n    return { animated, transition };\n  }\n}\n\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n","/* tslint:disable:forin */\n// Copied unexported functions from @angular/router/src/url_tree\nimport { UrlTree, UrlSegment, PRIMARY_OUTLET } from '@angular/router';\n// UrlSegmentGroup not exported, just use any.\ntype UrlSegmentGroup = any;\n\nexport function containsTree(container: UrlTree, containee: UrlTree, exact: boolean): boolean {\n  if (exact) {\n    return equalSegmentGroups(container.root, containee.root);\n  } else {\n    return containsSegmentGroup(container.root, containee.root);\n  }\n}\n\nfunction equalSegmentGroups(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  if (!equalPath(container.segments, containee.segments)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) {\n    return false;\n  }\n  for (let c in containee.children) {\n    if (!container.children[c]) {\n      return false;\n    }\n    if (!equalSegmentGroups(container.children[c], containee.children[c])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction containsSegmentGroup(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n\nfunction containsSegmentGroupHelper(container: UrlSegmentGroup, containee: UrlSegmentGroup, containeePaths: UrlSegment[]): boolean {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) {\n      return false;\n    }\n    if (containee.hasChildren()) {\n      return false;\n    }\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) {\n      return false;\n    }\n    for (let c in containee.children) {\n      if (!container.children[c]) {\n        return false;\n      }\n      if (!containsSegmentGroup(container.children[c], containee.children[c])) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) {\n      return false;\n    }\n    if (!container.children[PRIMARY_OUTLET]) {\n      return false;\n    }\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n\nexport function equalPath(a: UrlSegment[], b: UrlSegment[]): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i].path !== b[i].path) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NavigationEnd, Router, UrlTree } from '@angular/router';\nimport { containsTree } from './private-imports/router-url-tree';\n\nimport { NSRouterLink } from './ns-router-link';\n\n/**\n * The NSRouterLinkActive directive lets you add a CSS class to an element when the link\"s route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either \"/user\" or \"/user/bob\", the active-link class will\n * be added to the component. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"class1 class2\">Bob</a>\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"[\"class1\", \"class2\"]\">Bob</a>\n * ```\n *\n * You can configure NSRouterLinkActive by passing `exact: true`. This will add the\n * classes only when the url matches the link exactly.\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\"\n * [nsRouterLinkActiveOptions]=\"{exact: true}\">Bob</a>\n * ```\n *\n * Finally, you can apply the NSRouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div [nsRouterLinkActive]=\"active-link\" [nsRouterLinkActiveOptions]=\"{exact: true}\">\n *   <a [nsRouterLink]=\"/user/jim\">Jim</a>\n *   <a [nsRouterLink]=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either \"/user/jim\" or\n * \"/user/bob\".\n *\n * @stable\n */\n@Directive({\n  selector: '[nsRouterLinkActive]',\n  exportAs: 'routerLinkActive',\n})\nexport class NSRouterLinkActive implements OnChanges, OnDestroy, AfterContentInit {\n  // tslint:disable-line:max-line-length directive-class-suffix\n  @ContentChildren(NSRouterLink) links: QueryList<NSRouterLink>;\n\n  private classes: string[] = [];\n  private subscription: Subscription;\n  private active: boolean = false;\n\n  @Input() nsRouterLinkActiveOptions: { exact: boolean } = { exact: false };\n\n  constructor(private router: Router, private element: ElementRef, private renderer: Renderer2) {\n    this.subscription = router.events.subscribe((s) => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n  get isActive(): boolean {\n    return this.active;\n  }\n\n  ngAfterContentInit(): void {\n    this.links.changes.subscribe(() => this.update());\n    this.update();\n  }\n\n  @Input('nsRouterLinkActive')\n  set nsRouterLinkActive(data: string[] | string) {\n    if (Array.isArray(data)) {\n      this.classes = <any>data;\n    } else {\n      this.classes = data.split(' ');\n    }\n  }\n\n  ngOnChanges(_: {}): any {\n    this.update();\n  }\n  ngOnDestroy(): any {\n    this.subscription.unsubscribe();\n  }\n\n  private update(): void {\n    if (!this.links) {\n      return;\n    }\n    const hasActiveLinks = this.hasActiveLinks();\n    // react only when status has changed to prevent unnecessary dom updates\n    if (this.active !== hasActiveLinks) {\n      const currentUrlTree = this.router.parseUrl(this.router.url);\n      const isActiveLinks = this.reduceList(currentUrlTree, this.links);\n      this.classes.forEach((c) => {\n        if (isActiveLinks) {\n          this.renderer.addClass(this.element.nativeElement, c);\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, c);\n        }\n      });\n    }\n    Promise.resolve(hasActiveLinks).then((active) => (this.active = active));\n  }\n\n  private reduceList(currentUrlTree: UrlTree, q: QueryList<any>): boolean {\n    return q.reduce((res: boolean, link: NSRouterLink) => {\n      return res || containsTree(currentUrlTree, link.urlTree, this.nsRouterLinkActiveOptions.exact);\n    }, false);\n  }\n\n  private isLinkActive(router: Router): (link: NSRouterLink) => boolean {\n    return (link: NSRouterLink) => router.isActive(link.urlTree, this.nsRouterLinkActiveOptions.exact);\n  }\n\n  private hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router));\n  }\n}\n","import { Attribute, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, Directive, Inject, InjectionToken, Injector, OnDestroy, EventEmitter, Output, Type, ViewContainerRef, ElementRef, InjectFlags, NgZone } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, ChildrenOutletContexts, PRIMARY_OUTLET } from '@angular/router';\n\nimport { Frame, Page, NavigatedData, profile } from '@nativescript/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { PAGE_FACTORY, PageFactory } from '../../tokens';\nimport { NativeScriptDebug } from '../../trace';\nimport { DetachedLoader } from '../../cdk/detached-loader';\nimport { ViewUtil } from '../../view-util';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { Outlet } from './ns-location-utils';\nimport { NSRouteReuseStrategy } from './ns-route-reuse-strategy';\nimport { findTopActivatedRouteNodeForOutlet, pageRouterActivatedSymbol, loaderRefSymbol, destroyComponentRef } from './page-router-outlet-utils';\nimport { registerElement } from '../../element-registry';\nimport { PageService } from '../../cdk/frame-page/page.service';\n\nexport class PageRoute {\n  activatedRoute: BehaviorSubject<ActivatedRoute>;\n\n  constructor(startRoute: ActivatedRoute) {\n    this.activatedRoute = new BehaviorSubject(startRoute);\n  }\n}\n\nexport class DestructibleInjector implements Injector {\n  private refs = new Set<any>();\n  constructor(private destructableProviders: ProviderSet, private parent: Injector) {}\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T {\n    const ref = this.parent.get(token, notFoundValue, flags);\n    if (this.destructableProviders.has(token)) {\n      this.refs.add(ref);\n    }\n    return ref;\n  }\n  destroy() {\n    this.refs.forEach((ref) => {\n      if (ref.ngOnDestroy instanceof Function) {\n        ref.ngOnDestroy();\n      }\n    });\n    this.refs.clear();\n  }\n}\n\ntype ProviderSet = Set<Type<any> | InjectionToken<any>>;\n\nconst routeToString = function (activatedRoute: ActivatedRoute | ActivatedRouteSnapshot): string {\n  return activatedRoute.pathFromRoot.join('->');\n};\n\nregisterElement('page-router-outlet', () => Frame);\n// eslint-disable-next-line @angular-eslint/directive-selector\n@Directive({ selector: 'page-router-outlet' }) // tslint:disable-line:directive-selector\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class PageRouterOutlet implements OnDestroy {\n  // tslint:disable-line:directive-class-suffix\n  private activated: ComponentRef<any> | null = null;\n  private _activatedRoute: ActivatedRoute | null = null;\n  private detachedLoaderFactory: ComponentFactory<DetachedLoader>;\n\n  private outlet: Outlet;\n  private name: string;\n  private isEmptyOutlet: boolean;\n  private viewUtil: ViewUtil;\n  private frame: Frame;\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('activate') activateEvents = new EventEmitter<any>(); // tslint:disable-line:no-output-rename\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('deactivate') deactivateEvents = new EventEmitter<any>(); // tslint:disable-line:no-output-rename\n\n  /** @deprecated from Angular since v4 */\n  get locationInjector(): Injector {\n    return this.location.injector;\n  }\n  /** @deprecated from Angular since v4 */\n  get locationFactoryResolver(): ComponentFactoryResolver {\n    return this.resolver;\n  }\n\n  get isActivated(): boolean {\n    return !!this.activated;\n  }\n\n  get component(): unknown {\n    if (!this.activated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    return this.activated.instance;\n  }\n  get activatedRoute(): ActivatedRoute {\n    if (!this.activated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    return this._activatedRoute;\n  }\n\n  constructor(\n    private parentContexts: ChildrenOutletContexts,\n    private location: ViewContainerRef,\n    @Attribute('name') name: string,\n    @Attribute('actionBarVisibility') actionBarVisibility: string,\n    @Attribute('isEmptyOutlet') isEmptyOutlet: boolean,\n    private locationStrategy: NSLocationStrategy,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private resolver: ComponentFactoryResolver,\n    private changeDetector: ChangeDetectorRef,\n    @Inject(PAGE_FACTORY) private pageFactory: PageFactory,\n    private routeReuseStrategy: NSRouteReuseStrategy,\n    private ngZone: NgZone,\n    elRef: ElementRef,\n    viewUtil: ViewUtil\n  ) {\n    this.isEmptyOutlet = isEmptyOutlet;\n    this.frame = elRef.nativeElement;\n    this.setActionBarVisibility(actionBarVisibility);\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.constructor frame: ${this.frame}`);\n    }\n\n    this.name = name || PRIMARY_OUTLET;\n    parentContexts.onChildOutletCreated(this.name, <any>this);\n\n    this.viewUtil = viewUtil;\n    this.detachedLoaderFactory = resolver.resolveComponentFactory(DetachedLoader);\n  }\n\n  setActionBarVisibility(actionBarVisibility: string): void {\n    switch (actionBarVisibility) {\n      case 'always':\n      case 'never':\n        this.frame.actionBarVisibility = actionBarVisibility;\n        return;\n\n      default:\n        this.frame.actionBarVisibility = 'auto';\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Clear accumulated modal view page cache when page-router-outlet\n    // destroyed on modal view closing\n    this.parentContexts.onChildOutletDestroyed(this.name);\n\n    if (this.outlet) {\n      this.outlet.outletKeys.forEach((key) => {\n        this.routeReuseStrategy.clearModalCache(key);\n      });\n      this.locationStrategy.clearOutlet(this.frame);\n    } else {\n      NativeScriptDebug.routerLog('PageRouterOutlet.ngOnDestroy: no outlet available for page-router-outlet');\n    }\n\n    if (this.isActivated) {\n      const c = this.activated.instance;\n      this.activated.hostView.detach();\n      destroyComponentRef(this.activated);\n\n      this.deactivateEvents.emit(c);\n      this.activated = null;\n    }\n  }\n\n  deactivate(): void {\n    if (!this.outlet || !this.outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Currently not in page back navigation - component should be detached instead of deactivated.');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('PageRouterOutlet.deactivate() while going back - should destroy');\n    }\n\n    if (!this.isActivated) {\n      return;\n    }\n\n    const c = this.activated.instance;\n    destroyComponentRef(this.activated);\n\n    this.activated = null;\n    this._activatedRoute = null;\n\n    this.deactivateEvents.emit(c);\n  }\n\n  /**\n   * Called when the `RouteReuseStrategy` instructs to detach the subtree\n   */\n  detach(): ComponentRef<any> {\n    if (!this.isActivated) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Outlet is not activated');\n      }\n      return;\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.detach() - ${routeToString(this._activatedRoute)}`);\n    }\n\n    // Detach from ChangeDetection\n    this.activated.hostView.detach();\n\n    const component = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    return component;\n  }\n\n  /**\n   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n   */\n  attach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute) {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.attach() - ${routeToString(activatedRoute)}`);\n    }\n\n    this.activated = ref;\n\n    // reattach to ChangeDetection\n    this.activated.hostView.markForCheck();\n    this.activated.hostView.reattach();\n    this._activatedRoute = activatedRoute;\n    this.markActivatedRoute(activatedRoute);\n\n    this.locationStrategy._finishBackPageNavigation(this.frame);\n  }\n\n  /**\n   * Called by the Router to instantiate a new component during the commit phase of a navigation.\n   * This method in turn is responsible for calling the `routerOnActivate` hook of its child.\n   */\n  @profile\n  activateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver | null): void {\n    this.outlet = this.outlet || this.getOutlet(activatedRoute.snapshot);\n    if (!this.outlet) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerError('No outlet found relative to activated route');\n      }\n      return;\n    }\n\n    this.outlet.isNSEmptyOutlet = this.isEmptyOutlet;\n    this.locationStrategy.updateOutletFrame(this.outlet, this.frame, this.isEmptyOutlet);\n\n    if (this.outlet && this.outlet.isPageNavigationBack) {\n      if (NativeScriptDebug.isLogEnabled()) {\n        NativeScriptDebug.routerLog('Currently in page back navigation - component should be reattached instead of activated.');\n      }\n      this.locationStrategy._finishBackPageNavigation(this.frame);\n    }\n\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog(`PageRouterOutlet.activateWith() - ${routeToString(activatedRoute)}`);\n    }\n\n    this._activatedRoute = activatedRoute;\n\n    this.markActivatedRoute(activatedRoute);\n\n    resolver = resolver || this.resolver;\n\n    this.activateOnGoForward(activatedRoute, resolver);\n    this.activateEvents.emit(this.activated.instance);\n  }\n\n  private activateOnGoForward(activatedRoute: ActivatedRoute, loadedResolver: ComponentFactoryResolver): void {\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('PageRouterOutlet.activate() forward navigation - ' + 'create detached loader in the loader container');\n    }\n\n    const factory = this.getComponentFactory(activatedRoute, loadedResolver);\n    const page = this.pageFactory({\n      isNavigation: true,\n      componentType: factory.componentType,\n    });\n\n    const destructables = new Set([]);\n    const injector = Injector.create({\n      providers: [\n        { provide: Page, useValue: page },\n        { provide: Frame, useValue: this.frame },\n        { provide: PageRoute, useValue: new PageRoute(activatedRoute) },\n        { provide: ActivatedRoute, useValue: activatedRoute },\n        { provide: ChildrenOutletContexts, useValue: this.parentContexts.getOrCreateContext(this.name).children },\n        { provide: PageService, useClass: PageService },\n      ],\n      parent: this.location.injector,\n    });\n\n    const childInjector = new DestructibleInjector(destructables, injector);\n    const loaderRef = this.location.createComponent(this.detachedLoaderFactory, this.location.length, childInjector, []);\n    loaderRef.onDestroy(() => childInjector.destroy());\n    this.changeDetector.markForCheck();\n\n    this.activated = loaderRef.instance.loadWithFactory(factory);\n    this.activated.changeDetectorRef.detectChanges();\n    this.loadComponentInPage(page, this.activated, { activatedRoute });\n\n    this.activated[loaderRefSymbol] = loaderRef;\n  }\n\n  @profile\n  private loadComponentInPage(page: Page, componentRef: ComponentRef<any>, navigationContext): void {\n    // Component loaded. Find its root native view.\n    const componentView = componentRef.location.nativeElement;\n    // Remove it from original native parent.\n    this.viewUtil.removeChild(componentView.parent, componentView);\n    // Add it to the new page\n    this.viewUtil.appendChild(page, componentView);\n\n    const navigatedFromCallback = (<any>global).Zone.current.wrap((args: NavigatedData) => {\n      if (args.isBackNavigation) {\n        this.locationStrategy._beginBackPageNavigation(this.frame);\n        this.locationStrategy.back(null, this.frame);\n      }\n    });\n    // TODO: experiment with using NgZone instead of global above\n    // const navigatedFromCallback = (args: NavigatedData) => {\n    // \tif (args.isBackNavigation) {\n    //     this.ngZone.run(() => {\n    //       this.locationStrategy._beginBackPageNavigation(this.frame);\n    //       this.locationStrategy.back(null, this.frame);\n    //     });\n    // \t}\n    // };\n\n    page.on(Page.navigatedFromEvent, navigatedFromCallback);\n    componentRef.onDestroy(() => {\n      if (page) {\n        page.off(Page.navigatedFromEvent, navigatedFromCallback);\n        page = null;\n      }\n    });\n\n    const navOptions = this.locationStrategy._beginPageNavigation(this.frame);\n\n    // Clear refCache if navigation with clearHistory\n    if (navOptions.clearHistory) {\n      const clearCallback = () =>\n        setTimeout(() => {\n          if (this.outlet) {\n            this.routeReuseStrategy.clearCache(this.outlet.outletKeys[0]);\n          }\n        });\n\n      page.once(Page.navigatedToEvent, clearCallback);\n    }\n\n    this.frame.navigate({\n      create() {\n        return page;\n      },\n      context: navigationContext,\n      clearHistory: navOptions.clearHistory,\n      animated: navOptions.animated,\n      transition: navOptions.transition,\n    });\n  }\n\n  // Find and mark the top activated route as an activated one.\n  // In ns-location-strategy we are reusing components only if their corresponing routes\n  // are marked as activated from this method.\n  private markActivatedRoute(activatedRoute: ActivatedRoute) {\n    const queue = [];\n    queue.push(activatedRoute.snapshot);\n    let currentRoute = queue.shift();\n\n    while (currentRoute) {\n      currentRoute.children.forEach((childRoute) => {\n        queue.push(childRoute);\n      });\n\n      const topActivatedRoute = findTopActivatedRouteNodeForOutlet(currentRoute);\n      const outletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute);\n      const outlet = this.locationStrategy.findOutlet(outletKey, topActivatedRoute);\n\n      if (outlet && outlet.frames.length) {\n        topActivatedRoute[pageRouterActivatedSymbol] = true;\n        if (NativeScriptDebug.isLogEnabled()) {\n          NativeScriptDebug.routerLog('Activated route marked as page: ' + routeToString(topActivatedRoute));\n        }\n      }\n\n      currentRoute = queue.shift();\n    }\n  }\n\n  private getComponentFactory(activatedRoute: ActivatedRoute, loadedResolver: ComponentFactoryResolver): ComponentFactory<any> {\n    const { component } = activatedRoute.routeConfig;\n\n    return loadedResolver ? loadedResolver.resolveComponentFactory(component) : this.componentFactoryResolver.resolveComponentFactory(component);\n  }\n\n  private getOutlet(activatedRouteSnapshot: ActivatedRouteSnapshot): Outlet {\n    const topActivatedRoute = findTopActivatedRouteNodeForOutlet(activatedRouteSnapshot);\n    const outletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute);\n    let outlet = this.locationStrategy.findOutlet(outletKey, topActivatedRoute);\n\n    // Named lazy loaded outlet.\n    if (!outlet && this.isEmptyOutlet) {\n      const parentOutletKey = this.locationStrategy.getRouteFullPath(topActivatedRoute.parent);\n      outlet = this.locationStrategy.findOutlet(parentOutletKey, topActivatedRoute.parent);\n\n      if (outlet) {\n        outlet.outletKeys.push(outletKey);\n      }\n    }\n\n    return outlet;\n  }\n}\n","import { NSLocationStrategy } from './ns-location-strategy';\nimport { PlatformLocation, LocationChangeListener } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NativeScriptDebug } from '../../trace';\n\n@Injectable()\nexport class NativescriptPlatformLocation extends PlatformLocation {\n  constructor(private locationStrategy: NSLocationStrategy) {\n    super();\n    if (NativeScriptDebug.isLogEnabled()) {\n      NativeScriptDebug.routerLog('NativescriptPlatformLocation.constructor()');\n    }\n  }\n\n  getState(): any {\n    return undefined;\n  }\n\n  readonly hostname: string;\n  readonly href: string;\n  readonly port: string;\n  readonly protocol: string;\n\n  getBaseHrefFromDOM(): string {\n    return '/';\n  }\n\n  onPopState(fn: LocationChangeListener): VoidFunction {\n    this.locationStrategy.onPopState(fn);\n    return () => {};\n  }\n\n  onHashChange(_fn: LocationChangeListener): VoidFunction {\n    return () => {};\n  }\n\n  get search(): string {\n    return '';\n  }\n  get hash(): string {\n    return '';\n  }\n  get pathname(): string {\n    return this.locationStrategy.path();\n  }\n  set pathname(_newPath: string) {\n    throw new Error('NativescriptPlatformLocation set pathname - not implemented');\n  }\n\n  pushState(state: any, title: string, url: string): void {\n    this.locationStrategy.pushState(state, title, url, null);\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    this.locationStrategy.replaceState(state, title, url, null);\n  }\n\n  forward(): void {\n    throw new Error('NativescriptPlatformLocation.forward() - not implemented');\n  }\n\n  back(): void {\n    this.locationStrategy.back();\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { Page } from '@nativescript/core';\nimport { PageRouterOutlet } from './page-router-outlet';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ns-empty-outlet',\n  template: \"<page-router-outlet isEmptyOutlet='true'></page-router-outlet>\",\n})\nexport class NSEmptyOutletComponent {\n  @ViewChild(PageRouterOutlet, { read: PageRouterOutlet, static: false }) pageRouterOutlet: PageRouterOutlet;\n  constructor(private page: Page) {\n    if (this.page) {\n      this.page.actionBarHidden = true;\n\n      this.page.on('loaded', () => {\n        if (this.pageRouterOutlet && this.page.frame) {\n          this.pageRouterOutlet.setActionBarVisibility(this.page.frame.actionBarVisibility);\n        }\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA, Optional, SkipSelf } from '@angular/core';\nimport { RouterModule, Routes, ExtraOptions, RouteReuseStrategy } from '@angular/router';\nimport { LocationStrategy, PlatformLocation } from '@angular/common';\nimport { NSRouterLink } from './ns-router-link';\nimport { NSRouterLinkActive } from './ns-router-link-active';\nimport { PageRouterOutlet } from './page-router-outlet';\nimport { NSLocationStrategy } from './ns-location-strategy';\nimport { NativescriptPlatformLocation } from './ns-platform-location';\nimport { NSRouteReuseStrategy } from './ns-route-reuse-strategy';\nimport { RouterExtensions } from './router-extensions';\nimport { FrameService } from '../frame.service';\nimport { NSEmptyOutletComponent } from './ns-empty-outlet.component';\nimport { NativeScriptCommonModule } from '../../nativescript-common.module';\nimport { START_PATH } from '../../tokens';\n\nexport { PageRoute } from './page-router-outlet';\nexport { RouterExtensions } from './router-extensions';\nexport { Outlet, NavigationOptions, LocationState, defaultNavOptions } from './ns-location-utils';\nexport { NSRouterLink } from './ns-router-link';\nexport { NSRouterLinkActive } from './ns-router-link-active';\nexport { PageRouterOutlet } from './page-router-outlet';\nexport { NSLocationStrategy } from './ns-location-strategy';\nexport { NSEmptyOutletComponent } from './ns-empty-outlet.component';\n\nexport function provideLocationStrategy(locationStrategy: NSLocationStrategy, frameService: FrameService, startPath: string): NSLocationStrategy {\n  return locationStrategy ? locationStrategy : new NSLocationStrategy(frameService, startPath);\n}\n\n@NgModule({\n  declarations: [NSRouterLink, NSRouterLinkActive, PageRouterOutlet, NSEmptyOutletComponent],\n  entryComponents: [NSEmptyOutletComponent],\n  imports: [RouterModule, NativeScriptCommonModule],\n  exports: [RouterModule, NSRouterLink, NSRouterLinkActive, PageRouterOutlet, NSEmptyOutletComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class NativeScriptRouterModule {\n  static forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders<NativeScriptRouterModule> {\n    return {\n      ngModule: NativeScriptRouterModule,\n      providers: [\n        ...RouterModule.forRoot(routes, config).providers,\n        {\n          provide: NSLocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [[NSLocationStrategy, new Optional(), new SkipSelf()], FrameService, [new Optional(), START_PATH]],\n        },\n        { provide: LocationStrategy, useExisting: NSLocationStrategy },\n        NativescriptPlatformLocation,\n        { provide: PlatformLocation, useExisting: NativescriptPlatformLocation },\n        RouterExtensions,\n        NSRouteReuseStrategy,\n        { provide: RouteReuseStrategy, useExisting: NSRouteReuseStrategy },\n      ],\n    };\n  }\n\n  static forChild(routes: Routes): ModuleWithProviders<NativeScriptRouterModule> {\n    return { ngModule: NativeScriptRouterModule, providers: RouterModule.forChild(routes).providers };\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../../../../node_modules/zone.js/zone.d.ts\" />\n/// <reference path=\"../../../../node_modules/@nativescript/core/global-types.d.ts\" />\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { EventEmitter, isDevMode, NgZone } from '@angular/core';\nimport { Utils } from '@nativescript/core';\n\nlet currentRafId = 1;\nfunction noop() {}\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NativeScriptNgZone implements NgZone {\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly hasPendingMicrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({ enableLongStackTrace = isDevMode(), shouldCoalesceEventChangeDetection = true, shouldCoalesceRunChangeDetection = true } = {}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any)());\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n    // if shouldCoalesceRunChangeDetection is true, all tasks including event tasks will be\n    // coalesced, so shouldCoalesceEventChangeDetection option is not necessary and can be skipped.\n    self.shouldCoalesceEventChangeDetection = !shouldCoalesceRunChangeDetection && shouldCoalesceEventChangeDetection;\n    self.shouldCoalesceRunChangeDetection = shouldCoalesceRunChangeDetection;\n    self.lastRequestAnimationFrameId = -1;\n    self.nativeRequestAnimationFrame = function (cb) {\n      const nativeDispatchToMainThread = Utils[Zone.__symbol__('dispatchToMainThread')] || Utils.dispatchToMainThread;\n      nativeDispatchToMainThread(cb);\n      return currentRafId++;\n    };\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean {\n    return Zone.current.get('isAngularZone') === true;\n  }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs);\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn);\n  }\n}\n\nconst EMPTY_PAYLOAD = {};\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n  _hasPendingMicrotasks: boolean;\n\n  hasPendingMacrotasks: boolean;\n  hasPendingMicrotasks: boolean;\n  lastRequestAnimationFrameId: number;\n  /**\n   * A flag to indicate if NgZone is currently inside\n   * checkStable and to prevent re-entry. The flag is\n   * needed because it is possible to invoke the change\n   * detection from within change detection leading to\n   * incorrect behavior.\n   *\n   * For detail, please refer here,\n   * https://github.com/angular/angular/pull/40540\n   */\n  isCheckStableRunning: boolean;\n  isStable: boolean;\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can coalesce such kind of events to trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling it in an animation frame. So in the case above,\n   * the change detection will only be trigged once.\n   */\n  shouldCoalesceEventChangeDetection: boolean;\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loops trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  shouldCoalesceRunChangeDetection: boolean;\n\n  nativeRequestAnimationFrame: (callback: FrameRequestCallback) => number;\n\n  // Cache a  \"fake\" top eventTask so you don't need to schedule a new task every\n  // time you run a `checkStable`.\n  fakeTopEventTask: Task;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  // TODO: @JiaLiPassion, should check zone.isCheckStableRunning to prevent\n  // re-entry. The case is:\n  //\n  // @Component({...})\n  // export class AppComponent {\n  // constructor(private ngZone: NgZone) {\n  //   this.ngZone.onStable.subscribe(() => {\n  //     this.ngZone.run(() => console.log('stable'););\n  //   });\n  // }\n  //\n  // The onStable subscriber run another function inside ngZone\n  // which causes `checkStable()` re-entry.\n  // But this fix causes some issues in g3, so this fix will be\n  // launched in another PR.\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction delayChangeDetectionForEvents(zone: NgZonePrivate) {\n  /**\n   * We also need to check _nesting here\n   * Consider the following case with shouldCoalesceRunChangeDetection = true\n   *\n   * ngZone.run(() => {});\n   * ngZone.run(() => {});\n   *\n   * We want the two `ngZone.run()` only trigger one change detection\n   * when shouldCoalesceRunChangeDetection is true.\n   * And because in this case, change detection run in async way(requestAnimationFrame),\n   * so we also need to check the _nesting here to prevent multiple\n   * change detections.\n   */\n  if (zone.isCheckStableRunning || zone.lastRequestAnimationFrameId !== -1) {\n    return;\n  }\n  zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(global, () => {\n    // This is a work around for https://github.com/angular/angular/issues/36839.\n    // The core issue is that when event coalescing is enabled it is possible for microtasks\n    // to get flushed too early (As is the case with `Promise.then`) between the\n    // coalescing eventTasks.\n    //\n    // To workaround this we schedule a \"fake\" eventTask before we process the\n    // coalescing eventTasks. The benefit of this is that the \"fake\" container eventTask\n    //  will prevent the microtasks queue from getting drained in between the coalescing\n    // eventTask execution.\n    if (!zone.fakeTopEventTask) {\n      zone.fakeTopEventTask = Zone.root.scheduleEventTask(\n        'fakeTopEventTask',\n        () => {\n          zone.lastRequestAnimationFrameId = -1;\n          updateMicroTaskStatus(zone);\n          zone.isCheckStableRunning = true;\n          checkStable(zone);\n          zone.isCheckStableRunning = false;\n        },\n        undefined,\n        () => {},\n        () => {}\n      );\n    }\n    zone.fakeTopEventTask.invoke();\n  });\n  updateMicroTaskStatus(zone);\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  const delayChangeDetectionForEventsDelegate = () => {\n    delayChangeDetectionForEvents(zone);\n  };\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{ isAngularZone: true },\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any, applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        if ((zone.shouldCoalesceEventChangeDetection && task.type === 'eventTask') || zone.shouldCoalesceRunChangeDetection || !Utils.isMainThread()) {\n          delayChangeDetectionForEventsDelegate();\n        }\n        onLeave(zone);\n      }\n    },\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function, applyThis: any, applyArgs?: any[], source?: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        if (zone.shouldCoalesceRunChangeDetection || !Utils.isMainThread()) {\n          delayChangeDetectionForEventsDelegate();\n        }\n        onLeave(zone);\n      }\n    },\n\n    onHasTask: (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n      delegate.hasTask(target, hasTaskState);\n      if (current === target) {\n        // We are only interested in hasTask events which originate from our zone\n        // (A child hasTask event is not interesting to us)\n        if (hasTaskState.change == 'microTask') {\n          zone._hasPendingMicrotasks = hasTaskState.microTask;\n          updateMicroTaskStatus(zone);\n          checkStable(zone);\n        } else if (hasTaskState.change == 'macroTask') {\n          zone.hasPendingMacrotasks = hasTaskState.macroTask;\n        }\n      }\n    },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    },\n  });\n}\n\nfunction updateMicroTaskStatus(zone: NgZonePrivate) {\n  if (zone._hasPendingMicrotasks || zone.lastRequestAnimationFrameId !== -1) {\n    zone.hasPendingMicrotasks = true;\n  } else {\n    zone.hasPendingMicrotasks = false;\n  }\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FramePageComponent as ɵi,customFrameComponentFactory as ɵg,customPageFactoryFromFrame as ɵh} from './lib/cdk/frame-page/frame-page.component';\nexport {FramePageModule as ɵa} from './lib/cdk/frame-page/frame-page.module';\nexport {FrameDirective as ɵc,customFrameDirectiveFactory as ɵb} from './lib/cdk/frame-page/frame.directive';\nexport {PageDirective as ɵe,customPageFactory as ɵd} from './lib/cdk/frame-page/page.directive';\nexport {PageService as ɵf} from './lib/cdk/frame-page/page.service';\nexport {ItemContext as ɵk,ListViewComponent as ɵl,TEMPLATED_ITEMS_COMPONENT as ɵj,TemplateKeyDirective as ɵm} from './lib/cdk/list-view/list-view.component';\nexport {ModalDialogService as ɵn} from './lib/legacy/directives/dialogs';\nexport {FrameService as ɵp} from './lib/legacy/frame.service';\nexport {NSLocationStrategy as ɵo} from './lib/legacy/router/ns-location-strategy';"],"names":["View","LayoutBase","ContentView","ProxyViewContainer","InjectionToken","Page","platformNames","Inject","ComponentRef","GridLayout","Application","BehaviorSubject","filter","Injectable","Trace","Subject","map","PlatformRef","NgModuleRef","TextView","Color","removeTaggedAdditionalCSS","Utils","NgZone","take","profile","Sanitizer","DOCUMENT","createPlatformFactory","platformCore","ElementRef","Directive","TemplateRef","ViewContainerRef","EventEmitter","ComponentFactoryResolver","Renderer2","Output","NgModule","AbsoluteLayout","ActivityIndicator","Button","DatePicker","DockLayout","Frame","HtmlView","Image","Label","ListPicker","ListView","Placeholder","Progress","Repeater","RootLayout","ScrollView","SearchBar","SegmentedBar","SegmentedBarItem","Slider","StackLayout","FlexboxLayout","Switch","TabView","TextField","TimePicker","WebView","WrapLayout","FormattedString","Span","unsetValue","ApplicationRef","Injector","Optional","Component","ChangeDetectorRef","ViewChild","XhrFactory","addTaggedAdditionalCSS","ViewEncapsulation","getViewById","Observable","distinctUntilChanged","ViewBase","Input","ActionItem","NavigationButton","ActionBar","ObservableArray","isListLikeIterable","ɵmarkDirty","ChangeDetectionStrategy","forwardRef","IterableDiffers","ContentChild","HostListener","Host","DefaultUrlSerializer","LocationStrategy","TabViewItem","CommonModule","NO_ERRORS_SCHEMA","ErrorHandler","Device","SkipSelf","INJECTOR_SCOPE","RendererFactory2","ViewportScroller","NullViewportScroller","ApplicationModule","fromEvent","defer","startWith","Type","knownFolders","File","NG_VALUE_ACCESSOR","FormsModule","KeyframeAnimation","animationTimingFunctionConverter","parseKeyframeDeclarations","CSSHelper","eachDescendant","CssAnimationProperty","AnimationEngine","AnimationDriver","AnimationStyleNormalizer","AnimationRendererFactory","WebAnimationsStyleNormalizer","AnimationBuilder","BrowserAnimationBuilder","path","HttpXhrBackend","HttpResponse","HttpErrorResponse","HttpBackend","HttpClientModule","Router","ActivatedRoute","PRIMARY_OUTLET","NavigationEnd","ContentChildren","ChildrenOutletContexts","Attribute","PlatformLocation","RouterModule","RouteReuseStrategy","isDevMode"],"mappings":"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"}